<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="1054" MadCap:lastWidth="586">
  <head />
  <body>
    <h1>Activation strategies</h1>
    <p MadCap:conditions="Primary.Java,Primary.All languages">
      <p>Java: <br /></p>
      <p>
        <code>configuration,common().activationDepth(activationDepth);<br /></code>
      </p>
    </p>
    <p MadCap:conditions="Primary:java" />
    <p MadCap:conditions="Primary..NET">
      <p>.NET: <br /></p>
      <p>
        <code>configuration.Common.ActivationDepth(activationDepth);<br /></code>
      </p>
    </p>
    <p MadCap:conditions="Primary:net" />
    <a name="Advantage"></a>
    <h2>Advantage</h2>
    <p>Db4o default activation depth is 5. This setting gives you control over activation depth level depending on your application requirements.</p>
    <a name="Effect"></a>
    <h2>Effect</h2>
    <p>The two extremes:</p>
    <ul>
      <li>activationDepth = maximum integer value - will pop the whole object graph into the memory on every retrieved object. Can be a reasonable solution for shallow objects' design. No need to bother about manual activation;</li>
      <li>activationDepth = 0 - will reduce memory consumption to the lowest level though leaving all the activation logic for your code.</li>
    </ul>
    <a name="Alternate strategies"></a>
    <h2>Alternate strategies</h2>
    <p>If your object is not fully activated due to the default configuration settings you can activate it manually:</p>
    <p MadCap:conditions="Primary.Java,Primary.All languages">
      <p>Java: <code>ObjectContainer#activate(object,depth)</code></p>
    </p>
    <p MadCap:conditions="Primary:java" />
    <p MadCap:conditions="Primary..NET">
      <p>.NET: <code>IObjectContainer#Activate(object,depth)</code></p>
    </p>
    <p MadCap:conditions="Primary:net" />
    <p>or use specific object settings:</p>
    <p MadCap:conditions="Primary.Java,Primary.All languages">
      <p>Java:<br /></p>
      <p>
        <code>configuration.<br />objectClass("yourClass").minimumActivationDepth(minimumDepth);</code>
      </p>
      <p>
        <code>configuration.common().objectClass("yourClass").<br />maximumActivationDepth(maximumDepth);</code>
      </p>
      <p>
        <code>configuration.common().objectClass("yourClass").<br />cascadeOnActivate(bool);</code>
      </p>
      <p>
        <code>configuration.common().objectClass("yourClass").<br />objectField("field").cascadeOnActivate(bool);</code>
      </p>
    </p>
    <p MadCap:conditions="Primary:java" />
    <p MadCap:conditions="Primary..NET">
      <p>.NET:<br /></p>
      <p>
        <code>configuration.Common.ObjectClass("yourClass").<br />MinimumActivationDepth(minimumDepth);</code>
      </p>
      <p>
        <code>configuration.Common.ObjectClass("yourClass").<br />MaximumActivationDepth(maximumDepth);</code>
      </p>
      <p>
        <code>configuration.Common.ObjectClass("yourClass").<br />CascadeOnActivate(bool);</code>
      </p>
      <p>
        <code>configuration.Common.ObjectClass("yourClass").<br />ObjectField("field").CascadeOnActivate(bool);<br /></code>
      </p>
    </p>
    <p MadCap:conditions="Primary:net" />
    <p>For more information on activation strategies see <a href="../../basics/activation.htm">Activation chapter</a>.</p>
  </body>
</html>