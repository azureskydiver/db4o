<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="9" MadCap:lastHeight="782" MadCap:lastWidth="455">
    <head>
    </head>
    <body>
        <h1>TA Enhanced Example</h1>You can inject TA awareness in your persistent classes without modifying their original
code. In the current scenario this means: 

<ul><li>Generate
the <span MadCap:conditions="Primary..NET">I</span>Activatable interface declaration;</li><li>Add
bind-method implementation;</li><li>Generate
a field to keep a reference to the corresponding activator instance</li><li>Call the activate-method at the beginning of every method.</li></ul>These tasks can be fulfilled in the classes bytecode by using <a href="../../../advanced_topics/enhancement_tools.htm">Enhancement Tools</a>. 




<p MadCap:conditions="Primary.Java,Primary.All languages"><h2>TA Enhancement In Java </h2><p>TA can be enabled by bytecode injection of the above-mentioned code into the persistent classes when they are
loaded or built. (Currently persistent classes have to be "tagged" by providing
an appropriate <code>ClassFilter</code> instance.) In addition to this db4o
also explicitly needs to be configured to use the Transparent Activation instrumentation
of the persistent classes (TransparentActivationSupport).</p><p>Transparent Activation functionality requires the following jars:</p><ul><li>bloat-1.0.jar</li><li>db4o-<MadCap:variable name="Primary.CurrentVersion" />-tools.jar </li><li>db4o-<MadCap:variable name="Primary.CurrentVersion" />-taj.jar  </li><li>db4o-<MadCap:variable name="Primary.CurrentVersion" />-instrumentation.jar</li></ul><p>The following topics explain how TA enhancement can be applied to built classes:</p><ul><li><a href="ta_enhanced_example/ta_enhancement_at_load_time.htm">TA Enhancement At Loading Time</a></li><li><a href="ta_enhanced_example/ta_enhancement_at_build_time.htm">TA Enhancement At Build Time</a></li></ul></p><p MadCap:conditions="Global.Primary:java" /><p MadCap:conditions="Primary..NET"><a name="TA Enhancement In .NET "></a><h2>TA Enhancement In .NET  </h2><p>TA enhancement for .NET can be done at build or post-build time. In both cases it requires Db4oTool project distribution. </p><p>When build-time option is used Db4oEnhanceMSBuildTask is added to the build file (*.csproj or *.vbproj in Visual Studio), this requires Db4oTool.MSBuild.dll library. </p><p>In post-build enhancement case, Db4oTool.exe command line utility is used to enhanced built assemblies.</p><ul><li><a href="ta_enhanced_example/ta_enhancement_with_db4otool.htm">TA Enhancement With Db4oTool</a></li><li>Build Time Enhancement</li></ul></p></body>
</html>