<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="3293" MadCap:lastWidth="532" MadCap:conditions="Primary.Java,Primary.All languages" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4;ABC0001DEF;MustInherit;CountedObject;IncrementedId;queryStarted;queryFinished;QueryStats;q;executionTime;activationCount;storedClass;Foo;classname;storedClasses;StoredClasses;getStoredFields;GetStoredFields;storedField;getParentStoredClass;GetParentStoredClass;reflectWith;Db4oFactory;ReflectWith;self_get;self_set;LoggingReflector;IoAdapter;MyEncryptionAdapter;Io;Db4oEnhancerMSBuildTask;SensorPanel;GetOptions;UsingTask;AssemblyFile;OutputPath;TaskName;ItemGroup;Db4oEnhance;TargetPath;AfterBuild;AbstractAssemblyInstrumentation;IAssemblyInstrumentation;TAInstrumentation;tp;EnhancementExample;tacustom;Db4oPersistent;typedef;classTargetDir;jarTargetDir;MaintenanceQueue;'Barrichello';'BMW';useIndexSystem;useRamSystem;discardSmallerThan;DiscardSmallerThan;allObjects;SumPilotPoints;SelectMinPointsPilot;AveragePilotPoints;CountSubGroups;SelectPilotsAndTrainees;SelectPilotsInRange;SelectAndChangePilots;SelectTestPilots6PointsMore;SelectPilots6To12Points;SelectPilotsRandom;SelectPilotsEven;SelectAnyOnePilot;SelectDistinctPilots;SelectAllPilots;SelectAllPilotsNonGeneric;GetSortedPilots;GetPilotsSortByNameAndPoints;GetPilotsSortWithComparator;SelectPilot5Points;SelectTestPilots;SelectPilotsNumberX6;newPackage;newClass;objectField;oldField;newField;newAssembly;ObjectField;aaplication">
    <head><title>Transparent Persistence For Java Collections	<link href="../../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>Transparent Persistence For Java Collections</h1>
        <p>One of the
most valuable usages of TA/TP is in collections:</p>
        <ul>
            <li>Using
TA you don't have to worry about activating the next level of objects</li>
            <li>Using
TP you can add new members to the collection or update existing ones without
worrying about storing the changes to the object container.</li>
        </ul>
        <p>If you remember the TA basics, in order to make
an object activatable its class must implement Activatable interface. This can
be done easily with the new classes, however in collections case you will
probably want to use standard Java collection, which can't be modified. Db4o
solves this problem by deriving special activatable classes from the standard
Java collections and overriding all the public methods adding activate() call before
calling the base method. At present db4o supports all Java5 standard
collections:</p>
        <p><i>ActivatableArrayList 
ActivatableHashMap 
ActivatableHashSet 
ActivatableHashtable 
ActivatableLinkedList 
ActivatableStack 
ActivatableTreeSet</i>
        </p>
        <p>In order to make use of these
classes you will only need to add TransparentPersistenceSupport to your
configuration before opening the object container:</p>
        <MadCap:snippetBlock src="../../../Resources/Snippets/Transparent Persistence For Java Collections/TACollectionsExample.java/openObjectContainer.flsnp" />
        <p>And in the end enhance the project adding TP
support (example will be shown below).</p>
        <p>In your code you will simply use Java
collections as usual, i.e.:</p>
        <MadCap:snippetBlock src="../../../Resources/Snippets/Transparent Persistence For Java Collections/Pilot.java/Pilot.java.flsnp" />
        <MadCap:snippetBlock src="../../../Resources/Snippets/Transparent Persistence For Java Collections/Team.java/Team.java.flsnp" />
        <p>The following example code shows how Team class
can be used:</p>
        <MadCap:snippetBlock src="../../../Resources/Snippets/Transparent Persistence For Java Collections/TACollectionsExample.java/main.flsnp" />
        <p>Conversion to Activatable db4o collections and
TA enhancement will be done by an ant script using Db4oEnhancerAntTask.
This task can be integrated in compile and run script as follows:</p>
        <MadCap:snippetBlock src="../../../Resources/Snippets/Transparent Persistence For Java Collections/build.xml/build.xml.flsnp" />
        <p>If you will run this script you will see that
the new team members were saved automatically when the object container was
closed. To see the effect of the enhancer, please try to run
TACollectionExample from IDE (without enhancement), in this case standard Java
collections will be used and TA/TP will have no effect.</p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="tacollectionsjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
    </body>
</html>