<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="7" MadCap:lastHeight="729" MadCap:lastWidth="506">
    <head />
    <body>
        <h1>What Contributes to the Database Size</h1>
        <p>If you are concerned about the size of your database file, it is important to understand what contributes to it and what are the strategies to keep it down.</p>
        <h2>Object Overhead</h2>
        <p>When you create a new db4o database file it contains only the header. As soon as you start storing the information the file will grow. The size overhead per object depends on the object type.</p>
        <p>In general an object consists of value types, i.e. integers, arrays and references to other objects. If you decide to use UUIDs and version number for your objects, you will get an additional overhead.</p>
        <p>Additional overhead per object will appear from using indexes and will depend on the amount of indexes fields and indexes value types.</p>
        <h2>Your Objects Data</h2>
        <p>Of course your objects consume the space which is needed to store the data. For strings this space heavily depends on the encoding. If you want to keep the database size down consider using the <a href="../configuration/common/string_encoding.htm">UTF8 encoding</a>.</p>
        <h2>Indexes</h2>
        <p>Indexes consume additional space. Therefore you should only index fields which you actually use in queries. Furthermore you might want to remove a <a href="../configuration/objectclass/diable_class_index.htm">class-index</a> when you never query for that type.</p>
        <h2>Block Size </h2>
        <p>Block Size is a configurable value, which defines the way information is stored in db4o database. Using bigger block sizes can result in unnecessary growth of the database. For motr information see <a href="increasing_the_maximum_database_file_size.htm">Increasing The Maximum Database File Size</a></p>
        <h2>Freespace</h2>
        <p>  Freespace appears in db4o database after unneeded objects were deleted. The amount of the freespace can be controlled from the configuration. Another option to get rid of the freespace is <a href="../advanced_topics/defragment.htm">Defragment</a>. It is a good practice to run Defragment regularly to maintain the minimum database file size. </p>
        <h2>Lost Space on Crash /&#160;Process Killed</h2>
        <p>When you are using the default freespace manager the <a href="../configuration/file/freespace_configuration.htm">free space is lost</a> when the database crashes or the process is killed. This is especially true when you kill your process with the debugger while developing. In regular operations you should always try to close the database regularly. When you <a href="../advanced_topics/defragment.htm">defragment</a> the database the lost freespace is reclaimed.</p>
    </body>
</html>