<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="629" MadCap:lastWidth="571">
    <head>
    </head>
    <body>
        <h1>Query Performance</h1>
        <h2><a name="LINQ"></a><span MadCap:conditions="Primary..NET">LINQ or </span>Native Queries</h2>
        <h3>Check the Required Dependencies</h3>
        <p>When you are using <span MadCap:conditions="Primary..NET">LINQ or</span> native queries you should ensure that the query is optimized. First check that the required <MadCap:variable name="Primary.Artefacts" /> are referenced. </p>
        <p MadCap:conditions="Primary..NET">For LINQ&#160;you need to add <i>Db4objects.Db4o.Linq.dll</i> and the <i>Mono.Reflection.dll</i> assemblies to your project.        <![CDATA[ ]]><MadCap:xref href="../dependency_overview.htm" target="" title="" alt="">See "Dependency Overview"</MadCap:xref></p>
        <p MadCap:conditions="Primary..NET">For native queries you need to add these assemblies: Db4objects.Db4o.NativeQueries.dll, Db4object.Db4o.Instrumentation.dll, Cecil.FlowAnalysis.dll and Mono.Cecil.dll.        <![CDATA[ ]]><MadCap:xref href="../dependency_overview.htm" target="" title="" alt="">See "Dependency Overview"</MadCap:xref></p>
        <p MadCap:conditions="Primary.Java">For native queries you need to add these jars: db4o-X.XX-nqopt-javax.jar, db4o-X.XX-instrumentation-javax.jar, bloat-1.0.jar. <MadCap:xref href="../dependency_overview.htm" target="" title="" alt="">See "Dependency Overview"</MadCap:xref></p>
        <h3>Check that the Query is Optimized</h3>
        <p><span MadCap:conditions="Primary..NET">Both, LINQ and native queries</span><span MadCap:conditions="Primary..NET">Native queries</span> <![CDATA[ ]]>try to translate the original query to a SODA-query. If this optimization fails the query is an order of magnitude slower. </p>
        <p MadCap:conditions="Primary..NET">For the LINQ-optimization see: <MadCap:xref href="../basics/querying/linq/optimization.htm" target="" title="" alt="">See "LINQ Optimization"</MadCap:xref></p>
        <p>For the native queries see: <MadCap:xref href="../basics/querying/native_queries/native_query_optimization.htm" target="" title="" alt="">See "Native Query Optimization"</MadCap:xref></p>
        <h3>Avoid Calling Methods in Queries</h3>
        <p>The optimizer only can optimize simple access patterns. When you call a complex method within a query the optimization almost certainly fails and the query runs slowly. For example when you call you the equals method on your objects. Calling the equals method on built in types will be recognized by the optimizer. However it probably cannot find out what your equals method does.</p>
        <h2><a name="Check"></a>Check That Fields Are Indexed</h2>
        <p>Ensure that the fields you're running the queries have <a href="../basics/indexing.htm">an index</a>. Without an index db4o has to scan through all objects in order to find the right object.</p>
        <p>Note also that currently you cannot index arrays and collections. That means that queries which do check on array or collection members will be slow.</p>
        <p>Also db4o currently cannot use the index for advanced operations on strings, like end with comparisons.</p>
    </body>
</html>