<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="157" MadCap:lastWidth="1148">
    <body>
	<div class="codesnippet" MadCap:conditions="Primary.c#">
        <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">private</span> <span style="color:Blue;">void</span> UpdateSomePeople(IObjectContainer container)
{
    <span style="color:Blue;">lock</span> (dataLock)
    {
        <span style="color:Blue;">var</span> people = <span style="color:Blue;">from</span> Person p <span style="color:Blue;">in</span> container
                     <span style="color:Blue;">where</span> p.Name.Equals(<span style="color:#A31515;">&quot;Joe&quot;</span>)
                     <span style="color:Blue;">select</span> p;
        <span style="color:Blue;">foreach</span> (Person joe <span style="color:Blue;">in</span> people)
        {
            joe.Name = <span style="color:#A31515;">&quot;New Joe&quot;</span>;
            container.Store(joe);
        }
    }
}</pre>
		<div class="codesnippet-meta">
			LockingOperations.cs: Grab the lock protecting the data
			<div class="codedownload">
				<a href="Example-concurrency-locking-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a>
			</div>
			<div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div>
		</div>
	</div>

    </body>
</html>