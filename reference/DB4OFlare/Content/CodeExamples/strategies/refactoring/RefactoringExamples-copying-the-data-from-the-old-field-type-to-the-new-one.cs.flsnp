<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="157" MadCap:lastWidth="1148">
    <body>
	<div class="codesnippet" MadCap:conditions="Primary.c#">
        <pre class="prettyprint" xml:space="preserve">using (IObjectContainer container = Db4oEmbedded.OpenFile(&quot;database.db4o&quot;))
{
    // first get all objects which should be updated
    IList&lt;Person&gt; persons = container.Query&lt;Person&gt;();
    foreach (Person person in persons)
    {
        // get the database-meta data about this object-type
        IStoredClass dbClass = container.Ext().StoredClass(person);
        // get the old field which was an int-type
        IStoredField oldField = dbClass.StoredField(&quot;id&quot;, typeof (int));
        if(null!=oldField)
        {
            // Access the old data and copy it to the new field!
            Object oldValue = oldField.Get(person);
            if (null != oldValue)
            {
                person.id = new Identity((int)oldValue);
                container.Store(person);
            }
        }
    }
}
</pre>
		<div class="codesnippet-meta">
			RefactoringExamples.cs: copying the data from the old field type to the new one
			<div class="codedownload">
				<a href="Example-strategies-refactoring-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a>
			</div>
			<div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div>
		</div>
	</div>

    </body>
</html>