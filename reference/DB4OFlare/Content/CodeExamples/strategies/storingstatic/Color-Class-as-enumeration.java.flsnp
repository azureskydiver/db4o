<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="157" MadCap:lastWidth="1148">
    <body>
	<div class="codesnippet" MadCap:conditions="Primary.Java">
        <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">public</span> <span style="color:Blue;">final</span> <span style="color:Blue;">class</span> Color {
    <span style="color:Blue;">public</span> <span style="color:Blue;">final</span> <span style="color:Blue;">static</span> Color BLACK = <span style="color:Blue;">new</span> Color(0,0,0);
    <span style="color:Blue;">public</span> <span style="color:Blue;">final</span> <span style="color:Blue;">static</span> Color WHITE = <span style="color:Blue;">new</span> Color(255,255,255);
    <span style="color:Blue;">public</span> <span style="color:Blue;">final</span> <span style="color:Blue;">static</span> Color RED = <span style="color:Blue;">new</span> Color(255,0,0);
    <span style="color:Blue;">public</span> <span style="color:Blue;">final</span> <span style="color:Blue;">static</span> Color GREEN = <span style="color:Blue;">new</span> Color(0,255,0);
    <span style="color:Blue;">public</span> <span style="color:Blue;">final</span> <span style="color:Blue;">static</span> Color BLUE = <span style="color:Blue;">new</span> Color(0,0,255);

    <span style="color:Blue;">private</span> <span style="color:Blue;">final</span> <span style="color:Blue;">int</span> red;
    <span style="color:Blue;">private</span> <span style="color:Blue;">final</span> <span style="color:Blue;">int</span> green;
    <span style="color:Blue;">private</span> <span style="color:Blue;">final</span> <span style="color:Blue;">int</span> blue;

    <span style="color:Blue;">private</span> Color(<span style="color:Blue;">int</span> red, <span style="color:Blue;">int</span> green, <span style="color:Blue;">int</span> blue) {
        <span style="color:Blue;">this</span>.red = red;
        <span style="color:Blue;">this</span>.green = green;
        <span style="color:Blue;">this</span>.blue = blue;
    }

    <span style="color:Blue;">public</span> <span style="color:Blue;">int</span> getRed() {
        <span style="color:Blue;">return</span> red;
    }

    <span style="color:Blue;">public</span> <span style="color:Blue;">int</span> getGreen() {
        <span style="color:Blue;">return</span> green;
    }

    <span style="color:Blue;">public</span> <span style="color:Blue;">int</span> getBlue() {
        <span style="color:Blue;">return</span> blue;
    }

    @Override
    <span style="color:Blue;">public</span> <span style="color:Blue;">boolean</span> equals(Object o) {
        <span style="color:Blue;">if</span> (<span style="color:Blue;">this</span> == o) <span style="color:Blue;">return</span> <span style="color:Blue;">true</span>;
        <span style="color:Blue;">if</span> (o == <span style="color:Blue;">null</span> || getClass() != o.getClass()) <span style="color:Blue;">return</span> <span style="color:Blue;">false</span>;

        Color color = (Color) o;

        <span style="color:Blue;">if</span> (blue != color.blue) <span style="color:Blue;">return</span> <span style="color:Blue;">false</span>;
        <span style="color:Blue;">if</span> (green != color.green) <span style="color:Blue;">return</span> <span style="color:Blue;">false</span>;
        <span style="color:Blue;">if</span> (red != color.red) <span style="color:Blue;">return</span> <span style="color:Blue;">false</span>;

        <span style="color:Blue;">return</span> <span style="color:Blue;">true</span>;
    }

    @Override
    <span style="color:Blue;">public</span> <span style="color:Blue;">int</span> hashCode() {
        <span style="color:Blue;">int</span> result = red;
        result = 31 * result + green;
        result = 31 * result + blue;
        <span style="color:Blue;">return</span> result;
    }

    @Override
    <span style="color:Blue;">public</span> String toString() {
        <span style="color:Blue;">return</span> <span style="color:#A31515;">&quot;Color{&quot;</span> +
                <span style="color:#A31515;">&quot;red=&quot;</span> + red +
                <span style="color:#A31515;">&quot;, green=&quot;</span> + green +
                <span style="color:#A31515;">&quot;, blue=&quot;</span> + blue +
                <span style="color:#A31515;">'}'</span>;
    }
}</pre>
		<div class="codesnippet-meta">
			Color.java: Class as enumeration
			<div class="codedownload">
				<a href="Example-strategies-storingstatic-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a>
			</div>
			<div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div>
		</div>
	</div>

    </body>
</html>