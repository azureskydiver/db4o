<?xml version="1.0" encoding="utf-8"?> <html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="309" MadCap:lastWidth="1029">    <head>    </head>    <body>        <pre class="prettyprint" xml:space="preserve">MemoryStorageExample.cs: reuseMemoryBin
public static void ReuseMemoryBin()
         {
            // Create original storage
            MemoryStorage origStorage = new MemoryStorage();
            IEmbeddedConfiguration origConfig = Db4oEmbedded.NewConfiguration();
            origConfig.File.Storage = origStorage;
            // A new MemoryBin identified by Db4oUri will be created
            IObjectContainer origDb = Db4oEmbedded.OpenFile(origConfig, Db4oUri);
            origDb.Store(new Book(&quot;Alice in Wonderland&quot;));
            origDb.Close();

            // Retrieve original bin by its URI
            MemoryBin origBin = origStorage.Bin(Db4oUri);
            // This bin contains the database data
            byte[] data = origBin.Data();

            // Create a new bin, using the data from the original bin
            MemoryBin newBin = new MemoryBin(data, new DoublingGrowthStrategy());
            MemoryStorage newStorage = new MemoryStorage();
            // Assign the new bin to a new MemoryStorage using the same Db4oUri
            newStorage.Bin(Db4oUri, newBin);
            IEmbeddedConfiguration newConfig = Db4oEmbedded.NewConfiguration();
            newConfig.File.Storage = origStorage;
            // Open object container using the new bin with the original data
            IObjectContainer newDb = Db4oEmbedded.OpenFile(newConfig, Db4oUri);
            // test that the data is still there
            Book book = (Book)newDb
                    .QueryByExample(new Book(&quot;Alice in Wonderland&quot;))[0];
            System.Console.WriteLine(book);
            newDb.Close();
        }</pre>    </body></html>