<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="1511" MadCap:lastWidth="608">
    <head><title>Building Full Distribution	<link href="../Resources/Stylesheets/OnlineStyle.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>Building Full Distribution</h1>
        <p>Building full distribution will allow you to get the same db4o packages as you can get from db4o download center. However, the flexibility of the build project also allows you to get only parts of it, like only java distro, only documentation, only tests etc.</p>
        <p>The following documentation explains how to build a full distribution using Eclipse version 3.4 Ganymede. It is assumed that you have <a href="http://ant.apache.org/">ant</a> and one of Eclipse SVN clients (<a href="http://subclipse.tigris.org/">Subclipse</a> or <a href="http://www.eclipse.org/subversive/">Subversive</a>) installed.  </p><a name="Projects Required "></a>
        <h2>Projects Required </h2>
        <p>In order to build db4o you will need to check out the following
projects.
</p>
        <p>bloat - bytecode
optimization library, required for db4o NQ optimizer</p>
        <p>db4o.cs - db4o client/server library code  </p>
        <p>db4o.instrumentation - db4o instrumentation </p>
        <p>db4o.net - db4o .NET native sources (.NET specific code that cannot be converted from Java) </p>
        <p>db4obuild - db4o
build tool, contains build scripts and other data necessary to build the distro </p>
        <p>db4obuild.tests - tests for db4obuild project </p>
        <p>db4oj - db4o core</p>
        <p>db4oj.optional - db4o optional library code </p>
        <p>db4oj.tests - db4o tests package </p>
        <p>db4onqopt - db4o NQ
optimizer  </p>
        <p>db4otaj - TA instrumentation</p>
        <p>db4otaj.tests.integration - TA instrumentation tests </p>
        <p>db4otools - bytecode instrumentation for db4o </p>
        <p>db4ounit - db4o unit-test framework </p>
        <p>db4ounit.extensions - db4o unit-test framework extensions</p>
        <p>decaf /decaf, decaf/annotations, decaf/decaf.functional.tests, decaf/decaf.tests - JDK versions converter, allows generating db4o libraries for JDK1.1 - JDK1.6 from a single code base.</p>
        <p>docWiki - reference documentation for db4o  </p>
        <p>doctor -
documentation generation tool, required for building interactive tutorial</p>
        <p>osgi-projects/db4o-osgi - db4o OSGI library</p>
        <p>osgi-projects/db4o-osgi-tests - tests for db4o OSGI</p>
        <p>sharpen\sharpen.builder, sharpen\sharpen.core - java to c#converter plugin for Eclipse. These are not needed if you are only interested in building java distribution </p>
        <p>tutorial -
interactive tutorial</p><a name="machine.properties"></a>
        <h3>machine.properties</h3>
        <p>You will need to
create machine.properties file in db4obuild folder. The contents of the
file
can be copied from build.xml (see the comments at the beginning of the
file). Modify the paths where applicable to set the build variables for
your environment.  </p>
        <p>If you do not have a JDK 1.3 installed and you want to use
JDK 5 or JDK 6 to build db4o for Java 1.1, you will need this line:</p>
        <p><code>file.compiler.jdk1.3.args.optional=-source
1.3</code>
        </p>
        <p>An example of the minimum machine.properties file:</p>
        <p style="text-align: left;">dir.workspace=c:/workspaces/db4obuild <br />file.compiler.jdk1.3=c:/java/jdk/jdk1.6.0/bin/javac.exe<br />file.jvm.jdk1.5=C:/java/jdk1.6.0/bin/java <br />dir.compactframework=C:/Program Files/Microsoft.NET/SDK/CompactFramework<br />eclipse.home=c:/java/eclipse-3.3.1 <br />file.compiler.jdk1.3.args.optional=-source 1.3<br />eclipse.startup.jar=c:/java/eclipse-3.3.1/plugins/org.eclipse.equinox.launcher_1.0.1.R33x_v20070828.jar <br />font.pdf.base=C:/WINDOWS/Fonts/VERDANA.TTF no.ftp=true  </p><a name="Build Preparation"></a>
        <h2>Build Preparation</h2>
        <p>First you will need to run some preparation scripts. This is done only once per workspace and should not be repeated in the future.</p>
        <p>Run build-db4obuild.xml, this will compile some of the tools used in the build process.</p>
        <p>You will need to generate a key to sign the tutorial applet. Use the following commands:</p>
        <p>keytool -genkey -alias db4objects -keyalg rsa</p>
        <p>keytool -export -alias db4objects -file [path]/db4obuild/config/db4objects.crt </p>
        <p>Use "kistoa" (without quotes) as your keypass and storepass. </p>
        <p>Replace [path] with the path to db4obuild project on your system and make sure that db4objects.crt file is created in db4obuild/config folder.</p>
        <p>If you've already generated db4objects key pair before, you will need to delete it before re-generating:</p>
        <p>keytool -delete -alias db4objects </p>
        <p>You will need to add ant-contrib.jar to your eclipse ant. You can download ant-contib.jar at:</p>
        <p><a href="http://sourceforge.net/projects/ant-contrib/">http://sourceforge.net/projects/ant-contrib</a>
        </p>
        <ul>
            <li>Add ant-contib jar to ant folder in eclipse/plugins.</li>
            <li>After this is done go to Window-&gt;Preferences menu in Eclipse.</li>
            <li>Select Ant-&gt;Runtime in the list. </li>
            <li>Then select "Ant Home Entries".</li>
            <li>Press "Add External Jar"
and select ant-contib.jar location in the plugins folder.</li>
        </ul><a name="Running The Build"></a>
        <h2>Running The Build</h2>
        <p>Now everything is ready to run db4o build. Right-click build.xml file and
select "Run As/Ant Build". You will need to run "buildall" target to generate java and .NET distribution.   </p>
    </body>
</html>