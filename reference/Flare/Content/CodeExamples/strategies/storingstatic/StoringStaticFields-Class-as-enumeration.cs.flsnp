<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="157" MadCap:lastWidth="1148">
    <body>
	<div class="codesnippet" MadCap:conditions="Primary.c#">
        <pre class="prettyprint" xml:space="preserve">public sealed class Color
{
    public static readonly Color Black = new Color(0, 0, 0);
    public static readonly Color White = new Color(255, 255, 255);
    public static readonly Color Red = new Color(255, 0, 0);
    public static readonly Color Green = new Color(0, 255, 0);
    public static readonly Color Blue = new Color(0, 0, 255);

    private readonly int red;
    private readonly int green;
    private readonly int blue;

    private Color(int red, int green, int blue)
    {
        this.red = red;
        this.green = green;
        this.blue = blue;
    }

    public int RedValue
    {
        get { return red; }
    }

    public int GreenValue
    {
        get { return green; }
    }

    public int BlueValue
    {
        get { return blue; }
    }

    public bool Equals(Color other)
    {
        if (ReferenceEquals(null, other)) return false;
        if (ReferenceEquals(this, other)) return true;
        return other.red == red &amp;&amp; other.green == green &amp;&amp; other.blue == blue;
    }

    public override bool Equals(object obj)
    {
        if (ReferenceEquals(null, obj)) return false;
        if (ReferenceEquals(this, obj)) return true;
        if (obj.GetType() != typeof (Color)) return false;
        return Equals((Color) obj);
    }

    public override int GetHashCode()
    {
        unchecked
        {
            int result = red;
            result = (result*397) ^ green;
            result = (result*397) ^ blue;
            return result;
        }
    }

    public override string ToString()
    {
        return string.Format(&quot;Red: {0}, Green: {1}, Blue: {2}&quot;, red, green, blue);
    }
}</pre>
		<div class="codesnippet-meta">
			StoringStaticFields.cs: Class as enumeration
			<div class="codedownload">
				<a href="Example-strategies-storingstatic-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a>
			</div>
			<div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div>
		</div>
	</div>

    </body>
</html>