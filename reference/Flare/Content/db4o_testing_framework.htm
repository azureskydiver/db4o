<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="555" MadCap:lastWidth="628" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;objectContainer;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;a1;b1;c1;b2;uncomment;antlr;asm;attrs;cglib;ehcache;jta;log4j">
    <head><title>Db4o Testing Framework	<link href="Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>Db4o Testing Framework</h1>
        <p>db4ounit is a minimal xUnit (jUnit, NUnit)
style testing framework. Db4ounit framework was created to fulfill the
following requirements:</p>
        <ul>
            <li>the core tests should
be run against JDK1.1 </li>
            <li>it should be possible
to automatically convert test cases from Java to .NET. </li>
        </ul>
        <p>db4ounit design deviates from vanilla xUnit
in some respect, but if you know xUnit, db4ounit should look very familiar. </p>
        <p>db4ounit itself is completely agnostic of
db4o, but there is the db4ounit.extensions module which provides a base class
for db4o specific test cases with different fixtures, etc.</p>
        <p>Db4ounit and db4ounit.extensions are
supplied as a source code for both java and .NET. Java version also comes with
a compiled library: db4o-6.0-db4ounit.jar, which allows you to run your tests
from a separate package.</p>
        <p>If
you've found a bug and want to supply a test case to help db4o to fix the issue
quickly, the best option would be to supply your code in the java db4ounit
format. This format allows very easy integration of a new test case into db4o
test suite: only copy/paste is required to put your test class code into the
framework using Eclipse.</p>
        <p> More Reading:<ul><li><p><a href="db4o_testing_framework/db4ounit_methods.htm">Db4ounit Methods</a></p></li><li><p><a href="db4o_testing_framework/creating_a_sample_test.htm">Creating A Sample Test</a></p></li><li><p><a href="db4o_testing_framework/running_the_tests.htm">Running The Tests</a></p></li></ul></p>
    </body>
</html>