<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>NQ Optimization At Load Time	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>NQ Optimization At Load Time</h1>

<p><font color="#990000">This topic applies to Java version only</font></p><p><b>Note: This will not work with JDK1.1.</b></p>

<p>Native Query predicates can be optimized when they are loaded into JVM. In order to do that you should make use of db4o <a href="../../implementation_strategies/enhancement_tools.html" class="wikiLink">Enhancement Tools</a>. </p><p>The idea is very simple: </p><ul><li>you create your application without any worries about NQ optimization</li><li>when the application is ready, you use a special starter class, which calls a special classloader to instrument your predicates and start the application.</li></ul><p>Let's look how this is done on an example. We will use a well-known <a href="nq_optimization_at_load_time/pilot.html" class="wikiLink">Pilot</a> class, store it and use NQ to retrieve it:</p><MadCap:snippetBlock src="../../Resources/Snippets/NQ Optimization At Load Time/NQExample.java/main.flsnp" /> </p><MadCap:snippetBlock src="../../Resources/Snippets/NQ Optimization At Load Time/NQExample.java/storePilots.flsnp" />  </p><MadCap:snippetBlock src="../../Resources/Snippets/NQ Optimization At Load Time/NQExample.java/selectPilot5Points.flsnp" />/p><p>We will need to create a starter class, which will call the main method of the NQExample:</p><MadCap:snippetBlock src="../../Resources/Snippets/NQ Optimization At Load Time/NQEnhancedStarter.java/main.flsnp" /></p><p>That's all. Now you can run your application using NQEnhancedStarter and all the predicated will be optimized while they are loaded. This will also save time on optimization at runtime. </p></div>
    </div>
    
  <p>Download example code:</p>        <p></p></body></html>