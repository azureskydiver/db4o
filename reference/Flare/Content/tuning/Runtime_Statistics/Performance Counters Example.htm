<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="5" MadCap:lastHeight="821" MadCap:lastWidth="624" MadCap:conditions="Primary..NET,Primary.All languages">
    <head>
    </head>
    <body>
        <h1>Performance Counters Example</h1>
        <p>On .NET platform db4o uses . <a href="http://msdn.microsoft.com/en-us/library/aa373083(VS.85).aspx">Performance Counters</a> to collect runtime statistics. Performance counters data can be collected and analyzed using  <a href="http://technet.microsoft.com/en-us/library/bb490957.aspx">PerfMon</a>. PerfMon is a standard tool that comes with windows installation and you can access it by typing perfmon in the command line. This tutorial is based on perfmon from Windows Vista and you might find some differences from your version.</p>
        <p>The first step to be able consume monitoring information is to let windows know about the counters which means that you either run Db4oTool with the install-performance-counters command line parameter or call the method <code>Db4oPerformanceCounters.Install()</code> from your code. Note that this step is required only once per machine running db4o and also that it requires administrative rights so you probably will perform it at application install time (as opposed to runtime).</p>
        <p>All that you need to do to enable statistics collection in your application is to add a respective statistic to the Common Configuration provider, i.e:</p><code>IEmbeddedConfiguration config = Db4oEmbedded.NewConfiguration(); <br /></code><code>config.Common.Add(new IOMonitoringSupport()); <br /></code><code>config.Common.Add(new QueryMonitoringSupport()); <br /></code><code>config.Common.Add(new NativeQueryMonitoringSupport()); <br /></code><code>config.Common.Add(new ReferenceSystemMonitoringSupport()); </code><code><br />config.Common.Add(new FreespaceMonitoringSupport()); <br /></code><code>config.Common.Add(new NetworkingMonitoringSupport()); </code>
        <p>Statistic classes are located in Db4objects.Db4o.Optional.dll, and networking specific statistics are located in Db4objects.Db4o.CS.dll.</p>
        <p>Note that since gathering these statistics does introduce some performance overhead (for most of the statistics this overhead is so small that it is immeasurable) each set of runtime statistics (Queries, FreeSpaceManager, ReferenceSystem, etc.) must be configured independently (so you can decide which ones you want to track and pay the performance hit only for those ones).</p>
        <p>Statistics can be collected for both networked and standalone mode and are enabled per object container (database file) so you can monitor as many open databases as you want.</p>
        <p>We will look at the example of networking mode to cover both.</p>
        <p>The following code will be used to configure the client and the server:</p>
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Monitoring Example/Monitoring Example.cs/Configure.cs.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Monitoring Example/Monitoring Example.vb/Configure.vb.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>The client will store some objects to the database and perform some queries:</p>
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Monitoring Example/Monitoring Example.cs/executeSodaQuery.cs.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Monitoring Example/Monitoring Example.vb/ExecuteSodaQuery.vb.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Monitoring Example/Monitoring Example.cs/executeOptimizedNativeQuery.cs.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Monitoring Example/Monitoring Example.vb/executeOptimizedNativeQuery.vb.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Monitoring Example/Monitoring Example.cs/executeUnOptimizedNativeQuery.cs.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Monitoring Example/Monitoring Example.vb/executeUnOptimizedNativeQuery.vb.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>Please, don't forget that unoptimized Native Queries require the Item class to be available on the server.</p>
        <p>Now start perfmon, select "Performance Monitor" in the tree view on the left and click "+" button to select performance counters:</p>
        <p>
            <img src="perfmon-add_counters.jpg" />
        </p>
        <p>In the available counters list you should select db4o and counters you are interested in. In the "Instances of selected object" you will see your client application. If you are running more than one db4o application you will be able to select them there as well. Note, that for standalone mode you will see the name of the database file in the list. Click add to move the counters in the "Added counters" list and click "Ok" to proceed.</p>
        <p>You will see a screen similar to this:</p>
        <p>
            <img src="perfmon-graphjpg.jpg" />
        </p>
        <p>You may find it useful to change to graph type to understand the results better. You can also pause to freeze the view, change the properties of the analysis (i.e. add or remove counters).</p>
        <p>The following image shows the graph with only bytes sent and bytes received counters selected:</p>
        <p>
            <img src="perfmon-bytes_sent_rcv.jpg" />
        </p>
        <p>For more information please refer to  <a href="http://technet.microsoft.com/en-us/library/bb490957.aspx">perfmon</a>  help.</p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages"><a href="MonitoringDemoVb.zip">VB.NET </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages"><a href="MonitoringDemoCS.zip">c# </a>
            </MadCap:conditionalText>
        </p>
    </body>
</html>