<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Activation strategies	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>Activation strategies</h1><div id="TOC"><div id="TOCinner"><span class="TOCtitle">Contents</span><div class="TOCcontents"><ul><li><a href ="#Advantage">Advantage</a></li><li><a href ="#Effect">Effect</a></li><li><a href ="#Alternate strategies">Alternate strategies</a></li></ul></li></ul></div></div></div>
<p MadCap:conditions="Primary.Java">
<p>Java: </p><p><code>configuration.activationDepth(activationDepth)</code></p>
</p><p MadCap:conditions="Primary:java" />
<p MadCap:conditions="Primary.Print"><p>.NET:   </p>
<p><code>configuration.ActivationDepth(activationDepth)</code></p>
</p><p MadCap:conditions="Primary:net" />
<a name="Advantage"></a><h2>Advantage</h2>
<p>Db4o default activation depth is 5. This setting gives you control over activation depth level depending on your application requirements.</p>
<a name="Effect"></a><h2>Effect</h2>
<p>The two extremes:</p>
<ul>
<li>activationDepth = maximum integer value - will pop the whole object graph into the memory on every retrieved object. Can be a reasonable solution for shallow objects' design. No need to bother about manual activation;</li>
<li>activationDepth = 0 - will reduce memory consumption to the lowest level though leaving all the activation logic for your code.</li></ul>

<a name="Alternate strategies"></a><h2>Alternate strategies</h2>
<p>If your object is not fully activated due to the default configuration settings you can activate it manually:</p>
<p MadCap:conditions="Primary.Java">
<p>Java: <code>ObjectContainer#activate(object,depth)</code></p>
</p><p MadCap:conditions="Primary:java" />
<p MadCap:conditions="Primary.Print">
<p>.NET: <code>IObjectContainer#Activate(object,depth)</code></p>
</p><p MadCap:conditions="Primary:net" />
<p>or use specific object settings:</p>
<p MadCap:conditions="Primary.Java">
<p>Java:</p>
<p><code>configuration.objectClass("yourClass").minimumActivationDepth(minimumDepth)</code> <code>configuration.objectClass("yourClass").maximumActivationDepth(maximumDepth)</code> <code>configuration.objectClass("yourClass").cascadeOnActivate (bool)</code> <code>configuration.objectClass("yourClass").objectField("field").cascadeOnActivate(bool)</code></p>
</p><p MadCap:conditions="Primary:java" />
<p MadCap:conditions="Primary.Print">
<p>.NET:</p>
<p><code>configuration.ObjectClass("yourClass").MinimumActivationDepth(minimumDepth)</code> <code>configuration.ObjectClass("yourClass").MaximumActivationDepth(maximumDepth)</code> <code>configuration.ObjectClass("yourClass").CascadeOnActivate (bool)</code> <code>configuration.ObjectClass("yourClass").ObjectField("field").CascadeOnActivate(bool)</code></p>
</p><p MadCap:conditions="Primary:net" />
<p>For more information on activation strategies see <a href="../../object_lifecycle/activation.html" class="wikiLink">Activation chapter</a>.</p></div>
    </div>
    
  </body></html>
