<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Inheritance hierarchies	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>Inheritance hierarchies</h1><div id="TOC"><div id="TOCinner"><span class="TOCtitle">Contents</span><div class="TOCcontents"><ul><li><a href ="#Advantage">Advantage</a></li><li><a href ="#Effect">Effect</a></li><li><a href ="#Alternate strategies">Alternate strategies</a></li></ul></li></ul></div></div></div>

<p>Do not create inheritance hierarchies, if you don't need them. </p>

<a name="Advantage"></a><h2>Advantage</h2>
<p>Avoiding inheritance hierarchies will help you to get better performance as only actual classes will be kept in the class index and in the database.</p>
<a name="Effect"></a><h2>Effect</h2>
<p>Every class in the hierarchy requires db4o to maintain a class index. It is also true for abstract classes and interfaces since db4o has to be able to run a query against them.</p>
<a name="Alternate strategies"></a><h2>Alternate strategies</h2>
<p>Class hierarchies and interfaces may be valuable for your application design. You can also use interface/superclass to query for implementations/subclasses.</p></div>
    </div>
    
  </body></html>
