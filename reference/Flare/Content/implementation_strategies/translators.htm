<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Translators	<link href="../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>Translators</h1>
<p>The <a href="../object_lifecycle/object_construction.html" class="wikiLink">Object_Construction</a> chapter covers the alternative configurations db4o offers for object reinstantiation. What's left to see is how we can store objects of a class that can't be cleanly stored with either of these approaches.</p><p><div class="childTopicList">More Reading:<ul>
<li><p><a href="translators/java_example_class.html" class="wikiLink">Java Example Class</a></p></li>
<li><p><a href="translators/.net_example_class.html" class="wikiLink">.NET Example Class</a></p></li>
<li><p><a href="translators/the_translator_api.html" class="wikiLink">The Translator API</a></p></li>
<li><p><a href="translators/.net_translator_implementation.html" class="wikiLink">.NET Translator Implementation</a></p></li>
<li><p><a href="translators/java_translator_implementation.html" class="wikiLink">Java Translator Implementation</a></p></li>
<li><p><a href="translators/built-in_translators.html" class="wikiLink">Built-In Translators</a></p></li>
</ul></div>
 </p></div>
    </div>
    
  </body></html>
