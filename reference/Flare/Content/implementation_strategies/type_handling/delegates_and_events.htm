<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Delegates And Events	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>Delegates And Events</h1>
<p><font color="#990000">This topic applies to .NET version only</font>   </p>
<p><p MadCap:conditions="Primary.Print"></p>
<p>Db4o rules for delegate fields are very straightforward: <b>delegates are simply not stored.</b>  Events and delegates are generally used for binding user interface elements and domain models together. The Db4o team felt that not storing delegate fields by default was more appropriate than opening what could potentially be a very nasty can of worms (just think of a text box bound to a Customer.Changed event).  After careful thought we can easily add delegate persistence to our domain model by either installing translators for the delegate types of interest or reconnecting the necessary objects upon activation using callbacks.  For details see the specific chapters on <a href="../translators.htm" class="wikiLink">Translators</a> and <a href="../callbacks.htm" class="wikiLink">Callbacks</a>.  </p><p MadCap:conditions="Primary:net" /> </p></div>
    </div>
    
  </body></html>
