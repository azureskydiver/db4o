<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="1193" MadCap:lastWidth="463" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4;ABC0001DEF;MustInherit;CountedObject;IncrementedId;queryStarted;queryFinished;QueryStats;q;executionTime;activationCount;storedClass;Foo;classname;storedClasses;StoredClasses;getStoredFields;GetStoredFields;storedField;getParentStoredClass;GetParentStoredClass;reflectWith;Db4oFactory;ReflectWith;self_get;self_set;LoggingReflector;IoAdapter;MyEncryptionAdapter;Io;Db4oEnhancerMSBuildTask;SensorPanel;GetOptions;UsingTask;AssemblyFile;OutputPath;TaskName;ItemGroup;Db4oEnhance;TargetPath;AfterBuild;AbstractAssemblyInstrumentation;IAssemblyInstrumentation;TAInstrumentation;tp;EnhancementExample;tacustom;Db4oPersistent;typedef;classTargetDir;jarTargetDir;MaintenanceQueue">
    <head><title>Exception Types	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>
            <MadCap:keyword term="Exceptions" />Exception Types</h1>
        <p>Using db4o you will have to deal with db4o-specific
exceptions and system exceptions thrown
directly out of db4o (like OutOfMemory error in Java or System.Exception in
.NET).</p>
        <p>Db4o-specific exceptions are Unchecked exceptions, which all
inherit from a single root class Db4oException.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>In Java Unchecked exceptions are inherited from
RuntimeExceptions class, while in .NET all exceptions are unchecked.</p>
        </p>
        <p MadCap:conditions="Primary:java" />
        <p>Db4o exceptions are chained; you can get the cause of the
exception using:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java: </p>
            <p><code>db4oException.getCause();</code>
            </p>
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <p>c#: </p>
            <p><code>db4oException.Source;</code>
            </p>
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <p>VB: </p>
            <p><code>db4oException.Source;</code>
            </p>
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>In order to see all db4o-specific exceptions you can examine
the hierarchy of Db4oException class. Currently the following exceptions are
available:</p>
        <p><b>Db4oException </b>- db4o
exception wrapper: exceptions occurring during internal processing will be
proliferated to the client calling code encapsulated in an exception of this
type.</p>
        <p><b>BackupInProgressException</b> - an exception to be thrown when another process is already busy with the backup. </p>
        <p><b>ConstraintViolationException
</b>- base class for all
constraint exceptions.</p>
        <p><b>UniqueFieldValueConstraintViolationException</b> - an exception to be used to determine
constraint violation on commit.</p>
        <p><b>DatabaseClosedException</b> - an exception to be thrown when the database was closed or failed to open. </p>
        <p><b>DatabaseFileLockedException</b> - this exception is thrown during any of db4o open calls if the database file is locked by another process. </p>
        <p><b>DatabaseMaximumSizeReachedException</b> - this exception is thrown if the database size is bigger than possible. </p>
        <p><b>DatabaseReadOnlyException</b> - an exception to be thrown when a write operation was attempted on a database in read-only mode.</p><b>GlobalOnlyConfigException</b> - this exception is thrown when a global-only configuration setting is attempted for the local configuration. <p><b>IncompatibleFileFormatException</b> - an exception to be thrown when an open operation is attempted on a file(database), which format is incompatible with the current version of db4o.</p><p><b>InvalidIDException</b> - an exception to be thrown when an ID format supplied to #bind or #getById methods is incorrect. </p><p><b>InvalidPasswordException</b> - this exception is thrown when the password provided to access an encrypted database is not correct. </p><p><b>OldFormatException</b> - an exception to be thrown when an old file
format was detected and the file could not be open.</p><p><b>ReflectException</b> - an exception to be thrown when a class can not be stored or instantiated by current db4o reflector. </p><p><b>ReplicationConflictException</b> - an exception to be thrown when a conflict
occurs and no ReplicationEventListener is specified.</p></body>
</html>