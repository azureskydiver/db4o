<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
    <head><title>Class Mapping	<link href="../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <div class="CommonContent">
            <div class="CommonContentArea">
                <h1>Class Mapping</h1>
                <p>[This functionality is deprecated] </p>
                <p>db4o provides you with a possibility to create a mapping
from a class in the database to a runtime class. </p>
                <p MadCap:conditions="Primary.Java">
                    <p>Java: </p>
                    <p><code>ObjectClass.readAs(Object clazz)</code>
                    </p>
                </p>
                <p MadCap:conditions="Primary:java" />
                <p MadCap:conditions="Primary..NET,Primary.c#">
                    <p>c#: </p>
                    <p><code>IObjectClass.ReadAs(object clazz)</code>
                    </p>
                </p>
                <p MadCap:conditions="Primary:cs" />
                <p MadCap:conditions="Primary..NET,Primary.VB.NET">
                    <p>VB: </p>
                    <p><code>IObjectClass.ReadAs(Type clazz)</code>
                    </p>
                </p>
                <p MadCap:conditions="Primary:vb" />
                <p><code>clazz</code> parameter specifies a runtime class,
which will be used to instantiate objects from the database.</p>
                <p>The use-case is the following:</p>
                <ul>
                    <li>objects of class A are stored to the database;</li>
                    <li>the objects should be retrieved from the database and
instantiated as objects of class B.</li>
                </ul>
                <p MadCap:conditions="Primary.Java">
                    <p>Java: </p>
                    <p><code>Db4o.configure().objectClass(A.class).readAs(B.class)</code>
                    </p>
                </p>
                <p MadCap:conditions="Primary:java" />
                <p MadCap:conditions="Primary..NET,Primary.c#">
                    <p>c#: </p>
                    <p><code>Db4oFactory.Configure().ObjectClass(typeof(A)).readAs(typeof(B))
</code>
                    </p>
                </p>
                <p MadCap:conditions="Primary:cs" />
                <p MadCap:conditions="Primary..NET,Primary.VB.NET">
                    <p>VB: </p>
                    <p><code>IObjectClass.ReadAs(Type clazz)</code>
                    </p>
                </p>
                <p MadCap:conditions="Primary:vb" />
                <p>This configuration should be set before opening a database
file.</p>
                <p>The mapping functionality is similar to <a href="aliases.htm" class="wikiLink">Aliases</a>, but
more limited.</p>
                <p>Let's look at an example.</p>
                <p>We will use 2 identical classes <a class="wikiLink">Pilot</a> and
<a class="wikiLink">PilotReplacement</a>.</p>
                <p>Objects of Pilot class will be saved to the database:</p>
                <p MadCap:conditions="Primary.Java">
                    <MadCap:snippetBlock src="../Resources/Snippets/Class Mapping/MappingExample.java/storeObjects.flsnp" />
                </p>
                <p MadCap:conditions="Primary:java" />
                <p MadCap:conditions="Primary..NET,Primary.c#">
                    <MadCap:snippetBlock src="../Resources/Snippets/Class Mapping/MappingExample.cs/StoreObjects.flsnp" />
                </p>
                <p MadCap:conditions="Primary:cs" />
                <p MadCap:conditions="Primary..NET,Primary.VB.NET">
                    <MadCap:snippetBlock src="../Resources/Snippets/Class Mapping/MappingExample.vb/StoreObjects.flsnp" />
                </p>
                <p MadCap:conditions="Primary:vb" />
                <p>Let's try to retrieve the persisted objects using
PilotReplacement class:</p>
                <p MadCap:conditions="Primary.Java">
                    <MadCap:snippetBlock src="../Resources/Snippets/Class Mapping/MappingExample.java/retrieveObjects.flsnp" />
                </p>
                <p MadCap:conditions="Primary:java" />
                <p MadCap:conditions="Primary..NET,Primary.c#">
                    <MadCap:snippetBlock src="../Resources/Snippets/Class Mapping/MappingExample.cs/RetrieveObjects.flsnp" />
                </p>
                <p MadCap:conditions="Primary:cs" />
                <p MadCap:conditions="Primary..NET,Primary.VB.NET">
                    <MadCap:snippetBlock src="../Resources/Snippets/Class Mapping/MappingExample.vb/RetrieveObjects.flsnp" />
                </p>
                <p MadCap:conditions="Primary:vb" />
                <p>If meta information
for this mapping class has been stored before to the database file,
<code>readAs</code> method will have no effect.</p>
            </div>
        </div>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.VB.NET"><a href="classmappingvb.zip">VB.NET </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.c#"><a href="classmappingcs.zip">c# </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="classmappingjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
    </body>
</html>