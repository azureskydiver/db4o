<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Custom Typehandler Example	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>Custom Typehandler Example</h1>

<p>For a custom typehandler example we will try to write a very
simple typehandler for StringBuffer(java) and StringBuilder(.NET). These
classes are basically just another representation of String, so we can look at
the StringHandler implementation in db4o source. </p>

<p>To keep it simple we will skip information required for
indexing - please look at IndexableTypeHandler in db4o sources to get more
information on how to handle indexes.</p>

<p>The first thing should be #write method, which determines
how the object is persisted:</p>

<p MadCap:conditions="Primary.Java">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBufferHandler.java/write.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBufferHandler.java/writeToBuffer.flsnp" />
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.cs/Write.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.cs/WriteToBuffer.flsnp" />
</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.vb/Write.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.vb/WriteToBuffer.flsnp" />
</p><p MadCap:conditions="Primary:vb" />

<p>As you can see from the code above, there are 3 steps:</p>

<ol><li>Get
     the buffer from WriteContext/I WriteContext</li><li>Write
     the length of the StringBuffer/StringBuilder</li><li>Transfer
     the object to char array and write them in Unicode</li></ol>



<p>Next step is to read the same from the buffer. It is just
opposite to the write method:</p><p MadCap:conditions="Primary.Java">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBufferHandler.java/read.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBufferHandler.java/readBuffer.flsnp" />
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.cs/Read.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.cs/ReadBuffer.flsnp" />
</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.vb/Read.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.vb/ReadBuffer.flsnp" />
</p><p MadCap:conditions="Primary:vb" />

<p>Delete is simple - we just reposition the buffer offset to the end of the
slot:</p>

<p MadCap:conditions="Primary.Java">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBufferHandler.java/delete.flsnp" />
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.cs/Delete.flsnp" />
</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.vb/Delete.flsnp" />
</p><p MadCap:conditions="Primary:vb" />

<p>Try to experiment with the #delete method by implementing cascade on delete.
Use FirstClassObjectHandler as an example.</p>

<p>We are done with the read/write operations. But as you remember, in order to
read an object, we must find it through a query, and that's where we will need
a #compare method  (well, you do not need
it if your query does not contain any comparison criteria, but this is normally
not the case):</p>

<p MadCap:conditions="Primary.Java">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBufferHandler.java/prepareComparison.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBufferHandler.java/compare.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBufferHandler.java/compareChars.flsnp" />
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.cs/PrepareComparison.flsnp" />

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.cs/Compare.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.cs/CompareChars.flsnp" />
</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.vb/PrepareComparison.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.vb/Compare.flsnp" />
<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.vb/CompareChars.flsnp" />
</p><p MadCap:conditions="Primary:vb" />

<p>The last method left: #defragment. This one only moves the offset to the beginning
of the object data, i.e. skips Id and size information (to be compatible to
older versions):</p>

<p MadCap:conditions="Primary.Java">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBufferHandler.java/defragment.flsnp" />
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.cs/Defragment.flsnp" />/p>

</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/StringBuilderHandler.vb/Defragment.flsnp" />
</p><p MadCap:conditions="Primary:vb" /><p>This Typehandler implementation can be tested with a class below. Please, pay special attention to #configure method, which adds StringBufferHandler/StringBuilderHandler to the database configuration: </p><p MadCap:conditions="Primary.Java">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/TypehandlerExample.java/TypehandlerExample.java.flsnp" />
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/TypehandlerExample.cs/TypehandlerExample.cs.flsnp" />
</p>

<p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<MadCap:snippetBlock src="../../Resources/Snippets/Custom Typehandler Example/TypehandlerExample.vb/TypehandlerExample.vb.flsnp" />
</p><p MadCap:conditions="Primary:vb" /></div>
    </div>
    

        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.VB.NET"><a href="typehandlervb.zip">VB.NET </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.c#"><a href="typehandlercs.zip">c# </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="typehandlerjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>

  </body></html>