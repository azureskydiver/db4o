<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="819" MadCap:lastWidth="680" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4;ABC0001DEF;MustInherit;CountedObject;IncrementedId;queryStarted;queryFinished;QueryStats;q;executionTime;activationCount;storedClass;Foo;classname;storedClasses;StoredClasses;getStoredFields;GetStoredFields;storedField;getParentStoredClass;GetParentStoredClass;reflectWith;Db4oFactory;ReflectWith;self_get;self_set;LoggingReflector;IoAdapter;MyEncryptionAdapter;Io;Db4oEnhancerMSBuildTask;SensorPanel;GetOptions;UsingTask;AssemblyFile;OutputPath;TaskName;ItemGroup;Db4oEnhance;TargetPath;AfterBuild;AbstractAssemblyInstrumentation;IAssemblyInstrumentation;TAInstrumentation;tp;EnhancementExample;tacustom;Db4oPersistent;typedef;classTargetDir;jarTargetDir;MaintenanceQueue;'Barrichello';'BMW';useIndexSystem;useRamSystem;discardSmallerThan;DiscardSmallerThan;allObjects;SumPilotPoints;SelectMinPointsPilot;AveragePilotPoints;CountSubGroups;SelectPilotsAndTrainees;SelectPilotsInRange;SelectAndChangePilots;SelectTestPilots6PointsMore;SelectPilots6To12Points;SelectPilotsRandom;SelectPilotsEven;SelectAnyOnePilot;SelectDistinctPilots;SelectAllPilots;SelectAllPilotsNonGeneric;GetSortedPilots;GetPilotsSortByNameAndPoints;GetPilotsSortWithComparator;SelectPilot5Points;SelectTestPilots;SelectPilotsNumberX6;newPackage;newClass;objectField;oldField;newField;newAssembly;ObjectField;aaplication">
    <head><title>TypeHandler Usages	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>TypeHandler Usages</h1>
        <p>This chapter provides some of the typehandler examples,
which can be used as a replacement of translators.</p><a name="Selective Field Persistence"></a>
        <h2>Selective Field Persistence  </h2>
        <p>In the first example we will look at the case, when we want
to save only certain fields of a class. Suppose we have the following class:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/NotStorable.java/NotStorable.java.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/LocalizedItemList.cs/LocalizedItemList.cs.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>In this case we obviously do not want to store transient
<code>length</code> field.  To achieve
this we can write a new typehandler, which will store a duplicate of the class
without the length field. To make the work easier, we will extend the default
FirstClassObjectHandler.  First class
means any persistent object that has its identity in the database.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/NotStorableTypehandler.java/NotStorableTypehandler.java.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/CultureInfoTypehandler.CS/CultureInfoTypehandler.CS.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>You can see that in this case, we are just replacing
NotStorable class with a duplicate class Storable and save it instead. </p>
        <p>Let's test how it works. First we should create
configuration to include the typehandler:</p>
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/TranslatorExample.java/storeWithTypehandler.flsnp" />
            <p>
            </p>
            <p MadCap:conditions="Primary:cs" />
        </p>
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/TranslatorExample.cs/StoreWithTypehandler.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>And now test store and retrieve:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/TranslatorExample.java/tryStoreAndRetrieve.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/TranslatorExample.cs/TryStoreAndRetrieve.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>This works. However, this example has certain
limitations:  the fields were in fact
discarded and encapsulated into a Storable object. This means that we won't be
able to query for fields or index on fields. </p><a name="Ignore Fields Persistence"></a>
        <h2>Ignore Fields Persistence  </h2>
        <p>In the next example we will use one of the db4o internal
typehandlers, which allows to skip all the field information for certain
objects. This can be useful to safe the database space when the object information
is not required for future retrieval. Let's use the following classes:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/PersistentItem.java/PersistentItem.java.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/PersistentItem.cs/PersistentItem.cs.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>Let's assume that TransientItem field information is not
required to be stored in our application. We can save the database space then,
by using IgnoreFieldsTypeHandler. The configuration will look like this:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/TranslatorExample.java/ignoreFieldsConfiguration.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/TranslatorExample.cs/IgnoreFieldsConfiguration.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>We can check the result with the following code:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/TranslatorExample.java/ignoreFieldsTypehandlerExample.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/TypeHandler Usages/TranslatorExample.cs/IgnoreFieldsTypehandlerExample.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages"><a href="typehandlervb.zip">VB.NET </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages"><a href="typehandlercs.zip">c# </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="typehandlerjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
    </body>
</html>