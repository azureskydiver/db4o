<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Memory Storage	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
        <h1>Memory Storage</h1>


<p>MemoryStorage allows to create
and use db4o database fully in RAM. This strategy eliminates long disk access
times making db4o much faster.</p>

<p>MemoryStorage can be used
both in embedded and client-server modes:</p>

<p MadCap:conditions="Primary.Java">

<p>Java:  </p>




<p><code>//opening an embedded session</code> <code>EmbeddedConfiguration embeddedConfiguration =
Db4oEmbedded.newConfiguration();</code> <code>embeddedConfiguration.file().storage(new
MemoryStorage());</code> <code>Db4oEmbedded.openFile(embeddedConfiguration,
"myEmbeddedDb.db4o");</code></p>

<p><code>// opening a server for a client/server session</code> <code>ServerConfiguration serverConfiguration =
Db4oClientServer.newServerConfiguration();</code> <code>serverConfiguration.file().storage(new
MemoryStorage());</code> <code>Db4oClientServer.openServer(serverConfiguration,
"myServerDb.db4o", PORT);</code></p>

</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary.Print">

<p>.NET:  </p>




<p><code>//opening an embedded session</code> <code>IEmbeddedConfiguration embeddedConfiguration =
Db4oEmbedded.NewConfiguration();</code> <code>embeddedConfiguration.File.Storage = new
MemoryStorage();</code> <code>Db4oEmbedded.OpenFile(embeddedConfiguration,
"myEmbeddedDb.db4o");</code></p>

<p><code>// opening a server for a client/server session</code> <code>IServerConfiguration serverConfiguration =
Db4oClientServer.NewServerConfiguration();</code> <code>serverConfiguration.File.Storage = new
MemoryStorage();</code> <code>Db4oClientServer.OpenServer(serverConfiguration,
"myServerDb.db4o", PORT);</code></p>

</p><p MadCap:conditions="Primary:net" />

<p>MemoryStorage can be
created without any additional parameters passed to the constructor. In this
case default configuration values will be used. At present the following
configuration settings are available for MemoryStorage:</p>
<a name="Growth Strategy"></a><h2>Growth Strategy</h2>

<p>Growth strategy defines
how the database storage (reserved disk or memory space) will grow when the
current space is not enough anymore.</p>

<p>DoublingGrowthStrategy - default
setting. When the size of the database is not enough, the reserved size will be
doubled.</p>

<p>ConstantGrowthStrategy -
a configured amount of bytes will be added to the existing size when necessary.</p>
<p MadCap:conditions="Primary.Java">
<p>Java:  </p>

<p><code>MemoryStorage ms = new
MemoryStorage(new ConstantGrowthStrategy(growthSize))</code></p>
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary.Print">
<p>.NET:  </p>

<p><code>MemoryStorage ms = new
MemoryStorage(new ConstantGrowthStrategy(growthSize))</code></p>
</p><p MadCap:conditions="Primary:net" />
<p>growthSize - is the size in bytes,
which will be used to increase the reserved database storage size.</p>

<a name="MemoryBin"></a><h2>MemoryBin</h2>

<p>Each memory storage can contain a collection of memory bins, which are
actually just names memory storages. You can reuse the MemoryBin created
earlier for this MemoryStorage (see ReuseMemoryBin). MemoryBins are identified
by their URI, i.e. when an objectContainer is opened with:</p>
<p MadCap:conditions="Primary.Java">
<p>Java:  </p>

<p><code>Db4oEmbedded.openFile(embeddedConfiguration,
"myEmbeddedDb.db4o");</code></p>
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary.Print">
<p>.NET:  </p>

<p><code>Db4oEmbedded.OpenFile(embeddedConfiguration,
"myEmbeddedDb.db4o");</code></p>
</p><p MadCap:conditions="Primary:net" />

<p>A MemoryBin with URI = "myEmbeddedDb.db4o"
will be used. If this memory bin does not exist in the storage when the
container is opened, a new MemoryBin will be created and associated with this
URI.</p>
<p>More Reading:<ul>
<li><p><a href="memory_storage/simple_example.htm"  >Simple Example</a></p></li>
<li><p><a href="memory_storage/storing_memorybin_data.htm"  >Storing MemoryBin Data</a></p></li>
<li><p><a href="memory_storage/reusing_memorybins.htm"  >Reusing MemoryBins</a></p></li>
</ul>
</p>
  </body></html>