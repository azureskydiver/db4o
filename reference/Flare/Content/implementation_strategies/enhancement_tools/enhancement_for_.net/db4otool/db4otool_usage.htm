<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="1185" MadCap:lastWidth="586" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4;ABC0001DEF;MustInherit;CountedObject;IncrementedId;queryStarted;queryFinished;QueryStats;q;executionTime;activationCount;storedClass;Foo;classname;storedClasses;StoredClasses;getStoredFields;GetStoredFields;storedField;getParentStoredClass;GetParentStoredClass;reflectWith;Db4oFactory;ReflectWith;self_get;self_set;LoggingReflector;IoAdapter;MyEncryptionAdapter;Io;Db4oEnhancerMSBuildTask;SensorPanel;GetOptions;UsingTask;AssemblyFile;OutputPath;TaskName;ItemGroup;Db4oEnhance;TargetPath;AfterBuild;AbstractAssemblyInstrumentation;IAssemblyInstrumentation;TAInstrumentation;tp">
    <head><title>Db4oTool Usage	<link href="../../../../Resources/Stylesheets/OnlineStyle.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>Db4oTool Usage</h1>
        <p>Db4oTool is a command line utility. The general syntax is the following:</p>
        <p><code>Usage: Db4oTool [options] &lt;assembly&gt;</code>
        </p>
        <p>[options] parameter allows to specify a list of options.</p>
        <p>&lt;assembly&gt; parameter allows to pass an assembly, which should be optimized.</p>
        <p>Both parameters are optional.</p>
        <p>Running Db4oTool.exe without any parameters will bring you a short usage hint. This is equivalent to running Db4oTool with <code>-?</code> or <code>-help</code> parameter. Additional help information can be retrieved with <code>-help2</code> or <code>-usage</code> parameters.</p>
        <p>The table below gives an explanation of all Db4oTool options.</p>
        <table border="1" cellpadding="0" cellspacing="0">
            <tr>
                <td valign="top">
                    <p>-by-attribute:PARAM </p>
                </td>
                <td valign="top">
                    <p>Filter types to be instrumented by attribute:</p>
                    <p><code>Db4oTool -ta -byattribute:Activatable MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-by-filter:PARAM         </p>
                </td>
                <td valign="top">
                    <p>Custom type filter:</p>
                    <p><code>Db4oTool -ta -byfilter:IActivatable MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-by-name:PARAM         </p>
                </td>
                <td valign="top">
                    <p>Filter types by name (with regular expression syntax):</p>
                    <p><code>Db4oTool -ta -byname:MyCompany.MyProduct MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-not <![CDATA[ ]]></p>
                </td>
                <td valign="top">Negate the last filter 
<p><code>Db4oTool -ta -byname:Db4objects.Db4o -not MyAssembly.exe</code></p></td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-case-sensitive        </p>
                </td>
                <td valign="top">
                    <p>Specifies if optimized queries should be case-sensitive. This option should be used in conjunction with query optimization option (nq):</p>
                    <p><code>Db4oTool -nq -case-sensitive MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">-debug</td>
                <td valign="top">
                    <p valign="top">Preserves the debug information, to step through enhanced assemblies with the debugger.</p>
                    <p valign="top"><code>Db4oTool -debug -tp -byattribute:Activatable MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-fake                   </p>
                </td>
                <td valign="top">
                    <p>Fake operation mode, assembly won't be written. This option can be used for testing before the actual run.</p>
                    <p><code>Db4oTool -nq -fake MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-? -help                      </p>
                </td>
                <td valign="top">
                    <p>Show standard help list:</p>
                    <p><code>Db4oTool -help</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-help2                  </p>
                </td>
                <td valign="top">
                    <p>Show an additional help list (development use):</p>
                    <p><code>Db4oTool -help2</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">-install-performance-counters </td>
                <td valign="top">
                    <p>Enables performance counters for this assembly:</p>
                    <p><code>Db4oTool -install-performance-counters MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-instrumentation:PARAM  </p>
                </td>
                <td valign="top">
                    <p>Use custom instrumentation type.</p>
                    <p>PARAM is a string with a full class definition, like </p>
                    <p><code>Db4oTool.AbstractAssemblyInstrumentation, Db4oTool.exe</code>.</p>
                    <p>This class must implement <code>Db4oTool.IAssemblyInstrumentation</code> interface. To make the creation of a custom instrumentation class easier db4o provides <code>Db4oTool.AbstractAssemblyInstrumentation</code> class, which can be used as a template. For an example implementation see <code>Db4oTool.TAInstrumentation</code> class.</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-nq </p>
                </td>
                <td valign="top">
                    <p>Optimize Native Queries </p>
                    <p><code>Db4oTool -nq MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-ta</p>
                </td>
                <td valign="top">
                    <p>Instrument classes to support Transparent Activation:</p>
                    <p><code>Db4oTool -ta MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-tp</p>
                </td>
                <td valign="top">
                    <p>Instrument classes to support Transparent Persistence (Transparent Activation support is included implicitly):</p>
                    <p><code>Db4oTool -tp MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">-statistics:PARAM</td>
                <td valign="top">Shows statistic information about the database. For example <code>Db4oTool -statistics databaseFile.db4o</code></td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-usage                  </p>
                </td>
                <td valign="top">
                    <p>Show usage syntax and exit:</p>
                    <p><code>Db4oTool -usage</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-v -verbose                </p>
                </td>
                <td valign="top">
                    <p>Verbose operation mode. Should be combined with the other options:</p>
                    <p><code>Db4oTool -ta -v MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-V -version                </p>
                </td>
                <td valign="top">
                    <p>Display version and licensing information:</p>
                    <p><code>Db4oTool -V</code>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-vv                     </p>
                </td>
                <td valign="top">
                    <p>Pretty verbose operation mode:</p>
                    <p><code>Db4oTool -ta -vv MyAssembly.exe</code>
                    </p>
                </td>
            </tr>
        </table>
    </body>
</html>