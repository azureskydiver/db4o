<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="7" MadCap:lastHeight="599" MadCap:lastWidth="624">
    <head><title>Including Db4oTool In The Build	<link href="../../../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <div class="CommonContent">
            <div class="CommonContentArea">
                <h1>Including Db4oTool In The Build</h1>
                <p>The easiest way to use Db4oTools is to include it directly into the build process. This will enable you to get a processed assembly immediately after a successful build. If you are using Visual Studio Compact Framework emulator, you will get the processed assembly straight into the emulator.</p>
                <p>Use the following steps to enable Db4oTool in VS2008 project:</p>
                <ul>
                    <li>Make sure that Db4oTool.exe together with the other libraries from the bin folder in the distribution are accessible to your project.</li>
                    <li>Open Project Properties page and select "Build Events" tab.</li>
                    <li>In the "Post-build event command line:" enter the required Db4oTool command:</li>
                    <ul>
                        <li><code>[path_to_Db4oTool_folder]/Db4oTools.exe [options] $(TargetPath)</code> if Db4oTool is included in your project's references, <code>[path_to_Db4oTool_folder]</code> should be skipped. </li>
                    </ul>
                    <li>In the "Run the post-build event:" select "On successful build"</li>
                    <li>Run the build. The resulting assembly will contain all the modifications made by Db4oTool.</li>
                </ul>
                <p>An example of this is included in the distribution in src/Db4oTool/Db4oTool.Example folder.</p>
                <p>Possible usages:</p>
                <ol>
                    <li>Native Query optimization: <code>[path_to_Db4oTool_folder]/Db4oTools.exe -nq $(TargetPath)</code></li>
                    <li>Transparent Activation support for the whole assembly: <code>[path_to_Db4oTool_folder]/Db4oTools.exe -ta $(TargetPath)</code></li>
                    <li>Transparent Activation support for MyClass objects: 
<code>[path_to_Db4oTool_folder]/Db4oTools.exe -ta <span id="ctl00_ctl00_bcr_topicView___TopicBody">-byname:MyClass </span>$(TargetPath)</code></li>
                    <li>Transparent Activation and Transparent Persistence support: 

<code>[path_to_Db4oTool_folder]/Db4oTools.exe -tp<span id="ctl00_ctl00_bcr_topicView___TopicBody"></span>$(TargetPath)</code></li>
                </ol>For more Db4oTool options please refer to <a href="db4otool_usage.htm" class="wikiLink">Db4oTool Usage</a>. </div>
        </div>
    </body>
</html>