<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="672" MadCap:lastWidth="624" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;objectContainer;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4;ABC0001DEF;MustInherit;CountedObject;IncrementedId;queryStarted;queryFinished;QueryStats;q;executionTime;activationCount;storedClass;Foo;classname;storedClasses;StoredClasses;getStoredFields;GetStoredFields;storedField;getParentStoredClass;GetParentStoredClass;reflectWith;Db4oFactory;ReflectWith;self_get;self_set;LoggingReflector;IoAdapter;MyEncryptionAdapter;Io;Db4oEnhancerMSBuildTask;SensorPanel;GetOptions;UsingTask;AssemblyFile;OutputPath;TaskName;ItemGroup;Db4oEnhance;TargetPath;AfterBuild">
    <head><title>Example Enhancement	<link href="../../../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>Example Enhancement</h1>
        <p>If
you've already set up the <a href="ta_and_nq_example_code.htm">TA</a> or <a href="tp_example_code.htm">TP</a> example project in the Visual
Studio, you can try to compile and run it. In current state TA example
produces diagnostic messages about classes that are not Activatable, and TP example does not really save any runtime modifications to SensorPanel objects. Let's fix
this.</p>
        <p>First
of all you will need to edit your project file and add a link to Db4oTool.MSBuild.dll (from the /bin folder in your distribution).
Note, that this dll in its turn references Db4oTool.exe, Mono.Cecil.dll and
Mono.GetOptions.dll, so you must keep them in the same directory.  </p>
        <p>To edit the project file (csproj for c# and vbproj for VB) open it in any text editor and add
the following lines at the end of the file before the closing &lt;/Project&gt;
tag:</p>
        <p><code>  &lt;UsingTask
AssemblyFile="$(OutputPath)Db4oTool.MSBuild.dll"</code>
        </p>
        <p><code>  TaskName="Db4oTool.MSBuild.Db4oEnhancerMSBuildTask"
/&gt;</code>
        </p>
        <p><code>  &lt;ItemGroup&gt;</code>
        </p>
        <p><code>    &lt;Db4oEnhance
Include="$(TargetPath)" /&gt;</code>
        </p>
        <p><code>  &lt;/ItemGroup&gt;</code>
        </p>
        <p><code>  &lt;Target
Name="AfterBuild"&gt;</code>
        </p>
        <p><code>    &lt;Db4oEnhancerMSBuildTask
Assemblies="@(Db4oEnhance)" /&gt;</code>
        </p>
        <p><code>  &lt;/Target&gt;</code>
        </p>
        <p>Save
the file and go back to VS (a note should appear asking to update the project
file, you must agree to update).  Now
rebuild and run the application once again. In the build file we did not
specify and filters, so all the application classes should be Activatable now
and all diagnostic messages should be gone and the modifications should be saved in TP example.</p>
        <p>Note,
that though the first example does not provide diagnostic information for Native
Queries,  NQ were also optimized by the
updated build script.</p>
    </body>
</html>