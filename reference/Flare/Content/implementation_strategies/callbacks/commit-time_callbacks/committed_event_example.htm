<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="1310" MadCap:lastWidth="665">
    <head><title>Committed Event Example</title>
    </head>
    <body>
        <h1>Committed Event Example</h1>
        <p>Committed callbacks can be used in various scenarios:</p>
        <ul>
            <li>backup on commit.</li>
            <li>database replication on commit.</li>
            <li>client database synchronization.</li>
        </ul>
        <p>This example shows you how to refresh objects on a client on commits.</p>
        <p>When several clients are working
on the same objects it is possible that the data will be outdated on a client. You can use the committed-event on a client to refresh object on each commit. </p>
        <p>When a client commits, that commit will trigger a committed event on all clients. In order to refresh the object, register for the committed event. In the commit-event-handler, refresh the object which have been modified.</p>
        <MadCap:snippetBlock src="../../../CodeExamples/clientserver/refresh/RefreshingObjects-On-the-updated-event-we-refresh-the-objects.all.flsnp" />
        <MadCap:snippetBlock src="../../../CodeExamples/clientserver/refresh/RefreshingObjects-The-refresh-handler.all.flsnp" />
        <p>You can register such a event-handler for each client. The committed event it transferred to each client. Note that this required a lot of network-traffic to notify all clients and transfer the changed to the clients.</p>
        <p>When working with the committed event you should remember that
the listener is called on a separate thread, which needs to be synchronized
with the rest of the application. This functionality is not implemented in the presented example. </p>
    </body>
</html>