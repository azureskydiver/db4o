<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Event Registry API	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
     
       
        <h1>Event Registry API</h1>



<p>External callbacks should be registered with db4o
EventRegistry. Follow the steps below to start using your own event handlers:</p>

<ol>
<li>Obtain an
     instance of EventRegistry object for your ObjectContainer
<p MadCap:conditions="Primary.Java"> 

<p>Java:  </p>

<p><code>EventRegistry registry =
EventRegistryFactory.forObjectContainer(container);</code></p>

<p></p><p MadCap:conditions="Primary:java" /></p>

<p MadCap:conditions="Primary..NET,Primary.c#">

<p>c#:</p>

<p><code>IEventRegistry registry =
EventRegistryFactory.ForObjectContainer(container);</code> </p>

</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<p>VB:</p>

<p><code>Dim registry As IEventRegistry =
EventRegistryFactory.ForObjectContainer(container)</code></p>

</p><p MadCap:conditions="Primary:vb" />

</li>

<li>Register the required event. For "created" event the code is the following:

<p MadCap:conditions="Primary.Java">

<p>Java:</p>

<p><code>registry.created().addListener(EventListener4)</code></p>

</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<p>c#:</p>

<p><code>registry.Created += OnCreated;</code></p>

</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<p>VB:</p>

<p><code>AddHandler registry.Created, AddressOf OnCreated</code></p>

</p><p MadCap:conditions="Primary:vb" />

</li>

<li>Create your own event handler:

<p MadCap:conditions="Primary.Java">

<p>Java:</p>

<p><code>EventListener4
createdEvent = new EventListener4(){ 
          onEvent(Event4 event, EventArgs args)  { 
                      // handling code 
          } 
}</code></p>

</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<p>c#:  </p>

<p><code>private static void OnCreated(object sender, ObjectEventArgs args)         { 
             // handling code
         }</code></p>

</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<p>VB:  </p>

<p><code>Private Shared Sub OnCreated(ByVal sender As Object, ByVal args As ObjectEventArgs) 
            ' handling code End Sub</code></p>

</p><p MadCap:conditions="Primary:vb" />

<p>The action raised the event can be cancelled in Creating,
Activating, Deactivating, Updating and Deleting event handlers. These events accept CancellableObjectEventArgs as a parameter. In order to cancel the action use:</p>

<p MadCap:conditions="Primary.Java">

<p>Java: </p>

<p><code>cancellableEventArgs.cancel()</code></p>

</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<p>c#: </p>

<p><code>cancellableEventArgs.Cancel()</code></p>

</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<p>VB:</p>

<p><code>cancellableEventArgs.Cancel()</code></p>

</p><p MadCap:conditions="Primary:vb" />

<p>Here <code>cancellableEventArgs</code> is an event argument of <code>CancellableObjectEventArgs</code> type.</p>

<p MadCap:conditions="Primary.Java">

<p>In java <code>cancellableEventArgs</code> should be obtained by explicit casting:</p>

<p><code>EventListener4 listener = new EventListener4(){</code></p>

<p><code>    public void onEvent(Event4 e, EventArgs args){</code></p>

<p><code>        CancellableObjectEventArgs cancellableArgs = (CancellableObjectEventArgs)args;</code></p>

<p><code>        .... </code>  </p>

</p><p MadCap:conditions="Primary:java" />
</li>

<li>After the work is done you can unregister the events:

<p MadCap:conditions="Primary.Java">

<p>Java:</p>

<p><code>registry.created().removeListener(createdEvent);</code></p>

</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<p>c#:</p>

<p><code>registry.Created -= new ObjectEventHandler(OnCreated);</code></p>

</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<p>VB:</p>

<p><code>RemoveHandler registry.Created, AddressOf OnCreated</code></p>

</p><p MadCap:conditions="Primary:vb" />
</li>
</ol>

<p>EventRegistry features:</p>

<ul>
<li>You can register several event handlers for a single
event. </li>

<li>You can get different EventRegistry's for different
ObjectContainer instances using EventRegistryFactory. </li>

<li>In Java, callbacks are implemented as Listeners, .NET
uses Native events </li>

<li>Callbacks only work run in
local mode or on the server side in client/server mode. </li>

<li>Each event applies to all the objects or
queries(QueryStarted/QueryFinished events ). In order to distinguish the
specific case, to which the handler should be applied, use the event arguments.
</li>
</ul>


<p>For example:</p>

<p MadCap:conditions="Primary.Java">

<MadCap:snippetBlock src="../../Resources/Snippets/Event Registry API/CallbacksExample.java/testCreated.flsnp" />
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<MadCap:snippetBlock src="../../Resources/Snippets/Event Registry API/CallbacksExample.cs/TestCreated.flsnp" />
</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">


<MadCap:snippetBlock src="../../Resources/Snippets/Event Registry API/CallbacksExample.vb/TestCreated.flsnp" />

</p><p MadCap:conditions="Primary:vb" /> 
     

        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.VB.NET"><a href="callbacksvb.zip">VB.NET </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.c#"><a href="callbackscs.zip">c# </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="callbacksjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>


    
</body></html>