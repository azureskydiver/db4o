<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="840" MadCap:lastWidth="624" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4">
    <head><title>Event Registry API	<link href="../../Resources/Stylesheets/OnlineStyle.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>Event Registry API</h1>
        <p>External callbacks should be registered with db4o
EventRegistry. Follow the steps below to start using your own event handlers:</p>
        <ol>
            <li>Obtain an
     instance of EventRegistry object for your <MadCap:snippetText src="../../Resources/Snippets/ObjectContainer.flsnp" /><p MadCap:conditions="Primary.Java,Primary.All languages"><p>Java:  </p><p><code>EventRegistry registry =
EventRegistryFactory.forObjectContainer(container);</code></p><p></p><p MadCap:conditions="Primary:java" /></p><p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages"><p>c#:</p><p><code>IEventRegistry registry =
EventRegistryFactory.ForObjectContainer(container);</code></p></p><p MadCap:conditions="Primary:cs" /><p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages"><p>VB:</p><p><code>Dim registry As IEventRegistry =
EventRegistryFactory.ForObjectContainer(container)</code></p></p><p MadCap:conditions="Primary:vb" /></li>
            <li>Register the required event. For "created" event the code is the following:

<p MadCap:conditions="Primary.Java,Primary.All languages"><p>Java:</p><p><code>registry.created().addListener(EventListener4)</code></p></p><p MadCap:conditions="Primary:java" /><p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages"><p>c#:</p><p><code>registry.Created += OnCreated;</code></p></p><p MadCap:conditions="Primary:cs" /><p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages"><p>VB:</p><p><code>AddHandler registry.Created, AddressOf OnCreated</code></p></p><p MadCap:conditions="Primary:vb" /></li>
            <li>Create your own event handler:

<p MadCap:conditions="Primary.Java,Primary.All languages"><p>Java:</p><p><code>EventListener4
createdEvent = new EventListener4(){ 
          onEvent(Event4 event, EventArgs args)  { 
                      // handling code 
          } 
}</code></p></p><p MadCap:conditions="Primary:java" /><p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages"><p>c#:  </p><p><code>private static void OnCreated(object sender, ObjectEventArgs args)         { 
             // handling code
         }</code></p></p><p MadCap:conditions="Primary:cs" /><p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages"><p>VB:  </p><p><code>Private Shared Sub OnCreated(ByVal sender As Object, ByVal args As ObjectEventArgs) 
            ' handling code End Sub</code></p></p><p MadCap:conditions="Primary:vb" /><p>The action raised the event can be canceled in Creating,
Activating, Deactivating, Updating and Deleting event handlers. These events accept CancellableObjectEventArgs as a parameter. In order to cancel the action use:</p><p MadCap:conditions="Primary.Java,Primary.All languages"><p>Java: </p><p><code>cancellableEventArgs.cancel()</code></p></p><p MadCap:conditions="Primary:java" /><p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages"><p>c#: </p><p><code>cancellableEventArgs.Cancel()</code></p></p><p MadCap:conditions="Primary:cs" /><p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages"><p>VB:</p><p><code>cancellableEventArgs.Cancel()</code></p></p><p MadCap:conditions="Primary:vb" /><p>Here <code>cancellableEventArgs</code> is an event argument of <code>CancellableObjectEventArgs</code> type.</p><p MadCap:conditions="Primary.Java,Primary.All languages"><p>In java <code>cancellableEventArgs</code> should be obtained by explicit casting:</p><p><code>EventListener4 listener = new EventListener4(){</code></p><p><code>    public void onEvent(Event4 e, EventArgs args){</code></p><p><code>        CancellableObjectEventArgs cancellableArgs = (CancellableObjectEventArgs)args;</code></p><p><code>        .... </code></p></p><p MadCap:conditions="Primary:java" /></li>
            <li>After the work is done you can unregister the events:

<p MadCap:conditions="Primary.Java,Primary.All languages"><p>Java:</p><p><code>registry.created().removeListener(createdEvent);</code></p></p><p MadCap:conditions="Primary:java" /><p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages"><p>c#:</p><p><code>registry.Created -= new ObjectEventHandler(OnCreated);</code></p></p><p MadCap:conditions="Primary:cs" /><p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages"><p>VB:</p><p><code>RemoveHandler registry.Created, AddressOf OnCreated</code></p></p><p MadCap:conditions="Primary:vb" /></li>
        </ol>
        <p>EventRegistry features:</p>
        <ul>
            <li>You can register several event handlers for a single
event. </li>
            <li>You can get different EventRegistry's for different
<MadCap:snippetText src="../../Resources/Snippets/ObjectContainer.flsnp" /> instances using EventRegistryFactory/IEventRegistryFactory. </li>
            <li>In Java, callbacks are implemented as Listeners, .NET
uses Native events </li>
            <li>Callbacks only work run in
local mode or on the server side in client/server mode. </li>
            <li>Each event applies to all the objects or
queries(QueryStarted/QueryFinished events ). In order to distinguish the
specific case, to which the handler should be applied, use the event arguments.
</li>
        </ul>
        <p>For example:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Event Registry API/CallbacksExample.java/testCreated.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Event Registry API/CallbacksExample.cs/TestCreated.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../Resources/Snippets/Event Registry API/CallbacksExample.vb/TestCreated.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages"><a href="callbacksvb.zip">VB.NET </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages"><a href="callbackscs.zip">c# </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="callbacksjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
    </body>
</html>