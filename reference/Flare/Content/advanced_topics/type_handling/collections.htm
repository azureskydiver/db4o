<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="283" MadCap:lastWidth="586">
    <head>
    </head>
    <body>
        <h1>
            <MadCap:keyword term="Collections;Type Handling:Collectins" />Collections</h1>
        <p>Internally the regular <MadCap:variable name="Primary.Plattform" />-collections are stored as arrays. When you store a collection, db4o will store all the collection-items into a array. And when you retrieve a collection, db4o will create a new instance of the collection and add back the items. <MadCap:variable name="Primary.Map" />-instances  are stored as an array of key-values.</p>
        <p>Unfortunately this implementation is not very efficient for searches/updates of a certain value in a collection, as the whole collection needs to be instantiated to access any of its elements.</p>
        <p>db4o brings some special collections with it. There are collections which support transparent persistence. <MadCap:xref href="../../basics/activation_concept/transparent_activation_framework/Collections.htm" target="" title="" alt="">See "TA Aware Collections"</MadCap:xref></p>
        <p>When you have a need for a huge collection, you might run into some performance bottleneck, since collections are always stored and retrieved as complete unit. You can use db4o special big-set to improve performance. <MadCap:xref href="collections/big_set.htm" target="" title="" alt="">See "Big Set"</MadCap:xref></p>
        <p>You might wonder what is better to use, collection or arrays. Most of times it doesn't matter. <MadCap:xref href="collections/collections_or_arrays.htm" target="" title="" alt="">See "Collections Or Arrays"</MadCap:xref></p>
    </body>
</html>