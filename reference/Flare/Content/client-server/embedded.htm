<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="1026" MadCap:lastWidth="588" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;a1;b1;c1;b2;uncomment">
    <head>
    </head>
    <body>
        <h1>
            <MadCap:keyword term="Embedded" />Embedded Client Server</h1>
        <p>db4o supports embedded containers or session container. Its a separate object-container with its own transaction and own reference cache. <MadCap:xref href="../implementation_strategies/session_containers.htm" target="" title="" alt="">See "Session Containers"</MadCap:xref></p>
        <p>Now if you're using the client-server mode for db4o, you also can create such sessions directly from the server. When you pass a 0 to the open server method, the server only supports embedded clients. With any other port you can connect with <a href="networked.htm">regular clients</a> and also create embedded clients.</p>
        <MadCap:snippetBlock src="../CodeExamples/container/sessions/Db4oSessions-Embedded-client.all.flsnp" />
        <h2>OpenSession On A Client</h2>
        <p>You might noted that the open-session is available on any object-container. Normally this creates a <a href="../implementation_strategies/session_containers.htm">session-container</a> with its own transaction and reference cache. However on a db4o-client this is not true. There it only creates a container with new cache, but shares the transaction with the client. The only use case for this is to implement connection pooling.<MadCap:xref href="pooling.htm" target="" title="" alt="">See "Client-Container Pooling"</MadCap:xref></p>
        <p>&#160;</p>
    </body>
</html>