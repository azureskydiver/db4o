<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Security Requirements On Java Platform	<link href="../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>Security Requirements On Java Platform</h1>
<p><font color="#990000">This topic applies to Java version only</font></p>
<p>Java Security Manager can be used to specify Java application security permissions. It is usually provided by web-browsers and web-servers for applet and servlet execution, however any Java application can make use of a security manager. For example, to use the default security manager you will only need to pass <code>-Djava.security.manager</code> option to JVM command line. Custom security managers can be created and utilized as well (please refer to Java documentation for more information).</p>
<p>If you are going to use db4o in a Tomcat servlet container you will need to grant some additional permissions in {CATALINA_HOME}/conf/catalina.policy file:</p><p>// The permissions granted to the context WEB-INF/classes directory grant codeBase "file:${catalina.home}/webapps/{your_db4o_application}/WEB-INF/classes/-" {    permission java.util.PropertyPermission "user.home", "read";      permission java.util.PropertyPermission "java.fullversion", "read";    permission java.io.FilePermission "path_to_db4o_database_folder", "read";    permission java.io.FilePermission "path_to_db4o_database_file", "read, write"; };  // The permissions granted to the context WEB-INF/lib directory, containing db4o jar grant codeBase "file:${catalina.home}/webapps/{your_db4o_application}/WEB-INF/lib/-" {    permission java.io.FilePermission "path_to_db4o_database_file", "read, write"; };</p><p>An example  catalina.policy file can be downloaded <a href="security_requirements_on_java_platform/catalina.policy" class="wikiLink">here</a>. </p><p>In order to avoid db4o DatabaseFileLocked exception you will also need to add some configuration before opening the object container:</p><p><code>Configuration config = Db4o.newConfiguration();</code></p><p><code>config.lockDatabaseFile(false);</code></p><p><code>ObjectContainer container = Db4o.openFile(config, dbfile.getPath());</code> </p><p>Having done that, you can package and deploy your application. To enable the security configuration start Tomcat with the following command:</p><p>{CATALINA_HOME}/bin/catalina start -security </p></div>
    </div>
    
  </body></html>