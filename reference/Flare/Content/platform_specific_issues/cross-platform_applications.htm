<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Cross-Platform Applications	<link href="../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>Cross-Platform Applications</h1><p>db4o is a native java and .NET database.&amp;nbsp; It reads Java and .NET objects and stores
them in a platform independent format. In the runtime the database data is
reconstructed into class objects using reflection. However, as the database
storage is actually platform-independent, it does not matter if the data will
be reconstructed into a java or .NET class object as soon as the class
definition matches. Thus the same db4o database can be used both with Java and
.NET application.

 </p><p>Further Reading:</p><ul><li><a href="cross-platform_applications/configuration.htm" class="wikiLink">Configuration</a></li><li><a href="../implementation_strategies/aliases/cross-platform_aliasing.htm" class="wikiLink">Using Aliasing for Cross-Platform Development</a></li><li><a href="cross-platform_applications/limitations_of_db4o_cross-platform_usage.htm" class="wikiLink">Limitations Of Db4o Cross-Platform Usage</a> </li></ul></div>
    </div>
    
  </body></html>
