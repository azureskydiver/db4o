<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="1929" MadCap:lastWidth="623" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4;ABC0001DEF;MustInherit;CountedObject;IncrementedId;queryStarted;queryFinished;QueryStats;q;executionTime;activationCount;storedClass;Foo;classname;storedClasses;StoredClasses;getStoredFields;GetStoredFields;storedField;getParentStoredClass;GetParentStoredClass;reflectWith;Db4oFactory;ReflectWith;self_get;self_set;LoggingReflector;IoAdapter;MyEncryptionAdapter;Io;Db4oEnhancerMSBuildTask;SensorPanel;GetOptions;UsingTask;AssemblyFile;OutputPath;TaskName;ItemGroup;Db4oEnhance;TargetPath;AfterBuild;AbstractAssemblyInstrumentation;IAssemblyInstrumentation;TAInstrumentation;tp;EnhancementExample;tacustom;Db4oPersistent;typedef;classTargetDir;jarTargetDir;MaintenanceQueue;'Barrichello';'BMW';useIndexSystem;useRamSystem;discardSmallerThan;DiscardSmallerThan;allObjects;SumPilotPoints;SelectMinPointsPilot;AveragePilotPoints;CountSubGroups;SelectPilotsAndTrainees;SelectPilotsInRange;SelectAndChangePilots;SelectTestPilots6PointsMore;SelectPilots6To12Points;SelectPilotsRandom;SelectPilotsEven;SelectAnyOnePilot;SelectDistinctPilots;SelectAllPilots;SelectAllPilotsNonGeneric;GetSortedPilots;GetPilotsSortByNameAndPoints;GetPilotsSortWithComparator;SelectPilot5Points;SelectTestPilots;SelectPilotsNumberX6;newPackage;newClass;objectField;oldField;newField;newAssembly;ObjectField;aaplication">
    <head>
    </head>
    <body>
        <h1>
            <MadCap:keyword term="Cross-Platform" />Cross-Platform Applications</h1>
        <p>db4o is a native java and .NET database. It reads Java and .NET objects and stores
them in a platform independent format. In the runtime the database data is
reconstructed into class objects using reflection. However, as the database
storage is actually platform-independent, it does not matter if the data will
be reconstructed into a java or .NET class object as soon as the class
definition matches. Thus the same db4o database can be used both with Java and
.NET application.
</p>
        <p>However in practice there are a lot of barriers. For example when reading the data, db4o actually need the types to reinstate the object correctly. Also there some language constructs are not available on all platforms. Take a look at the limitations of the cross platform support. <MadCap:xref href="cross-platform_applications/limitations_of_db4o_cross-platform_usage.htm" target="" title="" alt="">See "Limitations Of db4o Cross-Platform Usage"</MadCap:xref></p>
        <h2>Basics</h2>
        <p>To get started, you need to configure the cross platform support. This means adding the JavaSupport on the .NET-side and adding the DotNet-support on the Java side. If you're using client server mode, you need to add the support on the server and the clients.</p>
        <MadCap:snippetBlock src="../CodeExamples/crossplatform/DotNetServer-Add-Java-support-.all.flsnp" />
        <MadCap:snippetBlock src="../CodeExamples/crossplatform/JavaServer-Add-dot-NET-support..java.flsnp" />
        <h2>Adding Aliases</h2>
        <p>After this, you can start to add aliases for your classes. </p>
        <p>For example we have the Person-class in Java and .NET:</p>
        <MadCap:snippetBlock src="../CodeExamples/crossplatform/Person-The-person-class-in-Java.all.flsnp" />
        <MadCap:snippetBlock src="../CodeExamples/crossplatform/Person-The-person-class-in-C-Sharp.all.flsnp" />
        <p>For example <a href="../configuration/common/alias.htm">alias</a> for the .NET-db4o , which need to read from a Java-instance looks like this:</p>
        <MadCap:snippetBlock src="../CodeExamples/crossplatform/DotNetClient-You-need-to-add-aliases-for-your-types.all.flsnp" />
        <p>Or the other way around. The <a href="../configuration/common/alias.htm">alias</a> for a Java-db4o which needs to read from a .NET instance looks like this:</p>
        <MadCap:snippetBlock src="../CodeExamples/crossplatform/JavaClient-You-need-to-add-aliases-for-your-types.all.flsnp" />
        <p>&#160;</p>
        <p>&#160;</p>
    </body>
</html>