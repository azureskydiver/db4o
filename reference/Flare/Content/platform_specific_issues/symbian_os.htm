<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="9" MadCap:lastHeight="3155" MadCap:lastWidth="1017" MadCap:conditions="Primary.Java">
    <head><title>Symbian OS	<link href="../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <div class="CommonContent">
            <div class="CommonContentArea">
                <h1>Symbian OS</h1>
                <div id="TOC">&#160;</div>
                <p MadCap:conditions="Primary.Java">
                    <p>Symbian OS is the global industry standard operating system for smartphones. You can find more information about it at <a href="http://www.symbian.com/">http://www.symbian.com/</a>.</p>
                    <p>UIQ (formerly known as User Interface Quartz) is a software platform based upon Symbian OS. UIQ-based devices support Java thus enabling you to use db4o. </p><a name="Development Environment"></a>
                    <h2><span>Development Environment</span>
                    </h2>
                    <p>Db4o  was tested for compatibility with UIQ 2.1 SDK. You can download the SDK from:</p>
                    <p><a href="http://developer.sonyericsson.com/site/global/docstools/symbian/p_symbian.jsp" target="_blank">http://developer.sonyericsson.com/site/global/docstools/symbian/p_symbian.jsp</a>  The
UIQ Symbian SDK allows you to write applications for Symbian OS using
your Windows PC and a suitable JDK ( JDK 1.1.8). The SDK comes with UIQ
emulator, which can be run on a Windows-based computer allowing you to
test and debug your application before deployment.</p>
                    <p>The SDK also installs some third party software, including JRE 1.3,
which under some conditions can break Java installations already
present ('java.dll not found' error message). In this case you can
uninstalling the JRE that comes with Symbian to solve the problem.</p>
                    <p>The Emulator has its own file system ( you can get more information about how it is designed from the SDK documentation). </p>
                    <p>To be able to run Java applications and use db4o in the emulator,
you will have to map _epoc_drive_j to \epoc32\java. Consult your MS
Windows documentation on how to set environment variables.</p>
                    <p>Environment variables can be set locally at the command prompt using the syntax</p>
                    <p> set _epoc_drive_j=\epoc32\java\ </p>
                    <p>You can also launch your application on the Emulator from the Windows command prompt: </p>
                    <p>pjava -cd j:\demo DemoApp </p>
                    <p>You have to ensure that the correct version of the emulator VM
executable (pjava.exe) is used - the correct path is
/runtime/epoc32/release/wins/urel.</p>
                    <p>Command-line launch also allows you to pass arguments to a class's
main(). Please, note that path names given to pjava are paths within
the Emulator's drivespace only; they are not Windows paths.</p>
                    <p>Some platforms will require additional tuning to run the Emulator
successfully. The following advices should help, if you are
experiencing problems running the emulator:</p>
                    <ul>
                        <li>use a -cd (change directory) argument for pJava as well as a full -cp, both expressed in terms of the virtual file system. </li>
                        <li>add the path to the JDK runtime classes (j:/lib/classes.zip,
equivalent to /runtime/epoc32/java/lib/classes.zip) to the -cp
argument. </li>
                    </ul>
                    <p>The last thing you need to do is to copy the proper version of db4o
jar (JDK1.1) to the emulator file system directory
(/runtime/epoc32/java) and add its location to the classpath.</p>
                    <p>To make the startup process easier we recommend to create a batch file to run your application, which can look like this:</p>
                    <p>REM deploy all db4o files to C:\Symbian\UIQ_21\runtime\epoc32\java </p>
                    <p>SET SYMB_HOME=C:\Symbian\UIQ_21</p>
                    <p>SET SYMB_EPOC32=%SYMB_HOME%\runtime\epoc32</p>
                    <p>SET SYMB_BIN=%SYMB_EPOC32%\release\wins\urel</p>
                    <p>SET _epoc_drive_j=%SYMB_EPOC32%\java\</p>
                    <p>%SYMB_BIN%\pjava -cd J:\ -cp .;J:\;J:\classes\;J:\db4o-5.0-java1.1.jar;J:\DemoApp.jar DemoClass</p><a name="Programming specifics"></a>
                    <h2>Programming specifics</h2>
                    <p>Tested version of Symbian JDK has problems with IO:</p>
                    <ul>
                        <li>seek() cannot move beyond the current file length;</li>
                        <li>under certain (rare) conditions, calls to RandomAccessFile.length() seems to garble up the following reads.</li>
                    </ul>
                    <p>To workaround these problems and make db4o file operations stable special SymbianIoAdapter is provided for Symbian OS:</p>
                    <p><code>Db4o.configure().io(new com.db4o.io.SymbianIoAdapter())</code>
                    </p>
                    <p>You can read more about using IOAdapters with db4o in <a href="../implementation_strategies/io_adapter.htm" class="wikiLink">IOAdaper</a> chapter</p>
                    <p>The following example shows how SymbianIoAdapter can be used:</p>
                    <MadCap:snippetBlock src="../Resources/Snippets/Symbian OS/SymbianTest.java/SymbianTest.java.flsnp" />
                </p>
                <p MadCap:conditions="Primary:java" />
            </div>
        </div>
    </body>
</html>