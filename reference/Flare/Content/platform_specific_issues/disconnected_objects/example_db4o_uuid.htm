<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="1148" MadCap:lastWidth="560">
    <head>
    </head>
    <body>
        <h1>Example db4o UUID</h1>
        <p>This example demonstrates how you can use <a href="../../implementation_strategies/ids_and_uuids/unique_universal_ids.htm">db4o-UUIDs</a> to identify objects across objects containers. Take a look advantages and disadvantages of db4o-UUIDs: <MadCap:xref href="comparison_of_ids.htm" target="" title="" alt="">See "Comparison Of Different IDs"</MadCap:xref></p>
        <p>First you need to enable db4o-UUIDs in order to use it.</p>
        <MadCap:snippetBlock src="../../CodeExamples/disconnectedobj/idexamples/Db4oUuidExample-db4o-uuids-need-to-be-activated.all.flsnp" />
        <p>With UUIDs turned on, db4o will create an UUID for each stored object. So you can get the UUID of the object from the object-container.</p>
        <MadCap:snippetBlock src="../../CodeExamples/disconnectedobj/idexamples/Db4oUuidExample-get-the-db4o-uuid.all.flsnp" />
        <p>Getting a object by its UUID is also easy. First you get the object from the container. Unlike queries this won't <a href="../../basics/activation.htm">activate</a> your object. So you have to do it explicitly.</p>
        <MadCap:snippetBlock src="../../CodeExamples/disconnectedobj/idexamples/Db4oUuidExample-get-an-object-by-a-db4o-uuid.all.flsnp" />
    </body>
</html>