<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="688" MadCap:lastWidth="1197" MadCap:conditions="Primary..NET">
    <head>
    </head>
    <body>
        <h1>ASP.NET Assembly Naming</h1>
        <p>If you are creating your application in ASP.NET 2.0 you should take into consideration that the assembly names are generated automatically on each build by default. Db4o distinguish persisted classes by name, namespace and assembly. So after the assembly name has changed, you won't be able to access classes saved with the previous version of the assembly.</p>
        <p>There are several workarounds:</p>
        <UL>
            <LI>You can create a separate class library keeping db4o logic and persistent classes. This can also help if you need to access fully trusted db4o library from partially trusted ASP application</LI>
            <LI>You can build your ASP.NET2 application manually using aspnet_compiler utility from .NET2 SDK.</LI>
            <p><code>aspnet_compiler.exe -v /WebSite -f -fixednames c:\WebSite -c -errorstack</code>
            </p>
            <p>Microsoft has published a how-to for <A class="" href="http://msdn.microsoft.com/en-us/library/ms228040.aspx">using the aspnet_compiler to generate fixed names for ASP.NET assemblies</A>.</p>
            <LI>You can use db4o <a href="../../configuration/common/alias.htm">aliasing API</a> to redirect saved classes to the new assembly name. The following method should be called before opening database file to make all the classes within the namespace available after assembly name change:</LI>
            <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
                <MadCap:snippetBlock src="../../Resources/Snippets/ASP.NET/Db4oHttpModule.cs/ConfigureAlias.flsnp">
                </MadCap:snippetBlock>
            </p>
            <p MadCap:conditions="Primary:cs">
            </p>
            <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
                <MadCap:snippetBlock src="../../Resources/Snippets/ASP.NET/Db4oHttpModule.vb/ConfigureAlias.flsnp">
                </MadCap:snippetBlock>
            </p>
            <p MadCap:conditions="Primary:vb">
            </p>
            <p>You can use TypeAlias for aliasing only specific class.</p>
        </UL>
    </body>
</html>