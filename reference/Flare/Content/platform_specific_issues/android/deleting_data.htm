<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Deleting Data	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>Deleting Data</h1><p>The following methods will delete a car with a pilot having
5 points from each database:</p>

<p>SQLite:</p>

<MadCap:snippetBlock src="../../Resources/Snippets/Deleting Data/SqlExample.java/deleteCar.flsnp" />


<p>db4o:</p>

<p>(Select Car using Native Query)</p>

<MadCap:snippetBlock src="../../Resources/Snippets/Deleting Data/Db4oExample.java/deleteCar.flsnp" />


<p>In this example db4o code looks much longer. But should we consider it a disadvantage? My opinion is - NO. Of course, SQLite seems to handle the whole operation in just one statement: db.delete(). But if you look attentively you will see that basically this statement just transfers all the difficult job to SQL: SQL statement should select a pilot with a given condition, then find a car. Using SQL can look shorter but it has a great disadvantage - it uses strings. So what will happen if the statement is wrong? You will never notice it till somebody in the running application will cause this statement to execute. Even then you might not see the reason immediately. The same applies to the schema changes - you may not even notice that you are using wrong tables and fields.</p><p>db4o helps to avoid all the above mentioned problems: query syntax is completely compile-checked and schema evolution will be spotted immediately by the compiler, so that you would not need to rely on code search and replace tools.  </p></div>
    </div>
    
  <p>Download example code:</p>        <p></p></body></html>