<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Retrieving Data	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
     
       
        <h1>Retrieving Data</h1><p>In order to test the retrieval abilities of both databases
we will try to select a car with a pilot having 9 points:</p>

<p>SQLite:</p>





<MadCap:snippetBlock src="../../Resources/Snippets/Retrieving Data/SqlExample.java/selectCar.flsnp" />
				
<p>db4o:</p>
<p>(Using SODA query)</p>

<MadCap:snippetBlock src="../../Resources/Snippets/Retrieving Data/Db4oExample.java/selectCar.flsnp" />


<p>Of course SODA query is not the best db4o querying mechanism: the preferred mechanism  - Native Queries - will be reviewed in the following chapters. However, SODA is the closest to SQL and can server a good comparison. In the example above you can see that SQLite needs a lot of additional code to transfer the retrieved data into application's objects, whereas db4o does not need this code at all, as the result is already a collection of objects. </p> 
     

        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="dbcomparerefjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>

    
</body></html>