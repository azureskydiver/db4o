<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="1910" MadCap:lastWidth="560" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4;ABC0001DEF;MustInherit;CountedObject;IncrementedId;queryStarted;queryFinished;QueryStats;q;executionTime;activationCount;storedClass;Foo;classname;storedClasses;StoredClasses;getStoredFields;GetStoredFields;storedField;getParentStoredClass;GetParentStoredClass;reflectWith;Db4oFactory;ReflectWith;self_get;self_set;LoggingReflector;IoAdapter;MyEncryptionAdapter;Io;Db4oEnhancerMSBuildTask;SensorPanel;GetOptions;UsingTask;AssemblyFile;OutputPath;TaskName;ItemGroup;Db4oEnhance;TargetPath;AfterBuild;AbstractAssemblyInstrumentation;IAssemblyInstrumentation;TAInstrumentation;tp;EnhancementExample;tacustom;Db4oPersistent;typedef;classTargetDir;jarTargetDir;MaintenanceQueue;'Barrichello';'BMW';useIndexSystem;useRamSystem;discardSmallerThan;DiscardSmallerThan;allObjects;SumPilotPoints;SelectMinPointsPilot;AveragePilotPoints;CountSubGroups;SelectPilotsAndTrainees;SelectPilotsInRange;SelectAndChangePilots;SelectTestPilots6PointsMore;SelectPilots6To12Points;SelectPilotsRandom;SelectPilotsEven;SelectAnyOnePilot;SelectDistinctPilots;SelectAllPilots;SelectAllPilotsNonGeneric;GetSortedPilots;GetPilotsSortByNameAndPoints;GetPilotsSortWithComparator;SelectPilot5Points;SelectTestPilots;SelectPilotsNumberX6;newPackage;newClass;objectField;oldField;newField;newAssembly;ObjectField;aaplication">
    <head>
    </head>
    <body>
        <h1>
            <MadCap:keyword term="Object Container" />Object Container</h1>
        <P>db4o gives you a simple and straightforward interface to object persistence - <MadCap:snippetText src="../Resources/Snippets/ObjectContainer.flsnp" />. </P>
        <H2>Accessing a Database </H2>
        <P>The <MadCap:snippetText src="../Resources/Snippets/ObjectContainer.flsnp" /> <![CDATA[ ]]>is the interface for accessing the database. To open the database you pass the file-name to the object container factory.  Normally you should open an object container when the application starts and close it, when the session is finished. At the end of the session you should close the object container.</P>
        <MadCap:snippetBlock src="../CodeExamples/basics/Db4oBasics-Open-the-object-container-to-use-the-database.all.flsnp" />
        <H2>Working With Objects </H2>
        <P>The <MadCap:snippetText src="../Resources/Snippets/ObjectContainer.flsnp" /> interface gives you all the basic functionality to work with persistent objects. Normally you can save a new or updated object of any class with the store-operation.</P>
        <MadCap:snippetBlock src="../CodeExamples/basics/Db4oBasics-Store-a-object.all.flsnp" />
        <P>Use the delete-operation to delete objects.</P>
        <MadCap:snippetBlock src="../CodeExamples/basics/Db4oBasics-Delete-a-object.all.flsnp" />
        <h2>Query</h2>
        <p>The object container is also the start point for queries. There are different query interfaces to query the database. <MadCap:xref href="querying.htm" target="" title="" alt="">See "Querying"</MadCap:xref></p>
        <h2>Object Container Features </h2>
        <P>The characteristic features of an Object Container are: </P>
        <UL>
            <LI>An object container can either be a database in a single-user mode or a client connection to a <a href="../client-server.htm">db4o server</a>.</LI>
            <LI>Every object container owns one transaction. All work is transactional. When you open an Object Container, you are in a transaction, when you commit() or rollback(), the next transaction is started immediately.</LI>
            <LI>Every object container maintains it's own references to stored and instantiated objects. In doing so, it manages object identities, and is able to achieve a high level of performance.</LI>
            <LI>Object containers are intended to be kept open as long as you work against them. When you close an Object Container, all database references to objects in RAM will be discarded.</LI>
        </UL>
        <P>Basically object container supplies functionality, which is enough for the most common usage of db4o database.</P>
        <H2>Extended Object Container Interface </H2>
        <p>Additional db4o features are provided by an interface extending object container: 
		<span MadCap:conditions="Primary.Java">ExtObjectContainer</span><span MadCap:conditions="Primary..NET">IExtObjectContainer</span></p>
        <p>The idea of splitting basic and advanced functionality between two interfaces is:</p>
        <ul>
            <li>Keep the root package/namespace very small and well readable.</li>
            <li>Separate vital and optional functionality.</li>
            <li>Make it easy for other products to implement the basic db4o interface.</li>
            <li>Show an example of how a lightweight version of db4o could look.</li>
        </ul>
        <p>Every Object Container object is also an extended object container.
			You can cast it to <span MadCap:conditions="Primary.Java">ExtObjectContainer</span><span MadCap:conditions="Primary..NET">IExtObjectContainer</span> or you can use
			
			<span MadCap:conditions="Primary.Java">container.ext()</span><span MadCap:conditions="Primary..NET">container.Ext()</span>method to get to the advanced features. </p>
    </body>
</html>