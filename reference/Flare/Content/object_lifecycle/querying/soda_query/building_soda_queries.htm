<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="827" MadCap:lastWidth="680" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4;ABC0001DEF;MustInherit;CountedObject;IncrementedId;queryStarted;queryFinished;QueryStats;q;executionTime;activationCount;storedClass;Foo;classname;storedClasses;StoredClasses;getStoredFields;GetStoredFields;storedField;getParentStoredClass;GetParentStoredClass;reflectWith;Db4oFactory;ReflectWith;self_get;self_set;LoggingReflector;IoAdapter;MyEncryptionAdapter;Io;Db4oEnhancerMSBuildTask;SensorPanel;GetOptions;UsingTask;AssemblyFile;OutputPath;TaskName;ItemGroup;Db4oEnhance;TargetPath;AfterBuild;AbstractAssemblyInstrumentation;IAssemblyInstrumentation;TAInstrumentation;tp;EnhancementExample;tacustom;Db4oPersistent;typedef;classTargetDir;jarTargetDir;MaintenanceQueue;'Barrichello';'BMW';useIndexSystem;useRamSystem;discardSmallerThan;DiscardSmallerThan;allObjects;SumPilotPoints;SelectMinPointsPilot;AveragePilotPoints;CountSubGroups;SelectPilotsAndTrainees;SelectPilotsInRange;SelectAndChangePilots;SelectTestPilots6PointsMore;SelectPilots6To12Points;SelectPilotsRandom;SelectPilotsEven;SelectAnyOnePilot;SelectDistinctPilots;SelectAllPilots;SelectAllPilotsNonGeneric;GetSortedPilots;GetPilotsSortByNameAndPoints;GetPilotsSortWithComparator;SelectPilot5Points;SelectTestPilots;SelectPilotsNumberX6;newPackage;newClass;objectField;oldField;newField;newAssembly;ObjectField;aaplication">
    <head><title>Building SODA Queries	<link href="../../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>Building SODA Queries</h1>
        <p>Let's see how simple QBE queries are expressed with SODA. A new Query 
object is created through the <MadCap:snippetText src="../../../Resources/Snippets/Query.flsnp" /> method of the <MadCap:snippetText src="../../../Resources/Snippets/ObjectContainer.flsnp" /> and we can 
add Constraint instances to it. To find all Pilot instances, we constrain 
the query with the Pilot class object.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.java/retrieveAllPilots.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.cs/RetrieveAllPilots.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.vb/RetrieveAllPilots.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>Basically, we are exchanging our 'real' prototype for a meta description of the 
objects we'd like to hunt down: a <b>query graph</b> made up of query nodes and 
constraints. A query node is a placeholder for a candidate object, a constraint 
decides whether to add or exclude candidates from the result.</p>
        <p>Our first 
simple graph looks like this.</p>
        <p>
            <img src="../graph1.gif" />
        </p>
        <p>We're just asking any candidate object (here: any object in the database) to be 
of type Pilot to aggregate our result.</p>
        <p>To retrieve a pilot by name, we 
have to further constrain the candidate pilots by descending to their name field 
and constraining this with the respective candidate String.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.java/retrievePilotByName.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.cs/RetrievePilotByName.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.vb/RetrievePilotByName.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>What does 'descend' mean here? Well, just as we did in our 'real' prototypes, we 
can attach constraints to child members of our candidates.</p>
        <p>
            <img src="../graph2.gif" />
        </p>
        <p>So a candidate needs to be of type Pilot and have a member named 'name' that is 
equal to the given String to be accepted for the result.</p>
        <p>Note that the 
class constraint is not required: If we left it out, we would query for all 
objects that contain a 'name' member with the given value. In most cases this 
will not be the desired behavior, though.</p>
        <p>Finding a pilot by exact points 
is analogous.We just have to cross the Java primitive/object divide.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.java/retrievePilotByExactPoints.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.cs/RetrievePilotByExactPoints.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.vb/RetrievePilotByExactPoints.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages"><a href="../sodavb.zip">VB.NET </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages"><a href="../sodacs.zip">c# </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="../sodajava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
    </body>
</html>