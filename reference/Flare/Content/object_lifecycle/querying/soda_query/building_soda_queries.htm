<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Building SODA Queries	<link href="../../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
     
       
        <h1>Building SODA Queries</h1><p>Let's see how simple QBE queries are expressed with SODA. A new Query 
object is created through the #query() method of the ObjectContainer and we can 
add Constraint instances to it. To find all Pilot instances, we constrain 
the query with the Pilot class object.</p>

<p MadCap:conditions="Primary.Java">

<MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.java/retrieveAllPilots.flsnp" />
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.cs/RetrieveAllPilots.flsnp" />
</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.vb/RetrieveAllPilots.flsnp" />
</p><p MadCap:conditions="Primary:vb" />

<p>Basically, we are exchanging our 'real' prototype for a meta description of the 
objects we'd like to hunt down: a <b>query graph</b> made up of query nodes and 
constraints. A query node is a placeholder for a candidate object, a constraint 
decides whether to add or exclude candidates from the result.</p>

<p>Our first 
simple graph looks like this.</p>

<p><img src="../graph1.gif"/></p>

<p>We're just asking any candidate object (here: any object in the database) to be 
of type Pilot to aggregate our result.</p>

<p>To retrieve a pilot by name, we 
have to further constrain the candidate pilots by descending to their name field 
and constraining this with the respective candidate String.</p>

<p MadCap:conditions="Primary.Java">

<MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.java/retrievePilotByName.flsnp" />
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.cs/RetrievePilotByName.flsnp" />
</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.vb/RetrievePilotByName.flsnp" />
</p><p MadCap:conditions="Primary:vb" />

<p>What does 'descend' mean here? Well, just as we did in our 'real' prototypes, we 
can attach constraints to child members of our candidates.</p>

<p><img src="../graph2.gif"/></p>

<p>So a candidate needs to be of type Pilot and have a member named 'name'that is 
equal to the given String to be accepted for the result.</p>

<p>Note that the 
class constraint is not required: If we left it out, we would query for all 
objects that contain a 'name' member with the given value. In most cases this 
will not be the desired behavior, though.</p>

<p>Finding a pilot by exact points 
is analogous.We just have to cross the Java primitive/object divide.</p>

<p MadCap:conditions="Primary.Java">

<MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.java/retrievePilotByExactPoints.flsnp" />
</p><p MadCap:conditions="Primary:java" />

<p MadCap:conditions="Primary..NET,Primary.c#">

<MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.cs/RetrievePilotByExactPoints.flsnp" />
</p><p MadCap:conditions="Primary:cs" />

<p MadCap:conditions="Primary..NET,Primary.VB.NET">

<MadCap:snippetBlock src="../../../Resources/Snippets/Building SODA Queries/QueryExample.vb/RetrievePilotByExactPoints.flsnp" />
</p><p MadCap:conditions="Primary:vb" /> 
     


        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.VB.NET"><a href="../sodavb.zip">VB.NET </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary..NET,Primary.c#"><a href="../sodacs.zip">c# </a>
            </MadCap:conditionalText>
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="../sodajava.zip">Java </a>
            </MadCap:conditionalText>
        </p>


    
</body></html>