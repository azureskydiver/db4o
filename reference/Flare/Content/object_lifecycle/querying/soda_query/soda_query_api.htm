<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="13700" MadCap:lastWidth="656" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4;ABC0001DEF;MustInherit;CountedObject;IncrementedId;queryStarted;queryFinished;QueryStats;q;executionTime;activationCount;storedClass;Foo;classname;storedClasses;StoredClasses;getStoredFields;GetStoredFields;storedField;getParentStoredClass;GetParentStoredClass;reflectWith;Db4oFactory;ReflectWith;self_get;self_set;LoggingReflector;IoAdapter;MyEncryptionAdapter;Io;Db4oEnhancerMSBuildTask;SensorPanel;GetOptions;UsingTask;AssemblyFile;OutputPath;TaskName;ItemGroup;Db4oEnhance;TargetPath;AfterBuild;AbstractAssemblyInstrumentation;IAssemblyInstrumentation;TAInstrumentation;tp;EnhancementExample;tacustom;Db4oPersistent;typedef;classTargetDir;jarTargetDir;MaintenanceQueue;'Barrichello';'BMW';useIndexSystem;useRamSystem;discardSmallerThan;DiscardSmallerThan;allObjects;SumPilotPoints;SelectMinPointsPilot;AveragePilotPoints;CountSubGroups;SelectPilotsAndTrainees;SelectPilotsInRange;SelectAndChangePilots;SelectTestPilots6PointsMore;SelectPilots6To12Points;SelectPilotsRandom;SelectPilotsEven;SelectAnyOnePilot;SelectDistinctPilots;SelectAllPilots;SelectAllPilotsNonGeneric;GetSortedPilots;GetPilotsSortByNameAndPoints;GetPilotsSortWithComparator;SelectPilot5Points;SelectTestPilots;SelectPilotsNumberX6;newPackage;newClass;objectField;oldField;newField;newAssembly;ObjectField;aaplication">
    <head><title>SODA Query API	<link href="../../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>
            <MadCap:keyword term="Constraint" />SODA Query API</h1>
        <p>There are occasions when we don't want to query for exact field values, 
but rather for value ranges, objects not containing given member values, etc. 
This functionality is provided by the Constraint API.</p><a name="Not"></a>
        <h3>Not </h3>
        <p>First, let's negate 
a query to find all pilots who are not Michael Schumacher:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.java/retrieveByNegation.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.cs/RetrieveByNegation.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.vb/RetrieveByNegation.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" /><a name="And "></a>
        <h3>And </h3>
        <p>Where there is negation, the other boolean operators can't be too far. </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.java/retrieveByConjunction.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.cs/RetrieveByConjunction.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.vb/RetrieveByConjunction.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" /><a name="Or "></a>
        <h3>Or </h3>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.java/retrieveByDisjunction.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.cs/RetrieveByDisjunction.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.vb/RetrieveByDisjunction.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" /><a name="Greater, Smaller, Equal &lt;&gt;="></a>
        <h3>Greater, Smaller, Equal &lt;&gt;=</h3>
        <p>We can also constrain to a comparison with a given value.</p>
        <p>Return pilots with more than 99 points:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.java/retrieveByComparison.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.cs/RetrieveByComparison.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.vb/RetrieveByComparison.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" /><a name="Using Default Values "></a>
        <h3>Using Default Values </h3>
        <p>The query API also allows to query for field default values. </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.java/retrieveByDefaultFieldValue.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.cs/RetrieveByDefaultFieldValue.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.vb/RetrieveByDefaultFieldValue.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" /><a name="String Comparisons"></a>
        <h3>String Comparisons</h3><a name="Like "></a>
        <h4>Like and Contains</h4>
        <p>This is an equivalent to SQL "like" operator. The contains()-method is case sensitive whereas like() is case-insensitive.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.java/testLike.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.cs/TestLike.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.vb/TestLike.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" /><a name="startsWith, endsWith "></a>
        <h4>startsWith, endsWith </h4>
        <p>Compares a beginning or ending of a string:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.java/testStartsEnds.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.cs/TestStartsEnds.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.vb/TestStartsEnds.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" /><a name="Case Insensitive Queries"></a>
        <h4>Case Insensitive Queries</h4>
        <p>By default all string querying
functions use case-sensitive comparison. <code>startsWith</code> and
<code>endsWith</code> allow to switch between comparison modes using a
parameter. However, if you need a case-insensitive comparison for
<code>like</code> , <code>equals</code> or <code>contains</code>queries, it is recommended to use <a href="../native_queries.htm">Native Queries</a> as SODA does
not provide such an option. </p><a name="Contains "></a>
        <h3>Collections and Arrays</h3>
        <p>You can query for a certain element in a collection or array. Descend down to the collection field and apply a constrain for the object you're looking for.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.java/testContains.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.cs/TestContains.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.vb/TestContains.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" /><a name="Identity Comparison "></a>
        <h3>Identity Comparison </h3>
        <p>db4o database identity can also be used as a constraint. In this
case only objects with the same database instance will be retrieved:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.java/testIdentity.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.cs/TestIdentity.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/SodaExample.vb/TestIdentity.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" /><a name="Sorting Results "></a>
        <h3>Sorting Results </h3>
        <p>It is also possible to have db4o sort the results.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.java/retrieveSorted.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.cs/RetrieveSorted.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.vb/RetrieveSorted.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" /><a name="Joining Constraints"></a>
        <h3>Joining Constraints</h3>
        <p>In some situations you need a way to arbitrarily join constraints, for example:</p>
        <p>(a and b) or (c and d) </p>
        <p>In this case you will just need to add new constraints to the root constraint and join them in advance using Constraint syntax:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.java/retrieveByJoinedConstraints.flsnp" />
        </p>
        <p MadCap:conditions="Primary:java" />
        <p MadCap:conditions="Primary..NET,Primary.c#,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.cs/RetrieveByJoinedConstraints.flsnp" />
        </p>
        <p MadCap:conditions="Primary:cs" />
        <p MadCap:conditions="Primary..NET,Primary.VB.NET,Primary.All languages">
            <MadCap:snippetBlock src="../../../Resources/Snippets/SODA Query API/QueryExample.vb/RetrieveByJoinedConstraints.flsnp" />
        </p>
        <p MadCap:conditions="Primary:vb" />
        <p>All these techniques can be combined arbitrarily, of course. Please try it out. 
There still may be cases left where the predefined query API constraints may not 
be sufficient - don't worry, you can always let db4o run any arbitrary code that 
you provide in an Evaluation. Evaluations will be discussed in a <a href="../soda_evaluations.htm">Evaluations chapter</a>. </p>
    </body>
</html>