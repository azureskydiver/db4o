<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="9" MadCap:lastHeight="812" MadCap:lastWidth="624" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;objectContainer;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment;startsWith;getPoints;StartsWith;ExtentType;oql;AllPilots;OQLQuery;persistenceManager;newQuery;IList;IComparer;ObjectSet;IObjectSet;comparer;ExtObjectContainer;IExtObjectContainer;VB;pilot1;name1;name2;peekPersisted;isCached;JDO;WeakReferences;VM;ClientConfiguration;IClientConfiguration;BatchMessages;NO_OF_OBJECTS;maxBatchQueueSize;MaxBatchQueueSize;listResult;MessageRecipient;ObjectServer;openServer;ObjectNotStorableException;s;clientserverJava;ServerConfiguration;clientserverCS;cs;clientserverVB;vb;config;databaseFileName;int;NativeSocketFactory;socketFactory;OpenClient;hostName;IObjectServer;OpenServer;IConfiguration;INativeSocketFactory;IObjectContainer;genkey;SSLcert;storepass;SecureSocketFactory;IMessageSender;setMessageRecipient;SetMessageRecipient;IMessageRecipient;processMessage;ProcessMessage;ByVal;UpdateServer;waitMilliSeconds;releaseSemaphore;ReleaseSemaphore;monitorObject;semaphoreName;switchToFile;fileName;SwitchToFile;switchToMainFile;SwitchToMainFile;switchs;isAlive;IsAlive;replicateDeletions;ReplicateDeletions;GetType;g;ReplicationEvent;VersionNumbers;providerA;objectsChangedSinceLastReplication;ProviderA;ObjectsChangedSinceLastReplication;hbm;ProviderSignature;MySignature;PeerSignature;ReplicationProvider;HibernateReplicationProvider;ReplicationProviders;m;typed_id;pi2763;longPart;ObjectReference;className;typedId;Uuid;uuid;drs_providers;is_my_sig;t';f';drs_history;provider_id;PK;drs_objects;class_name;varchar;one_to_one;ReplicationConfigurator;SessionFactory;sessionFactory;buildSessionFactory;openSession;beginTransaction;createCriteria;AbstractDb4oTestCase;Db4oFixture;_fixture;AbstractSoloDb4oFixture;AbstractClientServerDb4oFixture;IDb4oFixture;IQuery;NewQuery;retrieveOnlyInstance;RetrieveOnlyInstance;countOccurences;CountOccurences;foreach;Visitor4;Foreach;IVisitor4;obj;deleteAll;DeleteAll;ReflectClass;reflectClass;indexField;fieldName;IndexField;Config;setUp;SetUp;db4oSetupBeforeStore;db4oSetupAfterStore;Db4oSetupBeforeStore;Db4oSetupAfterStore;runSoloAndClientServer;RunSoloAndClientServer;runSolo;RunSolo;runClientServer;RunClientServer;CodeBlock;Db4oUnit;ICodeBlock;isTrue;msg;IsTrue;bool;Msg;areEqual;AreEqual;FrameworkTestCase;runTestAndExpect;expFailures;RunTestAndExpect;ITest;GetConfig;storedType;runtimeType;tAlias;resolveRuntimeName;resolveStoredName;storedPattern;runtimePattern;aliasing;QueryStarted;QueryFinished;QueryEventArgs;ObjectEventArgs;CancellableObjectEventArgs;CommitEventArgs;client2;client1;WaitForCompletion;args;AddHandler;forObjectContainer;ForObjectContainer;OnCreated;createdEvent;onEvent;Event4;ABC0001DEF;MustInherit;CountedObject;IncrementedId;queryStarted;queryFinished;QueryStats;q;executionTime;activationCount;storedClass;Foo;classname;storedClasses;StoredClasses;getStoredFields;GetStoredFields;storedField;getParentStoredClass;GetParentStoredClass;reflectWith;Db4oFactory;ReflectWith;self_get;self_set;LoggingReflector;IoAdapter;MyEncryptionAdapter;Io;Db4oEnhancerMSBuildTask;SensorPanel;GetOptions;UsingTask;AssemblyFile;OutputPath;TaskName;ItemGroup;Db4oEnhance;TargetPath;AfterBuild;AbstractAssemblyInstrumentation;IAssemblyInstrumentation;TAInstrumentation;tp;EnhancementExample;tacustom;Db4oPersistent;typedef;classTargetDir;jarTargetDir;MaintenanceQueue;'Barrichello';'BMW';useIndexSystem;useRamSystem;discardSmallerThan;DiscardSmallerThan;allObjects;SumPilotPoints;SelectMinPointsPilot;AveragePilotPoints;CountSubGroups;SelectPilotsAndTrainees;SelectPilotsInRange;SelectAndChangePilots;SelectTestPilots6PointsMore;SelectPilots6To12Points;SelectPilotsRandom;SelectPilotsEven;SelectAnyOnePilot;SelectDistinctPilots;SelectAllPilots;SelectAllPilotsNonGeneric;GetSortedPilots;GetPilotsSortByNameAndPoints;GetPilotsSortWithComparator;SelectPilot5Points;SelectTestPilots;SelectPilotsNumberX6;newPackage;newClass;objectField;oldField;newField;newAssembly;ObjectField;aaplication">
    <head><title>TA Enhanced Example	<link href="../../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>TA Enhanced Example</h1>As it was mentioned
<a href="ta_implementation.htm">before</a> you can inject TA awareness in your persistent classes without modifying their original
code. In the current scenario this means: 

<ul><li>generate
the <code>Activatable</code> interface declaration;</li><li>add
<code>bind(objectContainer)</code> method implementation;</li><li>generate
a field to keep a reference to the corresponding <code>Activator</code>instance;</li><li>generate
<code>activate()</code> call at the beginning of every method.</li></ul>These tasks can be fulfilled in the classes bytecode by using <a href="../../../implementation_strategies/enhancement_tools.htm">Enhancement Tools</a>. 




<p MadCap:conditions="Primary.Java"><a name="TA Enhancement In Java "></a><h2>TA Enhancement In Java </h2><p>TA can be enabled by bytecode injection of the above-mentioned code into the persistent classes when they are
loaded or built. (Currently persistent classes have to be "tagged" by providing
an appropriate <code>ClassFilter</code> instance.) In addition to this db4o
also explicitly needs to be configured to use the Transparent Activation instrumentation
of the persistent classes (TransparentActivationSupport).</p><p>Transparent Activation functionality requires the following jars:</p><ul><li>bloat-1.0.jar</li><li>db4o-<MadCap:variable name="Primary.CurrentVersion" />-tools.jar </li><li>db4o-<MadCap:variable name="Primary.CurrentVersion" />-taj.jar  </li><li>db4o-<MadCap:variable name="Primary.CurrentVersion" />-instrumentation.jar</li></ul><p>The following topics explain how TA enhancement can be applied to built classes:</p><ul><li><a href="ta_enhanced_example/ta_enhancement_at_load_time.htm">TA Enhancement At Loading Time</a></li><li><a href="ta_enhanced_example/ta_enhancement_at_build_time.htm">TA Enhancement At Build Time</a></li></ul></p><p MadCap:conditions="Primary:java" /><p MadCap:conditions="Primary.Print"><a name="TA Enhancement In .NET "></a><h2>TA Enhancement In .NET  </h2><p>TA enhancement for .NET can be done at build or post-build time. In both cases it requires Db4oTool project distribution. </p><p>When build-time option is used Db4oEnhanceMSBuildTask is added to the build file (*.csproj or *.vbproj in Visual Studio 2005), this requires Db4oTool.MSBuild.dll library. </p><p>In post-build enhancement case, Db4oTool.exe command line utility is used to enhanced built assemblies.</p><ul><li><a href="ta_enhanced_example/ta_enhancement_with_db4otool.htm">TA Enhancement With Db4oTool</a></li><li><a href="../../../implementation_strategies/enhancement_tools/enhancement_for_.net/build_time_enhancement.htm">Build Time Enhancement</a></li></ul></p><p MadCap:conditions="Primary:net" /></body>
</html>