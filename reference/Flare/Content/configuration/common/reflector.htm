<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="586" MadCap:lastWidth="707">
    <head>
    </head>
    <body>
        <h1>Changing The Reflector</h1>
        <p>Allows you to change the reflector for db4o. The Reflector is responsible to inspect the metadata of objects and report them to db4o. <MadCap:xref href="../../implementation_strategies/db4o_reflection_api.htm" target="" title="" alt="">See "Db4o Reflection API"</MadCap:xref></p>
        <p MadCap:conditions="Primary.Java">This setting allows you also to specify which class-loader is used to find classes. For that you pass the right class-loader to the JdkReflector constructor. Its also possible to use very special class resolving strategy, be implementing the JdkLoader-interface. For example when you want to use more than one class-loader for classes.<br /></p>
        <p MadCap:conditions="Primary..NET">There are currently two main reflectors available:</p>
        <ul MadCap:conditions="Primary..NET">
            <li MadCap:conditions="Primary..NET"><strong>NetReflector</strong>: The default reflector which uses standard .NET reflection for inspecting and accessing objects.</li>
            <li><strong>FastNetReflector</strong>:&#160;A reflector which generates special access-code for each class. Therefore it is a lot faster than the default NetReflector. However it has a higher memory-consumption due to the generated code.</li>
        </ul>
        <MadCap:snippetBlock src="../../CodeExamples/configuration/common/CommonConfigurationExamples-Change-the-reflector.all.flsnp" />
    </body>
</html>