<?xml version="1.0" encoding="utf-8"?><html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2958" MadCap:lastWidth="1029">
<head><title>Weak References	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" />		<script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title></head>
<body onload="prettyPrint()">
     
       
        <h1>Weak References</h1>

<p>Each retrieved or created object is automatically placed into reference system. Of course you have control over it and can purge or deactivate retrieved objects to prevent ever-growing memory consumption. However this requires a lot of attention and coding effort. Luckily, this is not necessary as db4o offers much easier way to manage the memory - WeakReferences. </p>
<p>Any object is kept in the memory while application has references to it otherwise it becomes eligible for garbage collection.</p>
<p>In the default configuration db4o uses weak references and a dedicated thread to clean them up after objects have been garbage collected by the VM. Weak references need extra resources and the cleanup thread will have a considerable impact on performance since it has to be synchronized with the normal operations within the ObjectContainer. </p> 
     
    
  </body></html>
