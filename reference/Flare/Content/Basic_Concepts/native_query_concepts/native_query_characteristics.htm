<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="394" MadCap:lastWidth="624" MadCap:ignoredWords="RandomAccessFileAdapter;randomAccessFileAdapter;NonFlushingIoAdapter;nonFlushingIoAdapter;CachedIoAdapter;cachedIoAdapter;disableCommitRecovery;DisableCommitRecovery;extObjectContainer;setSemaphore;getName;SetSemaphore;typeof;LOCK_;getID;GetID;getPilot;getSignature;idenity;car1;car2;car3;UUID;defragment">
    <head><title>Native Query Characteristics	<link href="../../Resources/Stylesheets/prettify.css" type="text/css" rel="stylesheet" /><script type="text/javascript" src="../../Resources/Code/prettify.js"></script></title>
    </head>
    <body onload="prettyPrint()">
        <h1>Native Query Characteristics</h1>
        <p>The <a href="problems_of_string_based_query_languages.htm">previous
paragraph</a> reveals the need of a new querying technology native to modern
development languages.  This new
technology was developed by <a href="http://www.odbms.org/download/010.01 Cook Native Queries for Persistent Objects August 2005.pdf">W.Cook
and C.Rosenberger</a> and named Native Queries. </p>
        <p>Native Queries are characterized by the following:</p>
        <ul>
            <li>100% native: Queries are completely
     expressed in the implementation language (Java or c#), and they fully obey
     all language semantics.</li>
            <li>100% object-oriented: Queries are runnable in the
     language itself, to allow unoptimized execution against plain collections
     without custom preprocessing.</li>
            <li>100% type-safe: Queries are fully accessible to modern IDE
     features like syntax checking,</li>
        </ul>
        <p> type checking, refactoring, etc.</p>
        <ul>
            <li>optimizable: It is possible to translate a native query to a
     persistence architecture's query language or API for performance
     optimization. This is done at compile time or at load time by source code
     or bytecode analysis and translation. However, not every construct within
     a Native Query can be optimized.</li>
        </ul>
    </body>
</html>