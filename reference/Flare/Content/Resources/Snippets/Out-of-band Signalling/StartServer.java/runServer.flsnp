<?xml version="1.0" encoding="utf-8"?> <html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="309" MadCap:lastWidth="1029">    <head>    </head>    <body>        <pre class="prettyprint" xml:space="preserve">StartServer.java: runServer
/** *//**
   * opens the ObjectServer, and waits forever until close() is called or a
   * StopServer message is being received.
   */
  public void runServer()  {
    synchronized (this)  {
      // Using the messaging functionality to redirect all
      // messages to this.processMessage
      ServerConfiguration config = Db4oClientServer.newServerConfiguration();
      config.networking().messageRecipient(this);

      ObjectServer db4oServer = Db4oClientServer.openServer(
          config, FILE, PORT);
      db4oServer.grantAccess(USER, PASS);

      
      // to identify the thread in a debugger
      Thread.currentThread().setName(this.getClass().getName());

      // We only need low priority since the db4o server has
      // it's own thread.
      Thread.currentThread().setPriority(Thread.MIN_PRIORITY);
      try  {
        if (!stop)  {
          // wait forever for notify() from close()
          this.wait(Long.MAX_VALUE);
        }
      } catch (Exception e)  {
        e.printStackTrace();
      }
      db4oServer.close();
    }
  }</pre>    </body></html>