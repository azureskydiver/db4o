<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="3" MadCap:lastHeight="731" MadCap:lastWidth="679">
    <head>
    </head>
    <body>
        <pre class="prettyprint" xml:space="preserve">ArrayExample.java: main
</pre>
        <pre>public static void main(String[] args) {</pre>
        <pre xml:space="preserve">   new File("ArrayExample.yap").delete();</pre>
        <pre xml:space="preserve">   System.out.println("Running Array example.");</pre>
        <pre xml:space="preserve">   com.db4o.config.Configuration db4oConfig = Db4o.newConfiguration();</pre>
        <pre xml:space="preserve">   db4oConfig.generateUUIDs(ConfigScope.GLOBALLY);</pre>
        <pre xml:space="preserve">   db4oConfig.generateVersionNumbers(ConfigScope.GLOBALLY);</pre>
        <pre xml:space="preserve">   ObjectContainer objectContainer = Db4o.openFile(db4oConfig, "ArrayExample.yap");</pre>
        <pre xml:space="preserve">   Pilot pilot = new Pilot();</pre>
        <pre xml:space="preserve">   pilot.name = "John";</pre>
        <pre xml:space="preserve">   Car car1 = new Car();</pre>
        <pre xml:space="preserve">   car1.brand = "BMW";</pre>
        <pre xml:space="preserve">   car1.model = "M3";</pre>
        <pre xml:space="preserve">   Car car2 = new Car();</pre>
        <pre xml:space="preserve">   car2.brand = "Mercedes Benz";</pre>
        <pre xml:space="preserve">   car2.model = "S600SL";</pre>
        <pre xml:space="preserve">   pilot.cars = new Car[]{car1, car2};</pre>
        <pre xml:space="preserve">   objectContainer.store(pilot);</pre>
        <pre xml:space="preserve">   objectContainer.commit();</pre>
        <pre xml:space="preserve">   Configuration config = new Configuration().configure("f1/collection/array/hibernate.cfg.xml");</pre>
        <pre xml:space="preserve">   ReplicationSession replication = HibernateReplication.begin(objectContainer, config);</pre>
        <pre xml:space="preserve">   ObjectSet changed = replication.providerA().objectsChangedSinceLastReplication();</pre>
        <pre xml:space="preserve">   while (changed.hasNext())</pre>
        <pre xml:space="preserve">      replication.replicate(changed.next());</pre>
        <pre xml:space="preserve">      replication.commit();</pre>
        <pre xml:space="preserve">      replication.close();</pre>
        <pre xml:space="preserve">      objectContainer.close();</pre>
        <pre xml:space="preserve">      new File("ArrayExample.yap").delete();</pre>
        <pre xml:space="preserve">   }
}</pre>
    </body>
</html>