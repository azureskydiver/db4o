<?xml version="1.0" encoding="utf-8"?> <html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="309" MadCap:lastWidth="1029">    <head>    </head>    <body>        <pre class="prettyprint" xml:space="preserve">MaintenanceQueue.java
1/**//* Copyright (C) 2007  db4objects Inc.  http://www.db4o.com */
2
3package enhancement.model;
4
5import java.util.*;
6
7import tacustom.*;
8
9@Db4oPersistent
0
1public class MaintenanceQueue&lt;Item&gt; ...{
2
3  public MaintenanceQueue&lt;Item&gt; _next;
4  
5  private Item _value;
6
7  public MaintenanceQueue(Item value) ...{
8    _value = value;
9  }
0
1  public static MaintenanceQueue&lt;Integer&gt; newList(int depth) ...{
2    if (depth == 0) ...{
3      return null;
4    }
5    MaintenanceQueue&lt;Integer&gt; head = new MaintenanceQueue&lt;Integer&gt;(depth);
6    head._next = newList(depth - 1);
7    return head;
8  }
9
0  /** *//**
1   * Overrides this method to assert that &lt;code&gt;other&lt;/code&gt; is only
2   * activated with depth 1.
3   */
4  @SuppressWarnings(&quot;unchecked&quot;)
5  public boolean equals(Object other) ...{
6    return ((MaintenanceQueue&lt;Item&gt;) other)._next == null;
7  }
8
9  public boolean hasNext() ...{
0    return _next != null;
1  }
2
3  public MaintenanceQueue&lt;Item&gt; next() ...{
4    return _next;
5  }
6
7  public int size() ...{
8    if(_next == null) ...{
9      return 1;
0    }
1    return _next.size() + 1;
2  }
3  
4  public Item get(int idx) ...{
5    if(idx == 0) ...{
6      return value();
7    }
8    return _next.get(idx - 1);
9  }
0
1  public Item value() ...{
2    return _value;
3  }
4  
5  public void add(Item item) ...{
6    if(_next != null) ...{
7      _next.add(item);
8    }
9    else ...{
0      _next = new MaintenanceQueue&lt;Item&gt;(item);
1    }
2  }
3  
4  public Iterator&lt;Item&gt; iterator() ...{
5    return new LinkedListIterator&lt;Item&gt;(this);
6  }
7  
8  public String toString() ...{
9    return &quot;LinkedList: &quot; + _value;
0  }
1  
2  public static &lt;Item&gt; MaintenanceQueue&lt;Item&gt; add(MaintenanceQueue&lt;Item&gt; list, Item item) ...{
3    if(list == null) ...{
4      return new MaintenanceQueue&lt;Item&gt;(item);
5    }
6    list.add(item);
7    return list;
8  }
9
0  private final static class LinkedListIterator&lt;Item&gt; implements Iterator&lt;Item&gt; ...{
1    private MaintenanceQueue&lt;Item&gt; _current;
2    
3    public LinkedListIterator(MaintenanceQueue&lt;Item&gt; list) ...{
4      _current = list;
5    }
6
7    public boolean hasNext() ...{
8      return _current != null;
9    }
0
1    public Item next() ...{
2      Item item = _current.value();
3      _current  = _current.next();
4      return item;
5    }
6
7    public void remove() ...{
8      throw new UnsupportedOperationException();
9    }
0  }
1
2  public static &lt;Item&gt; Iterator&lt;Item&gt; iterator(MaintenanceQueue&lt;Item&gt; list) ...{
3    return (list == null ? new LinkedListIterator&lt;Item&gt;(null) : list.iterator());
4  }
5
6}</pre>    </body></html>