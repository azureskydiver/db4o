<?xml version="1.0" encoding="utf-8"?> <html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="309" MadCap:lastWidth="1029">    <head>    </head>    <body>        <pre class="prettyprint" xml:space="preserve">ListDeletingExample.cs: RemoveAndDeleteTest
private static void RemoveAndDeleteTest()
        ...{
            // set update depth to 1 as we only 
            // modify List field
            IConfiguration configuration = Db4oFactory.NewConfiguration();
            configuration.ObjectClass(typeof(ListObject)).UpdateDepth(1);
            IObjectContainer db = Db4oFactory.OpenFile(configuration, Db4oFileName);
            try
            ...{
                IList&lt;ListObject&gt; result = db.Query&lt;ListObject&gt;(typeof(ListObject));
                if (result.Count &gt; 0)
                ...{
                    // retrieve a ListObject
                    ListObject lo1 = result[0];
                    // create a copy of the objects list
                    // to memorize the objects to be deleted
                    List &lt;DataObject&gt;tempList = new List&lt;DataObject&gt;(lo1.Data);
                    // remove all the objects from the list
                    lo1.Data.RemoveRange(0, lo1.Data.Count);
                    db.Set(lo1);
                    // and delete them from the database
                    foreach (DataObject obj in tempList)
                    ...{
                       db.Delete(obj);
                    }
                }
            }
            finally
            ...{
                db.Close();
            }
            // check DataObjects in the list
            // and DataObjects in the database
            db = Db4oFactory.OpenFile(Db4oFileName);
            try
            ...{
                IList&lt;ListObject&gt; result = db.Query&lt;ListObject&gt;(typeof(ListObject));
                if (result.Count &gt; 0)
                ...{
                    ListObject lo1 = result[0];
                    Console.WriteLine(&quot;DataObjects in the list:  &quot; + lo1.Data.Count);
                }
                IList&lt;DataObject&gt; removedObjects = db.Query&lt;DataObject&gt;(typeof(DataObject));
                Console.WriteLine(&quot;DataObjects in the database: &quot; + removedObjects.Count);
            }
            finally
            ...{
                db.Close();
            }
        }</pre>    </body></html>