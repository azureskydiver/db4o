<?xml version="1.0" encoding="utf-8"?> <html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="309" MadCap:lastWidth="1029">    <head>    </head>    <body>        <pre class="prettyprint" xml:space="preserve">QueryPerformanceBenchmark.java: runDifferentObjectsTest
private void runDifferentObjectsTest()  {

    init();
    System.out.println(&quot;Storing &quot; + _count + &quot; objects with &quot; + _depth
        + &quot; levels of embedded objects:&quot;);

    clean();
    System.out.println();
    System.out.println(&quot; - primitive object with int field&quot;);
    open(configure());
    storeSimplest();
    close();
    open(configure());
    startTimer();
    Query query = objectContainer.query();
    query.constrain(SimplestItem.class);
    query.descend(&quot;_id&quot;).constrain(1);
    List result = query.execute();
    SimplestItem simplestItem = (SimplestItem) result.get(0);
    stopTimer(&quot;Querying SimplestItem: &quot; + simplestItem._id);
    close();

    open(configure());
    System.out.println();
    System.out.println(&quot; - object with String field&quot;);
    store();
    close();
    open(configure());
    startTimer();
    query = objectContainer.query();
    query.constrain(Item.class);
    query.descend(&quot;_name&quot;).constrain(&quot;level1/2&quot;);
    result = query.execute();
    Item item = (Item) result.get(0);
    stopTimer(&quot;Querying object with String field: &quot; + item._name);
    close();

    clean();
    open(configure());
    System.out.println();
    System.out.println(&quot; - object with StringBuffer field&quot;);
    storeWithStringBuffer();
    close();
    open(configure());
    startTimer();
    query = objectContainer.query();
    query.constrain(ItemWithStringBuffer.class);
    query.descend(&quot;_name&quot;).constrain(new StringBuffer(&quot;level1/2&quot;));
    result = query.execute();
    ItemWithStringBuffer itemWithSB = (ItemWithStringBuffer) result.get(0);
    stopTimer(&quot;Querying object with StringBuffer field: &quot;
        + itemWithSB._name);
    close();

    clean();
    open(configure());
    System.out.println();
    System.out.println(&quot; - object with int array field&quot;);
    storeWithArray();
    close();
    open(configure());
    startTimer();
    query = objectContainer.query();
    query.constrain(ItemWithArray.class);
    Query idQuery = query.descend(&quot;_id&quot;);
    idQuery.constrain(new Integer(1));
    idQuery.constrain(new Integer(2));
    idQuery.constrain(new Integer(3));
    idQuery.constrain(new Integer(4));
    result = query.execute();

    ItemWithArray itemWithArray = (ItemWithArray) result.get(0);
    stopTimer(&quot;Querying object with Array field: [&quot; + itemWithArray._id[0]
        + &quot;, &quot; + +itemWithArray._id[1] + &quot;, &quot; + +itemWithArray._id[2]
        + &quot;, &quot; + +itemWithArray._id[0] + &quot;]&quot;);
    close();

    clean();
    open(configure());
    System.out.println();
    System.out.println(&quot; - object with ArrayList field&quot;);
    storeWithArrayList();
    close();
    open(configure());
    startTimer();
    query = objectContainer.query();
    query.constrain(ItemWithArrayList.class);
    query.descend(&quot;_ids&quot;).constrain(1).contains();
    result = query.execute();
    ItemWithArrayList itemWithArrayList = (ItemWithArrayList) result.get(0);
    stopTimer(&quot;Querying object with ArrayList field: &quot;
        + itemWithArrayList._ids.toString());
    close();

  }</pre>    </body></html>