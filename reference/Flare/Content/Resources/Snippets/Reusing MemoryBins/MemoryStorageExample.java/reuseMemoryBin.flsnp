<?xml version="1.0" encoding="utf-8"?> <html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="309" MadCap:lastWidth="1029">    <head>    </head>    <body>        <pre class="prettyprint" xml:space="preserve">MemoryStorageExample.java: reuseMemoryBin
public static void reuseMemoryBin()  {
    // Create original storage
    MemoryStorage origStorage = new MemoryStorage();
    EmbeddedConfiguration origConfig = Db4oEmbedded.newConfiguration();
    origConfig.file().storage(origStorage);
    // A new MemoryBin identified by DB4O_URI will be created
    ObjectContainer origDb = Db4oEmbedded.openFile(origConfig, DB4O_URI);
    origDb.store(new Book(&quot;Alice in Wonderland&quot;));
    origDb.close();

    // Retrieve original bin by its URI
    MemoryBin origBin = origStorage.bin(DB4O_URI);
    // This bin contains the database data
    byte[] data = origBin.data();

    // Create a new bin, using the data from the original bin
    MemoryBin newBin = new MemoryBin(data, new DoublingGrowthStrategy());
    MemoryStorage newStorage = new MemoryStorage();
    // Assign the new bin to a new MemoryStorage using the same DB4O_URI
    newStorage.bin(DB4O_URI, newBin);
    EmbeddedConfiguration newConfig = Db4oEmbedded.newConfiguration();
    newConfig.file().storage(origStorage);
    // Open object container using the new bin with the original data
    ObjectContainer newDb = Db4oEmbedded.openFile(newConfig, DB4O_URI);
    // test that the data is still there
    Book book = (Book) newDb
        .queryByExample(new Book(&quot;Alice in Wonderland&quot;)).get(0);
    System.out.println(book);
    newDb.close();
  }</pre>    </body></html>