<?xml version="1.0" encoding="utf-8"?> <html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="309" MadCap:lastWidth="1029">    <head>    </head>    <body>        <pre class="prettyprint" xml:space="preserve">MonoTest.cs
using System;
using System.IO;

using Db4objects.Db4o;
using Db4objects.Db4o.Query;


namespace Db4objects.Db4odoc.MonoTest
 {

    public class MonoTest
     {
        private const string Db4oFileName = &quot;test.db4o&quot;;

        public static void Main(string[] args)
         {
            File.Delete(Db4oFileName);
            IObjectContainer db = Db4oFactory.OpenFile(Db4oFileName);
            try
             {
                Pilot pilot1 = new Pilot(&quot;Michael Schumacher&quot;, 100);
                db.Set(pilot1);
                Console.WriteLine(&quot;Stored {0}&quot;, pilot1);
            }
            finally
             {
                db.Close();
            }
            db = Db4oFactory.OpenFile(Db4oFileName);
            try
             {
                IObjectSet result = db.Get(typeof(Pilot));
                ListResult(result);
            }
            finally
             {
                db.Close();
            }
        }
        // end Main

        private static void ListResult(IObjectSet result)
         {
            System.Console.WriteLine(result.Count);
            for (int i = 0; i &lt; result.Count; i++)
             {
                System.Console.WriteLine(result[i]);
            }
        }
        // end ListResult


        class Pilot
         {
            private string _name;
            private int _points;

            public Pilot(string name, int points)
             {
                _name = name;
                _points = points;
            }

            public string Name
             {
                get
                 {
                    return _name;
                }
                set
                 {
                    _name = value;
                }
            }

            public int Points
             {
                get
                 {
                    return _points;
                }
            }

            public override string ToString()
             {
                return string.Format(&quot;{0}/{1}&quot;, _name, _points);
            }
        }

    }
}</pre>    </body></html>