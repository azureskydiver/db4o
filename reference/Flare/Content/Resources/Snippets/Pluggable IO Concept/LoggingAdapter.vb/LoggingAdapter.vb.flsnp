<?xml version="1.0" encoding="utf-8"?> <html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="309" MadCap:lastWidth="1029">    <head>    </head>    <body>        <pre class="prettyprint" xml:space="preserve">LoggingAdapter.vb
' Copyright (C) 2004 - 2007 Versant Inc. http://www.db4o.com 

Imports System.IO
Imports Db4objects.Db4o.IO

Namespace Db4objectsNamespace Db4objects.Db4odoc.IOs
    Public Class LoggingAdapterClass LoggingAdapter
        Inherits IoAdapter
        Private _delegate As Sharpen.IO.RandomAccessFile

        Public Sub New()Sub New()
        End Sub

        Protected Friend Sub New()Sub New(ByVal path As String, ByVal lockFile As Boolean, ByVal initialLength As Long, ByVal rOnly As Boolean)
            Dim mode As String
            If rOnly = True Then
                mode = &quot;r&quot;
            Else
                mode = &quot;rw&quot;
            End If
            _delegate = New Sharpen.IO.RandomAccessFile(path, mode)
            If initialLength &gt; 0 Then
                _delegate.Seek(initialLength - 1)
                Dim b As Byte() = New Byte() {0}
                _delegate.Write(b)
            End If
        End Sub


        Public Sub SetOut()Sub SetOut(ByVal outs As TextWriter)
            System.Console.SetOut(outs)
        End Sub

        Public Overrides Sub Close()Sub Close()
            System.Console.WriteLine(&quot;Closing file&quot;)
            _delegate.Close()
        End Sub

        Public Overrides Sub Delete()Sub Delete(ByVal path As String)
            System.Console.WriteLine(&quot;Deleting file &quot; + path)
            File.Delete(path)
        End Sub

        Public Overrides Function Exists()Function Exists(ByVal path As String) As Boolean
            Dim existingFile As Sharpen.IO.File = New Sharpen.IO.File(path)
            Return existingFile.Exists() And existingFile.Length() &gt; 0
        End Function

        Public Overrides Function GetLength()Function GetLength() As Long
            System.Console.WriteLine(&quot;File length:&quot; + _delegate.Length().ToString())
            Return _delegate.Length()
        End Function

        Public Overrides Function Open()Function Open(ByVal path As String, ByVal lockFile As Boolean, ByVal initialLength As Long, ByVal rOnly As Boolean) As IoAdapter
            System.Console.WriteLine(&quot;Opening file &quot; + path)
            Return New LoggingAdapter(path, lockFile, initialLength, rOnly)
        End Function

        Public Overrides Function Read()Function Read(ByVal bytes() As Byte, ByVal length As Integer) As Integer
            System.Console.WriteLine(&quot;Reading &quot; + length.ToString() + &quot; bytes&quot;)
            Return _delegate.Read(bytes, 0, length)
        End Function

        Public Overrides Sub Seek()Sub Seek(ByVal pos As Long)
            System.Console.WriteLine(&quot;Setting pointer position to  &quot; + pos.ToString())
            _delegate.Seek(pos)
        End Sub

        Public Overrides Sub Sync()Sub Sync()
            System.Console.WriteLine(&quot;Synchronizing&quot;)
            _delegate.GetFD().Sync()
        End Sub

        Public Overrides Sub Write()Sub Write(ByVal buffer() As Byte, ByVal length As Integer)
            System.Console.WriteLine(&quot;Writing &quot; + length.ToString() + &quot; bytes&quot;)
            _delegate.Write(buffer, 0, length)
        End Sub
    End Class
End Namespace</pre>    </body></html>