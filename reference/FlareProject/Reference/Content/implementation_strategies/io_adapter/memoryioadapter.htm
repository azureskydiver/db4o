<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>MemoryIoAdapter</title>
    <link rel="stylesheet" type="text/css" href="../../../style.css">
  </head>
  <body>
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>MemoryIoAdapter</h1>

<p>One of the built-in db4o IoAdapters is MemoryIoAdapter. This adapter keeps the whole database&nbsp;in RAM instead of a hard-drive. Obviously such in-memory database has both advantages and disadvantages:</p>

<p>Pros:</p>

<ul>
<li>
it is a lot faster, as no disc access is necessary.</li>
</ul>

<p>
Cons:</p>

<ul>
<li>
it only works, if the database fits into RAM;</li>
</ul>

<ul>
<li>
all the data can be lost in case of a system failure.</li>
</ul>

<p>You can achieve the best results combining the usage of MemoryIoAdapter with the normal file adapter. Let's look, how MemoryIoAdapter should be used in your application.</p>

<p>First of all MemoryIoAdapter should be configured. The API gives you control over memory consumption with</p>







<p>method. Length defines the amount of bytes in memory that should be allocated, when no more free slots are found within the allocated file. Large value (100,000) will assure the best performance; small value (100) will keep the memory consumption at the lowest level. The default setting is 10,000.</p>

<p>MemoryIoAdaptor supplies methods to exchange data with the database from the filesystem.</p>







<p>This method allows you to put the contents of the stored database file (byte[]) into the memory database. </p>

<p>The opposite method:</p>







<p>returns the updated byte[] array of the database in memory, which can be saved to disc as a normal database file.</p>

<p>The filename can be used for all further access (#openFile, #openServer methods) like normal file name. Make sure that you close the database file on the disc after reading its contents into memory and writing it back.</p>

<p>The configured adapter should be assigned as db4o IO system:</p>




Let's create sample database on the disc:






<p>Now we can read the database into the memory file and work in the memory using MemoryIoAdapter:</p>







<p>Well, the changes are made and written to the disc. Let's check, if all the data are in place.&nbsp;We will need to switch back to the normal RandomAccessFileAdapter:</p>







<p>So, switching between disc and memory database is quite easy. It can be used to&nbsp;increase performance on certain operations. More flexibility can be reached writing&nbsp;your own IoAdapter implementation.</p></div>
    </div>
    <div id="footer">
					This revision (12) was last Modified 2006-11-13T14:51:09 by Tetyana.
				</div>
  </body>
</html>