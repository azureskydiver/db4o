<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>TSerializable Translator</title>
    <link rel="stylesheet" type="text/css" href="../../../../style.css">
  </head>
  <body>
    <div class="CommonContent">
      <div class="CommonContentArea">
        <h1>TSerializable Translator</h1><p>TSerializable
translator allows persistence of classes that do not have a constructor acceptable
for db4o (For more information see <a href="../../translators.htm" class="wikiLink">Translators</a>).
Under the hood this translator converts an object to a memory stream on store
and restores it upon instantiation. The limitations of this translator:</p>

<ul><li>if the stored type is refactored, the
     object value won't be retrievable from the database;</li><li>the translator will be useless if
     querying for object fields is required (unless each object is fully
     instantiated before querying).</li></ul>

<p>TSerializable
translator should be used only with classes implementing java.io.Serializable interface (Java) or using [Serializable] attribute (.NET).</p>





<p>

</div>
    </div>
    <div id="footer">
					This revision (3) was last Modified 2007-08-13T17:32:15 by Tetyana.
				</div>
  </body>
</html>