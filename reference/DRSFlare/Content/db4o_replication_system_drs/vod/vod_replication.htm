<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="2242" MadCap:lastWidth="574">
    <head>
    </head>
    <body>
        <h1>VOD Replication</h1>
        <p>After setting up <a href="setup.htm">JDO</a> and the <a href="setup-event-processing.htm">event processing</a> we're ready to start the replication. </p>
        <MadCap:snippetBlock src="../../Snippets/vod-requirements.flsnp" />
        <h2>Classpath</h2>
        <p>For the VOD replication following libraries need to be in the class-path:</p>
        <MadCap:snippetBlock src="../../Snippets/VODDrsClasspath.flsnp" />
        <h2><a name="Prepare"></a>Prepare db4o </h2>
        <p>The first thing you need to do is preparing db4o for replication. Enable the UUID and version-number support for your database. UUID's are used to recognize objects across the database boundary. The version number is used the track changes.</p>
        <p>Because classes are enhanced for JDO they have additional fields. To avoid that these artificial fields are stored in the db4o database you need to use the JDOReflector. This reflector recognized JDO -aware objects and treats them differently.</p>
        <MadCap:snippetBlock src="../../CodeExamples/drs/vod/SimpleReplication-Enable-UUIDs-and-commit-timestamps-use-the-JDO-reflector.all.flsnp" />
        <h2><a name="db4oToVod"></a>Replication from db4o to VOD</h2>
        <p>After this preparation you can store, retrieve and update normally. To start the replication-process you need to create the two replication partners. Open a replication partner for db4o like this:</p>
        <MadCap:snippetBlock src="../../CodeExamples/drs/vod/SimpleReplication-Open-the-db4o-replication-provider.all.flsnp" />
        <p>Then open a replication provider for VOD. First create a new VodDatabase instance by passing the JDO PersistenceManagerFactory or the <a href="setup.htm#JDOSetup">configuration properties</a> to the constructor.</p>
        <p>Second configure the host and port of the event processor with the configureEventProcessor method. Use the port which you've configured when setting up the <a href="setup-event-processing.htm">event processor</a>. It's the port you've configured with the '-eventProcessorPort'-configuration.</p>
        <p>Then create the VOD replication provider. For the VOD replication provider you should additionally add all classes which you want to replicate. Why is this necessary? In VOD you usually have a huge database and you only want to replicate parts of it to db4o. Therefore you can specify which classes are replicated. In case you don’t specify anything only the types which have been already replicate once are replicated.</p>
        <MadCap:snippetBlock src="../../CodeExamples/drs/vod/SimpleReplication-Open-the-VOD-replication-provider.all.flsnp" />
        <p>After that you can start the replication. Request the changes from the db4o replication provider. Then iterate over the changed objects and replicate them. Commit to complete the replication process.</p>
        <MadCap:snippetBlock src="../../CodeExamples/drs/vod/SimpleReplication-Start-replication.all.flsnp" />
        <p>After this we've replicated the objects from db4o to VOD.</p>
        <h2><a name="vodToDb4o"></a>Replicate From VOD To db4o</h2>
        <p>To replicate from VOD to db4o ensure that you have configured the VOD replication provider properly. You need to add the types which you're going to replicate.</p>
        <MadCap:snippetBlock src="../../CodeExamples/drs/vod/SimpleReplication-Open-the-VOD-replication-provider.all.flsnp" />
        <p>To replicate from VOD to db4o you just need to change the replication direction. Take the changes from the VOD database and replicate them to db4o.</p>
        <MadCap:snippetBlock src="../../CodeExamples/drs/vod/SimpleReplication-From-VOD-to-db4o.all.flsnp" />
        <h2><a name="Bidirectional"></a>Bidirectional Replication</h2>
        <p>To replicate bidirectional you need to get the changes from both databases and then replicate those changes.</p>
        <MadCap:snippetBlock src="../../CodeExamples/drs/vod/SimpleReplication-Bidirectional-replication.all.flsnp" />
        <p>&#160;</p>
    </body>
</html>