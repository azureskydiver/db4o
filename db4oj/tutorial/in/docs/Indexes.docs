.n
.a Indexes ..
.0 Indexes ..

db4o allows to index fields to provide maximum querying ._
performance. To request an index to be created, you would ._
issue the following API method call in your global  ._
.l Configuration db4o configuration method ..  before you ._
open an ObjectContainer/ObjectServer:

.c // assuming
class Foo{
  String bar;
}

Db4o.configure().objectClass(Foo.class).objectField("bar").indexed(true); ..

If the configuration is set in this way, an index on the Foo#bar field ._
will be created (if not present already) the first time the Foo class ._
will be used in an ObjectContainer. 

Contrary to all other  .l Configuration configuration calls ..  indexes ._
- once created - will remain in a database even if the index configuration ._
call is not issued before opening an ObjectContainer/ObjectServer. 

To drop an index you would also issue a configuration call in your db4o ._
configuration method:
.c Db4o.configure().objectClass(Foo.class).objectField("bar").indexed(true); ..
Actually dropping the index will take place the next time the respective ._
class is used.

db4o will tell you when it creates and drops indexes, if you choose a ._
message level of 1 or higher:
.c Db4o.configure().messageLevel(1); ..