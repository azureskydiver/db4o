.0 First Glance ..
Before diving straight into the first source code samples ._
let's get you familiar with some basics.

.1 The db4o engine ..
The db4o object database engine consists of one single jar file. ._
This is all that you need to program against. The versions ._
supplied with the distribution can be found in /db4o- .p version .. /lib/. You ._
will only need one of the following libraries, not all of them.

.b db4o- .p version .. -core-java1.1.jar ..
will run with most Java JDKs that supply JDK 1.1.x functionality ._
such as reflection and Exception handling. That includes many ._
IBM J9 configurations, Symbian and Savaje.

.b db4o- .p version .. -core-java1.2.jar ..
is built for all Java JDKs between 1.2 and 1.4.

.b db4o- .p version .. -core-java5.jar ..
is built for Java JDK 5 and JDK 6

If you intend to use client/server version of db4o you will additionally need ._
client/server library matching your JDK version:

.b db4o- .p version .. -cs-java1.1.jar ..
.b db4o- .p version .. -cs-java1.2.jar ..
.b db4o- .p version .. -cs-java5.jar ..
 
Some advanced functionality such as cluster support, platform-specific IO adapters,
statistic tools etc can be added by including db4o optional library:

.b db4o- .p version .. -optional-java1.1.jar ..
.b db4o- .p version .. -optional-java1.2.jar ..
.b db4o- .p version .. -optional-java5.jar ..
   
.1 Installation ..
If you add one of the above db4o-*.jar files to your CLASSPATH ._
db4o is installed. In case you work with an integrated development ._
environment like  .l http://www.eclipse.org Eclipse ..  you would ._
copy the db4o-*.jar to the /lib/ ._
folder under your project and add db4o to your project as a library.




.< ObjectManagerIntro ..
.< APIOverview ..
