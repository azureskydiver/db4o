<?xml version="1.0"?>
<project name="Db4objects.Db4o" default="build">
	<!--
	The following properties should be specified in machine.properties:
	
		dir.lib.sandcastle=<path to sandcastle installation>
		
	Notice however that the build will overwrite a few files in the sandcastle installation,
	if you don't want this, copy your sandcastle installation to a different folder.
	-->
	
	<import file="common-dotnet.xml" />
	
	<fileset id="db4oj.srcfiles" dir="..">
		<include name="db4oj/core/src/**/*.java" />
	</fileset>
	
	<fileset id="db4onqopt.srcfiles" dir="../db4onqopt">
		<include name="core/src/com/db4o/nativequery/expr/**/*.java" />
		<include name="core/src/com/db4o/nativequery/optimization/SODAQueryBuilder.java" />
		<include name="core/src/com/db4o/nativequery/optimization/ComparisonQueryGeneratingVisitor.java" />
		<include name="core/src/com/db4o/nativequery/optimization/ReflectUtil.java" />
	</fileset>

	<fileset id="db4oclassedit.srcfiles" dir="../db4oclassedit">
		<include name="src/com/db4o/instrumentation/core/NativeClassFactory.java" />
		<include name="src/com/db4o/instrumentation/core/DefaultNativeClassFactory.java" />
	</fileset>

	<macrodef name="copy-bin">
		<attribute name="srcdir" />
		<attribute name="name" />
		<sequential>
			<copy todir="${dir.dist.net.build}/bin/@{name}">
				<fileset dir="@{srcdir}">
					<include name="*.dll" />
					<include name="*.exe" />
					<include name="*.xml" />
					<exclude name="*Tests*" />
					<exclude name="*Db4oUnit*" />
				</fileset>
			</copy>
		</sequential>
	</macrodef>
	
	<macrodef name="copy-bin-set">
		<attribute name="suffix" default="" />
		<attribute name="srcdir" />
		<sequential>
			<copy-bin srcdir="@{srcdir}" name="net-${target.framework.version}@{suffix}" />
			<copy-bin srcdir="@{srcdir}/compact" name="compact-${target.framework.version}@{suffix}" />
		</sequential>
	</macrodef>
	
	<macrodef name="prepare-assemblyInfo">
		<attribute name="configuration" />
		<sequential>
			<updateAssemblyInfo
				keyfile="${filename.keyfile}"
				version="${assembly.version}"
				configuration="@{configuration} ${target.framework.version}">
				<fileset dir="${dir.dist.net.compile}">
					<include name="**/AssemblyInfo.cs" />
				</fileset>
			</updateAssemblyInfo>
		</sequential>
	</macrodef>
	
	<macrodef name="csc-all">
		<attribute name="assemblyName" />		
		<attribute name="sources" description="sources fileset id" />
		
		<attribute name="netOutputDir" default="${dir.dist.dll.net}" />
		<attribute name="netConfiguration" default=".NET" />
		
		<attribute name="compactOutputDir" default="${dir.dist.dll.compact}" />
		<attribute name="compactConfiguration" default=".NET CompactFramework" />
		
		<element name="references" optional="yes" />
		<element name="compact-args" optional="yes" />
		
		<sequential>
			<mkdir dir="@{netOutputDir}" />
			<mkdir dir="@{compactOutputDir}" />
			
			<reset-dir dir="${dir.dist.net.compile}" />
			<copy todir="${dir.dist.net.compile}">
				<fileset refid="@{sources}" />
			</copy>			
			<prepare-assemblyInfo configuration="@{netConfiguration}" />
				
			<csc
				destfile="@{netOutputDir}/@{assemblyName}.dll"
				docfile="@{netOutputDir}/@{assemblyName}.xml"
				targettype="library"
				definitions="${csharp.definitions}"
				executable="${csc.executable}"
				debug="${debug}"
				optimize="true"
				warnlevel="0"
				srcdir="${dir.dist.net.compile}">
				
				<include name="**/*.cs" />
				
				<references />
			</csc>
			
			<if>
			<equals arg1="${mono}" arg2="true" />
			<then>
				<echo>skipping CompactFramework build</echo>
			</then>
			<else>
				<prepare-assemblyInfo configuration="@{compactConfiguration}" />
				<echo>
	@{assemblyName} (Compact Framework)
	=================
	csc = ${csc.executable}
	dir = ${dir.dll.cf}
	=================
				</echo>
				<exec executable="${csc.executable}" dir="${dir.dist.net.compile}" failonerror="true">
					<arg value="/optimize" />
					<arg value="/debug-" />
					<arg value="/define:${csharp.definitions.cf}" />
					<arg value="/out:@{compactOutputDir}/@{assemblyName}.dll" />
					<arg value="/target:library" />
					<arg value="/warn:0" />
					<arg value="/noconfig" />
					<arg value="/nostdlib+" />
					<arg value="/reference:${dir.dll.cf}/mscorlib.dll" />
					<arg value="/reference:${dir.dll.cf}/System.dll" />
					<arg value="/doc:@{compactOutputDir}/@{assemblyName}.xml" />
					<compact-args />
					<arg value="/recurse:*.cs" />
				</exec>
			</else>
			</if>
		</sequential>
	</macrodef>
	
	<target name="check-dependencies">
		<copy todir="${dir.dist.dll.net}">
			<fileset dir="${dir.libs.net}">
				<include name="*.*" />
			</fileset>
		</copy>
		<if>
			<not>
				<equals arg1="${mono}" arg2="true" />
			</not>
			<then>
				<copy todir="${dir.dist.dll.compact}">
					<fileset dir="${dir.libs.cf}">
						<include name="*.*" />
					</fileset>
				</copy>
			</then>
		</if>
		<uptodate
			property="csharp.uptodate"
			targetfile="${dir.n.v6.core.src}/Transaction.cs">
			<srcfiles dir="${dir.j.core.src}" >
				<include name="**/*.java" />
				<exclude name="**/Db4oVersion.java" />
			</srcfiles>
		</uptodate>
	</target>
	
	
	<target name="run-tests" depends="clean, configure, run-tests-mono, run-tests-net">
	</target>
	
	<target name="run-tests-core" depends="build-tests">
		<exec executable="${dir.dist.dll.net}/Db4objects.Db4o.Tests.exe" failonerror="true" timeout="3600000">
		</exec>
	</target>

	<target name="run-tests-admin" depends="build-admin-tests" unless="skip.admin">
		<exec executable="${dir.dist.dll.net}/Db4oAdmin.Tests.exe" dir="${dir.dist.dll.net}" failonerror="true" timeout="1800000">
		</exec>
	</target>
	
	<target name="run-tests-net" depends="run-tests-core, run-tests-admin" unless="mono">
	</target>
	
	<target name="run-tests-mono" depends="build-tests" if="mono">
		<exec executable="${mono.vm.executable}" failonerror="true">
			<arg value="--debug" />
			<arg file="${dir.dist.dll.net}/Db4objects.Db4o.Tests.exe" />
		</exec>
	</target>
	
	<target name="package" depends="build, ndoc, meta-package" description="Builds the complete set of .net 2 distros">
	</target>
	
	<target name="meta-package" depends="build-zip, build-net-installer">
	
	</target>
	
	<target name="prepare-package-structure" depends="package-sources, package-binaries, package-docs">
	
		<if>
			<equals arg1="${mono}" arg2="true" />
			<then>
				<copy todir="${dir.dist.net.build}">			
					<fileset dir="${dir.config}/mono">
						<include name="copying.html" />
						<include name="readme.html" />
					</fileset>
				</copy>
			</then>
			<else>
				<copy todir="${dir.dist.net.build}">			
					<fileset dir="${dir.config}/net">
						<include name="db4o.license.html" />
					</fileset>
				</copy>
				<copy todir="${dir.dist.net.build}/bin">			
					<fileset dir="${dir.config}/net">
						<include name="Cecil.FlowAnalysis.license.html" />
						<include name="Mono.Cecil.license.html" />
						<include name="Mono.GetOptions.license.html" />
					</fileset>
				</copy>
				<!-- readme's in distribution folders-->
				<copy file="${dir.config}/net/readme.html" tofile="${dir.dist.net.build}/readme.html" >
			        <filterchain>	
			           <striplinecomments>
			              <comment value="!"/>
			           </striplinecomments>
			           <replacetokens>
			                <token key="db4o.version.dotted" value="${db4o.version.dotted}"/>
			            </replacetokens>
			        </filterchain>
			    </copy>
				<copy file="${dir.config}/net/net_doc_readme.html" tofile="${dir.dist.net.build}/doc/readme.html" />
				<copy file="${dir.config}/net/net_src_readme.html" tofile="${dir.dist.net.build}/src/readme.html" />
				<copy file="${dir.config}/net/net_bin_readme.html" tofile="${dir.dist.net.build}/bin/readme.html" />
			
			</else>
		</if>
		
		<loadfile property="content.gplheader" srcfile="${file.gplheader}" encoding="iso-8859-1" />		
		<filehead beforePattern="using|namespace|#if" header="${content.gplheader}" >
			<sources dir="${dir.dist.net.build.src}">
				<include name="**/*.cs" />
				<exclude name="**/Libs/**" />
			</sources>
		</filehead>
		
	</target>
	
	<target name="package-sources">

		<mkdir dir="${dir.dist.net.build}" />
		<mkdir dir="${dir.dist.net.build}/src" />
	
		<copy todir="${dir.dist.net.build}/src">
			<fileset dir="../db4o.net">
				<include name="**/*.cs" />
				<include name="**/*.csproj" />
				<include name="**/*.csdproj" />
				<include name="**/*.sln" />
				<include name="**/*.html" />
				
				<include name="Libs/**/*" />
				
				<!-- tutorial files -->
				<include name="**/*.resources" />
				<include name="**/*.resx" />
				<include name="**/*.ico" />
				<include name="**/*.PNG" />
				
				<include name="db4objects.snk" />
				
				<include name="include.mk" />
				<include name="**/Makefile" />				
				
				<!-- Mono.Cecil and family files -->
				<include name="**/configure" />
				<include name="**/*.in" />
				<include name="**/*.sources" />				
				<include name="**/AUTHORS" />
				<include name="**/README" />
				<include name="**/ChangeLog" />
				<include name="**/*.build" />
				<include name="**/*.inc" />
				
				<exclude name="**/obj/**" />	
			</fileset>
		</copy>
	</target>
	
	<target name="package-binaries">
		<!--
			
			/bin/compact-2.0/
			/bin/compact-2.0-legacy/
			/bin/net-2.0/
			/bin/net-2.0-legacy/
			
		-->
		<property name="dir.bin" location="${dir.dist.net.build}/bin" />
		<copy-bin-set suffix="" srcdir="${dir.dist.dll}"  />
		
	</target>
	
	<target name="package-tutorial">
		<copy todir="${dir.dist.net.build.tutorial}">
			<fileset dir="${dir.n.v6.tutorial.bin}">
				<include name="**/**" />
				<exclude name="**/*.pdb" />
			</fileset>
		</copy>
		
		<!--
		<copy todir="${dir.dist.net.build.tutorial}/vb">
			<fileset dir="${dir.j.tutorial.out.vb}">
				<include name="**/**" />
			</fileset>
		</copy>
		-->
	</target>
	
	<target name="package-api" depends="package-api-net, package-api-mono">
	</target>
	
	<target name="package-api-net" unless="mono">
		<mkdir dir="${dir.dist.net.build}/doc/api" />
		<copy todir="${dir.dist.net.build}/doc/api">
			<fileset dir="${dir.dist.ndoc}">
				<include name="db4o.chm" />
				<include name="db4o.HxS" />
				<include name="db4oCollection.*" />
				<include name="db4oCollection.h2reg.ini" />
			</fileset>
			<fileset dir="lib/h2reg">
				<include name="*.exe" />
				<include name="*.ini" />
			</fileset>
		</copy>		
	</target>
	
	<target name="package-api-mono" if="mono">
		<mkdir dir="${dir.dist.net.build}/doc/api" />		
		<copy todir="${dir.dist.net.build}/doc/api">
			<fileset dir="${dir.dist.ndoc}" includes="**/**" />
		</copy>
	</target>
	
	<target name="package-docs" depends="package-tutorial, package-api, package-reference">
	</target>
	
	<target name="package-reference">
	
		<mkdir dir="${dir.dist.net.build}/doc/reference" />
		<copy todir="${dir.dist.net.build}/doc/reference">
			<fileset dir="../docWiki/net/">
				<include name="**/**" />
			</fileset>
		</copy>
		
	</target>
	
	<target name="build-zip" depends="prepare-package-structure">
	
		<zip destfile="${dir.dist}/${db4o.file}${installer.package.suffix}.zip">
			<fileset dir="${dir.dist.net}" includes="${folder.build}/**" />
		</zip>			
		
	</target>
	
	<target name="build-net-installer"  depends="prepare-package-structure" unless="mono">
		<ant antfile="build-net-installer.xml">
			<property name="installer.msi" location="${dir.dist}/${db4o.file}${installer.package.suffix}.msi" />
			<property name="installer.package.guid" value="${installer.package.guid}" />
			<property name="installer.upgrade.guid" value="${installer.upgrade.guid}" />
			<property name="target.framework.version" value="${target.framework.version}" />
		</ant>
	</target>
	
	<target name="build" depends="init, configure, build-all">
	</target>

	<target name="build-all" depends="build-core, build-tools, build-tests, build-admin, build-tutorial">
	</target>
	
	<target name="rebuild" depends="clean, build">
	</target>

	<target name="build-tests" depends="build-tools, build-db4ounit-extensions">
		<csc
			destfile="${dir.dist.dll.net}/Db4objects.Db4o.Tests.exe"
			targettype="exe"
			srcdir="${dir.n.v6}/Db4objects.Db4o.Tests"
			mainclass="Db4objects.Db4o.Tests.AllTests"
			definitions="${csharp.definitions}"
			debug="true"
			executable="${csc.executable}"
			extraoptions="${csc.tests.extraoptions}">
			<reference dir="${dir.dist.dll.net}">
				<include name="Db4objects.Db4o.dll" />
				<include name="Db4objects.Db4o.Tools.dll" />
				<include name="Db4oUnit.dll" />
				<include name="Db4oUnit.Extensions.dll" />
			</reference>
		</csc>
	</target>
		
	<target name="build-db4ounit-extensions" depends="build-core, build-db4ounit"> 
		<csc
			destfile="${dir.dist.dll.net}/Db4oUnit.Extensions.dll"
			targettype="library"
			srcdir="${dir.n.v6}/Db4oUnit.Extensions"
			debug="true"
			executable="${csc.executable}">
			<reference dir="${dir.dist.dll.net}">
				<include name="Db4oUnit.dll" />
				<include name="Db4objects.Db4o.dll" />
			</reference>
		</csc>
	</target>
	
	<target name="build-db4ounit" depends="sharpen-db4ounit">
		<ant antfile="build-new-db4ounit.xml" target="compilenet" inheritall="false">
			<property name="csc.executable" value="${csc.executable}" />
		</ant>
	</target>
	
	<target name="build-tools" depends="build-core">
		<csc-all
			assemblyName="Db4objects.Db4o.Tools"
			sources="tools.sources">			
			
			<references>
				<reference dir="${dir.dist.dll.net}">
					<include name="Db4objects.Db4o.dll" />
					<include name="Mono.Cecil.dll" />
					<include name="Cecil.FlowAnalysis.dll" />
				</reference>
			</references>
			
			<compact-args>
				<arg value="/r:${dir.dist.dll.compact}/Db4objects.Db4o.dll" />
				<arg value="/r:${dir.dist.dll.compact}/Mono.Cecil.dll" />
				<arg value="/r:${dir.dist.dll.compact}/Cecil.FlowAnalysis.dll" />
			</compact-args>
		</csc-all>
	</target>
		
	<target name="build-core" depends="init, check-dependencies, sharpen">
	
		<fileset id="core.sources" dir="${dir.n.v6.core}">
			<include name="**/*.cs" />
		</fileset>
		
		<csc-all
				assemblyName="Db4objects.Db4o"
				sources="core.sources">
		</csc-all>		
	</target>
	
	<target name="build-admin-tests" depends="build-admin" unless="skip.admin">
	
		<property name="src.dir" location="${dir.n.v6}/Db4oAdmin/Db4oAdmin.Tests" />

		<csc
			destfile="${dir.dist.dll.net}/Db4oAdmin.Tests.exe"
			targettype="exe"
			mainclass="Db4oAdmin.Tests.Program"
			definitions="${csharp.definitions}"
			debug="true"
			executable="${csc.executable}"
			extraoptions="${csc.tests.extraoptions}">
	
			<resource
				file="${src.dir}/Core/Resources/PreserveDebugInfoSubject.cs"
				name="Db4oAdmin.Tests.Core.Resources.PreserveDebugInfoSubject.cs" />
			
			<resource
				file="${src.dir}/Core/Resources/CustomInstrumentationSubject.cs"
				name="Db4oAdmin.Tests.Core.Resources.CustomInstrumentationSubject.cs" />
			
			<resource
				file="${src.dir}/Core/Resources/ByAttributeInstrumentationSubject.cs"
				name="Db4oAdmin.Tests.Core.Resources.ByAttributeInstrumentationSubject.cs" />
			
			<resource
				file="${src.dir}/Core/Resources/ByNotAttributeInstrumentationSubject.cs"
				name="Db4oAdmin.Tests.Core.Resources.ByNotAttributeInstrumentationSubject.cs" />
		
			<resource
				file="${src.dir}/Core/Resources/ByFilterInstrumentationSubject.cs"
				name="Db4oAdmin.Tests.Core.Resources.ByFilterInstrumentationSubject.cs" />
		
			<resource
				file="${src.dir}/Core/Resources/ByNameInstrumentationSubject.cs"
				name="Db4oAdmin.Tests.Core.Resources.ByNameInstrumentationSubject.cs" />
	
			<resource
				file="${src.dir}/NQ/Resources/CFNQSubject.cs"
				name="Db4oAdmin.Tests.NQ.Resources.CFNQSubject.cs" />	
			<resource
				file="${src.dir}/NQ/Resources/PredicateSubject.cs"
				name="Db4oAdmin.Tests.NQ.Resources.PredicateSubject.cs" />
			<resource
				file="${src.dir}/NQ/Resources/UnoptimizablePredicateSubject.cs"
				name="Db4oAdmin.Tests.NQ.Resources.UnoptimizablePredicateSubject.cs" />
	
			<resource
				file="${src.dir}/TA/Resources/TAInstrumentationSubject.cs"
				name="Db4oAdmin.Tests.TA.Resources.TAInstrumentationSubject.cs" />	
			
			<resource
				file="${src.dir}/TA/Resources/TAAssemblyReferenceSubject.cs"
				name="Db4oAdmin.Tests.TA.Resources.TAAssemblyReferenceSubject.cs" />
	
			<resource
				file="${src.dir}/TA/Resources/TADoubleInstrumentationSubject.cs"
				name="Db4oAdmin.Tests.TA.Resources.TADoubleInstrumentationSubject.cs" />
			
			<src dir="${src.dir}">
				<include name="**/*.cs" />
				<exclude name="**/Resources/**" />
				<exclude name="**/obj/**" />
			</src>
	
			<reference dir="${dir.dist.dll.net}">
				<include name="Db4objects.Db4o.dll" />
				<include name="Db4objects.Db4o.Tools.dll" />
				<include name="Db4oUnit.dll" />
				<include name="Db4oUnit.Extensions.dll" />
				<include name="Mono.Cecil.dll" />
				<include name="Cecil.FlowAnalysis.dll" />
				<include name="Db4oAdmin.exe" />
			</reference>
		</csc>
	</target>
	
	<target name="build-admin" depends="build-tools" unless="skip.admin">
		<copy todir="${dir.dist.dll.net}" file="${dir.libs.net}/Mono.Cecil.Pdb.dll" />
		<csc outputfile="${dir.dist.dll.net}/Db4oAdmin.exe"
			targettype="exe"
			debug="true"
			definitions="TRACE"
			executable="${csc.executable}">
			<src dir="${dir.n.v6}/Db4oAdmin/Db4oAdmin">
				<include name="**/*.cs" />
			</src>
			<reference dir="${dir.dist.dll.net}">
				<include name="*.dll" />
			</reference>
		</csc>
	</target>

	<target name="build-tutorial" depends="build-tools">
		<ant antfile="build-dotnet-tutorial.xml">
		</ant>
	</target>
	
	<target name="sharpen-tools">
		<fileset id="tools.sources" dir="${dir.n.v6.tools}">
			<include name="**/*.cs" />
			<exclude name="Libs/**/AssemblyInfo.cs" />
			<exclude name="Libs/Mono.Cecil/CodeGen/**/*.*" />
			<exclude name="Libs/Cecil.FlowAnalysis/codegen/**/*.*" />
			<exclude name="Libs/Cecil.FlowAnalysis/Cecil.FlowAnalysis.Tests/**/*.*" />
		</fileset>
		
		<updatecsharpproject projectfile="${dir.n.v6.tools}/Db4objects.Db4o.Tools-CF-2005.csproj">
			<sources refid="tools.sources"/>
		</updatecsharpproject>
		
		<updatecsharpproject projectfile="${dir.n.v6.tools}/Db4objects.Db4o.Tools-2005.csproj">
			<sources refid="tools.sources"/>
		</updatecsharpproject>
	</target>
	
	<target name="sharpen"
		depends="sharpen-core, sharpen-tools, sharpen-db4ounit, sharpen-db4ounit-extensions, sharpen-tests"
		unless="csharp.uptodate">
	</target>
	
	<target name="prepare-conversion-workspace" depends="init">
		<reset-dir dir="${dir.sharpen}" />
		
		<copy todir="${dir.sharpen}">
			<fileset refid="db4oj.srcfiles" />
		</copy>

		<copy todir="${dir.sharpen}/db4oj">
			<fileset refid="db4onqopt.srcfiles" />
		</copy>

		<copy todir="${dir.sharpen}/db4oj/core">
			<fileset refid="db4oclassedit.srcfiles" />
		</copy>

		<copy todir="${dir.sharpen}/db4oj/core/src" overwrite="true">
			<fileset dir="${dir.n.v6}/sharpen/">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>
	
	<target name="copy-sharpened-files">
		
		<copy todir="${target.dir}">
			<fileset dir="${src.dir}/Db4objects/Db4o">
				<include name="**/*.cs" />
				<exclude name="JDK_*.cs" />
				<exclude name="JDKReflect*.cs" />
				<exclude name="Reflect/Jdk/**/*.*" />
				<exclude name="Reflect/Self/*.*" />
			</fileset>
		</copy>
	</target>	

	<target name="sharpen-core" depends="install-javatocsharp-plugin, prepare-conversion-workspace" unless="csharp.uptodate">

		<sharpen workspace="${dir.sharpen}" resource="db4oj/core/src">
			<args>
				<arg value="@sharpen-new-core-mapping" />
				<arg value="-xmldoc" />
				<arg file="config/sharpen/ApiOverlay.xml" />
			</args>
		</sharpen>
		
		<delete failonerror="false">
			<fileset dir="${dir.n.v6.core.src}">
				<include name="**/*.cs" />
				<exclude name="**/.svn/**" />
			</fileset>
		</delete>
		<antcall target="copy-sharpened-files">
			<param name="src.dir" value="${dir.sharpen}/db4oj.net/src" />
			<param name="target.dir" value="${dir.n.v6.core.src}" />
		</antcall>
		
		<fileset id="core.net.files" dir="${dir.n.v6.core}">
			<include name="**/*.cs" />
		</fileset>
			
		<updatecsharpproject projectFile="${dir.n.v6.core}/Db4objects.Db4o-2005.csproj">
			<sources refid="core.net.files" />
		</updatecsharpproject>		

		<updatecsharpproject projectFile="${dir.n.v6.core}/Db4objects.Db4o-CF-2005.csproj">
			<sources refid="core.net.files" />
		</updatecsharpproject>

	</target>
	
	<target name="sharpen-db4ounit">
		<ant antfile="build-new-db4ounit.xml" target="update-csharp-projects" inheritall="false">
		</ant>
	</target>
	
	<property name="dependencies.jar" location="${dir.sharpen}/lib/dependencies.jar" />
	
	<target name="create-dependencies-jar" depends="compiletestsjava">
		<mkdir dir="${dir.sharpen}/lib" />
		<jar destfile="${dependencies.jar}">			
			<fileset dir="${dir.dist.classes.java1.1}" />
			<fileset dir="${dir.dist.classes.db4ounit}" />
			<fileset dir="${dir.dist.classes.test.jdk1.1}" />
		</jar>
	</target>
	
	<target name="update-admin-projects">
		<property name="dir.n.admin" location="${dir.n.v6}/Db4oAdmin" />
		
		<updatecsharpproject projectfile="${dir.n.admin}/Db4oAdmin/Db4oAdmin-2005.csproj">
			<sources dir="${dir.n.admin}/Db4oAdmin">
				<include name="**/*.cs" />
			</sources>
		</updatecsharpproject>
		
		<updatecsharpproject projectfile="${dir.n.admin}/Db4oAdmin.Tests/Db4oAdmin.Tests-2005.csproj">
			<sources dir="${dir.n.admin}/Db4oAdmin.Tests">
				<include name="**/*.cs" />
				<exclude name="**/Resources/*.*" />
			</sources>
		</updatecsharpproject>
	</target>
			
	<target name="sharpen-db4ounit-extensions" depends="install-javatocsharp-plugin, create-dependencies-jar">		
		
		<property name="target.dir" value="${dir.sharpen}/db4ounit-extensions" />
		
		<reset-dir dir="${target.dir}" />
		
		<copy todir="${target.dir}/db4ounit.extensions/src">
			<fileset dir="${dir.db4ounit.extensions.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		
		<sharpen workspace="${target.dir}" resource="db4ounit.extensions/src">
			<args>
				<arg value="-cp" />
				<arg path="${dependencies.jar}" />
				<arg value="@sharpen-db4ounit-options" />
				<arg value="@sharpen-new-core-mapping" />
			</args>
		</sharpen>
		
		<property name="dir.n.v6.extensions" location="${dir.n.v6}/Db4oUnit.Extensions" />
		
		<delete failonerror="false">
			<fileset dir="${dir.n.v6.extensions}/Db4oUnit.Extensions">
				<include name="**/*.cs" />
				<exclude name="**/.svn/**" />
			</fileset>
		</delete>
		
		<copy todir="${dir.n.v6.extensions}/Db4oUnit.Extensions">
			<fileset dir="${target.dir}/db4ounit.extensions.net/src/Db4oUnit/Extensions">
				<include name="**/*.cs" />
			</fileset>
		</copy>
		
		<updatecsharpproject projectFile="${dir.n.v6.extensions}/Db4oUnit.Extensions-2005.csproj">
			<sources dir="${dir.n.v6.extensions}">
				<include name="**/*.cs" />
			</sources>
		</updatecsharpproject>

		<updatecsharpproject projectFile="${dir.n.v6.extensions}/Db4oUnit.Extensions-CF-2005.csproj">
			<sources dir="${dir.n.v6.extensions}">
				<include name="**/*.cs" />
			</sources>
		</updatecsharpproject>
	</target>		
	
	<target name="sharpen-tests" depends="sharpen-db4ounit-extensions">
		
		<property name="target.dir" location="${dir.sharpen}" />
		
		<copy todir="${target.dir}/db4oj.tests/src">
			<fileset dir="${dir.j.tests.src}">
				<include name="**/db4ounit/common/**/*.java" />
				<include name="**/db4ounit/util/**/*.java" />
			</fileset>
		</copy>
		<copy todir="${target.dir}/db4oj.tests/src">
			<fileset dir="${dir.j.jdk1.2.test.src}">
				<include name="**/db4ounit/common/defragment/*.java" />
				<include name="**/db4ounit/common/migration/*.java" />
				<include name="**/db4ounit/common/ta/**/*.java" />
				<include name="**/db4ounit/util/*.java" />
			</fileset>
		</copy>
		
		<copy todir="${target.dir}/db4oj.tests/core">
			<fileset dir="../db4oj/core/src">
				<include name="**/*.java" />
			</fileset>
		</copy>
		
		<sharpen workspace="${target.dir}" resource="db4oj.tests/src">
			<args>
				<arg value="-cp" />
				<!--
				<arg path="/home/rodrigob/workspaces/db4o/db4obuild/dist/sharpen/lib/dependencies.jar" />
				-->
				<arg path="${dependencies.jar}" />	
				<arg value="@sharpen-tests-options" />
				
				<arg value="-srcfolder" />
				<arg value="core" />
			</args>
		</sharpen>
		
		<property name="dir.n.v6.tests" location="${dir.n.v6}/Db4objects.Db4o.Tests" />
		<property name="dir.n.v6.tests.src" location="${dir.n.v6.tests}/Db4objects.Db4o.Tests" />
		
		<delete failonerror="false">
			<fileset dir="${dir.n.v6.tests.src}/Common">
				<include name="**/*.cs" />
				<exclude name="**/.svn/**" />
			</fileset>
		</delete>
		
		<copy todir="${dir.n.v6.tests.src}">
			<fileset dir="${target.dir}/db4oj.tests.net/src/Db4objects/Db4o/Tests">
				<include name="**/*.cs" />
			</fileset>
		</copy>
		
		<updatecsharpproject projectfile="${dir.n.v6.tests}/Db4objects.Db4o.Tests-CF-2005.csproj">
			<sources dir="${dir.n.v6.tests}">
				<include name="**/*.cs" />
			</sources>
		</updatecsharpproject>
		
		<updatecsharpproject projectfile="${dir.n.v6.tests}/Db4objects.Db4o.Tests-2005.csproj">
			<sources dir="${dir.n.v6.tests}">
				<include name="**/*.cs" />
			</sources>
		</updatecsharpproject>
	</target>
	
	<target name="preparendoc">
		<property name="db4o-namespace-summaries.xml" location="config/db4o-namespace-summaries.xml" />		
		<property name="ndoc.home" location="lib/ndoc" />
				
		<delete dir="${dir.dist.ndoc}" failonerror="false" />
		<mkdir dir="${dir.dist.ndoc}" />
	</target>
	
	<target name="ndoc" depends="preparendoc, ndoc-mono, ndoc-net" description="Build public .net docs">
	</target>
	
	<target name="ndoc-mono" if="mono">
		<exec executable="mono" failonerror="true">
			<arg file="${ndoc.home}/bin/mono/2.0/NDocConsole.exe" />
			<arg file="${dir.dist.dll.net}/Db4objects.Db4o.dll" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-documenter=MSDN" />
			<arg value="-OutputTarget=Web" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2006  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-CleanIntermediates=True" />
		</exec>
	</target>
	
	<property name="sandcastle.tools" location="${dir.lib.sandcastle}/ProductionTools" />
	<property name="XslTransform" location="${sandcastle.tools}/XslTransform" />	
	<available file="${sandcastle.tools}/MRefBuilder.exe" property="sandcastle.available" />
	
	<target name="sandcastle" depends="run-sandcastle, warn-about-sandcastle">
	</target>
	
	<target name="sandcastle-standalone" depends="configure-net2, sandcastle">
	</target>
	
	<target name="warn-about-sandcastle" unless="sandcastle.available">
		<echo>
	The build could not find sandcastle in your system, sandcastle is required if you want
	to generate the .net documentation.
	
	Download and install it from:
	http://www.microsoft.com/downloads/details.aspx?FamilyID=E82EA71D-DA89-42EE-A715-696E3A4873B2&amp;displaylang=en
	
	Then set the dir.lib.sandcastle property pointing to the root of the installation.
		</echo>
	</target>
	
	<target name="run-sandcastle" if="sandcastle.available">
	
		<antcall target="prepare-sandcastle-output" />
		
		<copy todir="${dir.lib.sandcastle}/Presentation">
			<fileset dir="config/sandcastle/Presentation">
				<include name="**/*.xml" />
			</fileset>
		</copy>
		
		<exec executable="${dir.build}/lib/boo/booi">
			<arg file="src/sandcastle/MRefConfigGenerator.boo" />
			<arg path="${dir.build}/config" />
			<arg path="${dir.dist}" />
		</exec>
		
		<exec executable="${sandcastle.tools}/MRefBuilder" dir="${dir.dist.ndoc}">
			<arg value="/config:${dir.dist.ndoc}/Output/MRefBuilder.config" />
			<arg file="${dir.dist.dll}/Db4objects.Db4o.dll" />
			<arg value="/out:${dir.dist.ndoc}/sandcastle" />
			<arg value="/internal-" />
		</exec>	
	
		<exec executable="${XslTransform}" failonerror="true" dir="${dir.dist.ndoc}">
			<arg value="/xsl:${dir.lib.sandcastle}/ProductionTransforms/ApplyVSDocModel.xsl" />
			<arg value="${dir.dist.ndoc}/sandcastle" />
			<arg value="/xsl:${dir.lib.sandcastle}/ProductionTransforms/AddFriendlyFilenames.xsl" />
			<arg value="/out:${dir.dist.ndoc}/reflection.xml" />
		</exec>
	
		<exec executable="${XslTransform}" failonerror="true" dir="${dir.dist.ndoc}">
			<arg value="/xsl:${dir.lib.sandcastle}/ProductionTransforms/ReflectionToManifest.xsl" />
			<arg value="${dir.dist.ndoc}/reflection.xml" />
			<arg value="/out:${dir.dist.ndoc}/manifest.xml" />
		</exec>
		
		<exec executable="${sandcastle.tools}/BuildAssembler" dir="${dir.dist.ndoc}">
			<arg value="/config:${dir.build}/config/sandcastle/sandcastle.config" />
			<arg file="${dir.dist.ndoc}/manifest.xml" />
	
			<env key="XMLDOC" value="${dir.dist.dll}/Db4objects.Db4o.xml" />
			<env key="DXROOT" value="${dir.lib.sandcastle}" />			
		</exec>
	
		<antcall target="generate-sandcastle-chm" />

	</target>
	
	<target name="prepare-sandcastle-output">
	
		<!-- adapted from ${dir.lib.sandcastle}/Presentation/vs2005/copyOutput.bat"  -->
		<mkdir dir="${dir.dist.ndoc}/Output" />
		<mkdir dir="${dir.dist.ndoc}/Output/html" />
		<mkdir dir="${dir.dist.ndoc}/Output/icons" />
		<mkdir dir="${dir.dist.ndoc}/Output/scripts" />
		<mkdir dir="${dir.dist.ndoc}/Output/styles" />
		<mkdir dir="${dir.dist.ndoc}/Output/media" />
		<copy todir="${dir.dist.ndoc}/Output">
			<fileset dir="${dir.lib.sandcastle}/Presentation/vs2005">
				<include name="Icons/**" />
				<include name="icons/**" />
				<include name="Scripts/**" />
				<include name="Styles/**" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.ndoc}/Output">
			<fileset dir="${dir.lib.sandcastle}/Presentation/Shared">
				<include name="**/**" />
			</fileset>
		</copy>
		<mkdir dir="${dir.dist.ndoc}/Intellisense" />

	</target>
	
	<target name="generate-sandcastle-chm">
	
		<property name="dir.transforms" location="${dir.lib.sandcastle}/ProductionTransforms" />
	
		<!-- Generate HTML help project -->
		<exec executable="${XslTransform}" dir="${dir.dist.ndoc}" failonerror="true">
			<arg value="/xsl:${dir.transforms}/ReflectionToChmProject.xsl" />
			<arg value="${dir.dist.ndoc}/reflection.xml" />
			<arg value="/out:${dir.dist.ndoc}/Output/test.hhp" />
		</exec>	 
	
		<!--  Generate table of contents for HTML help project -->
		<exec executable="${XslTransform}" dir="${dir.dist.ndoc}" failonerror="true">
			<arg value="/xsl:${dir.transforms}/createvstoc.xsl" />
			<arg value="${dir.dist.ndoc}/reflection.xml" />
			<arg value="/out:${dir.dist.ndoc}/toc.xml" />
		</exec>

		<exec executable="${XslTransform}" dir="${dir.dist.ndoc}" failonerror="true">
			<arg value="/xsl:${dir.transforms}/TocToChmContents.xsl" />
			<arg value="${dir.dist.ndoc}/toc.xml" />
			<arg value="/out:${dir.dist.ndoc}/Output/test.hhc" />
		</exec>
	
		<!-- Generate Index information -->
		<exec executable="${XslTransform}" dir="${dir.dist.ndoc}">
			<arg value="/xsl:${dir.transforms}/ReflectionToChmIndex.xsl" />
			<arg value="${dir.dist.ndoc}/reflection.xml" />
			<arg value="/out:${dir.dist.ndoc}/Output/test.hhk" />
		</exec>
	
		<property name="hhc.home" location="${env.ProgramFiles}/HTML Help Workshop" />
		<exec executable="${hhc.home}/hhc.exe" dir="${dir.dist.ndoc}/Output">
			<arg value="test.hhp" />
		</exec>
	
		<copy file="${dir.dist.ndoc}/Output/test.chm" tofile="${dir.dist.ndoc}/db4o.chm" />
	</target>	
		
	<target name="ndoc-net" unless="mono">
	
		<antcall target="sandcastle" />
	
		<!--
		<exec executable="${ndoc.home}/bin/net/2.0/NDocConsole.exe">
			<arg file="${dir.dist.dll.net}/Db4objects.Db4o.dll" />
			<arg value="-documenter=MSDN 2003" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-HtmlHelpName=db4o" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2006  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-IncludeFavorites=True" />			
		</exec>
		-->
	</target>
	
	<target name="vsdoc" depends="ndoc" description="Build VS.NET 2003 integrated docs">
		<exec executable="${ndoc.home}/bin/net/1.1/NDocConsole.exe">
			<arg value="${dir.dist.dll.net}/Db4objects.Db4o.dll" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-documenter=VS.NET 2003" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-BuildSeparateIndexFile=false" />
			<arg value="-CollectionNamespace=com.db4o" />
			<arg value="-CreateFullTextIndex=true" />
			<arg value="-GenerateCollectionFiles=true" />
			<arg value="-HtmlHelpName=db4o" />
			<arg value="-IncludeDefaultStopWordList=true" />
			<arg value="-LinkToSdkDocVersion=1.1" />
			<arg value="-PlugInNamespace=ms.vscc" />
			<arg value="-RegisterTitleWithNamespace=true" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2006  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-IncludeFavorites=True" />
			<!--
            <property name="Preliminary" value="True" />
            <property name="CleanIntermediates" value="True" />
            -->
		</exec>
	</target>
	
	<target name="init" depends="properties, get-svn-revision">
		<mkdir dir="${dir.dist.dll.net}" />
		<mkdir dir="${dir.dist.dll.compact}" />
		
		<property name="assembly.version" value="${db4o.version.full}.${svn.revision}" />
	</target>
	
	<target name="clean" description="Delete all generated files">
		<delete failonerror="false" includeemptydirs="true" description="Removing all generated files">
			<fileset dir="${dir.dist}">
				<exclude name="java/" />
			</fileset>
		</delete>
	</target>
	
	<target
		name="update-cecil"
		description="updates Mono.Cecil and Cecil.FlowAnalysis from mono's repository"
		depends="init">
	
		<property name="nant.exe" location="nant" />
		<property name="svn.exe" location="svn" />
	
		<property name="dir.dist.cecil" location="${dir.dist}/cecil" />
		<property name="mono.svn" value="svn://anonsvn.mono-project.com/source/trunk" />
	
		<delete dir="${dir.dist.cecil}" />
		<mkdir dir="${dir.dist.cecil}/mcs/class" />
		<mkdir dir="${dir.dist.cecil}/cecil" />
		
		<exec executable="${svn.exe}" dir="${dir.dist.cecil}/mcs/class">
			<arg value="export" />
			<arg value="${mono.svn}/mcs/class/mono.snk" />
		</exec>
	
		<exec executable="${svn.exe}" dir="${dir.dist.cecil}/mcs/class">
			<arg value="export" />
			<arg value="${mono.svn}/mcs/class/Mono.Cecil" />
		</exec>
		
		<exec executable="${svn.exe}" dir="${dir.dist.cecil}/cecil">
			<arg value="export" />
			<arg value="${mono.svn}/cecil/flowanalysis" />
		</exec>
		
		<property name="cecil.dir" location="${dir.dist.cecil}/mcs/class/Mono.Cecil" />
		<property name="cecil.fa.dir" location="${dir.dist.cecil}/cecil/flowanalysis" />
		<property name="nant.output.dir" location="${cecil.fa.dir}/bin" />
		
		<macrodef name="copy-cecil-libs">
			<attribute name="todir" />
			<sequential>
				<copy todir="@{todir}" overwrite="true">
					<fileset dir="${nant.output.dir}">
						<include name="Mono.Cecil.dll" />
						<include name="Cecil.FlowAnalysis.dll" />
					</fileset>
				</copy>
			</sequential>
		</macrodef>
		
		<exec executable="${nant.exe}" dir="${cecil.dir}" failonerror="true">
			<arg value="-D:compactframework.v2.dir=${dir.compactframework}/v2.0/WindowsCE" />
			<arg value="-t:netcf-2.0" />
			<arg value="-D:csc.defines=KEYFILE" />
			<arg value="clean" />
			<arg value="compactframework2" />
		</exec>
	
		<exec executable="${nant.exe}" dir="${cecil.fa.dir}" failonerror="true">
			<arg value="-D:compactframework.v2.dir=${dir.compactframework}/v2.0/WindowsCE" />
			<arg value="-D:csc.defines=KEYFILE" />
			<arg value="-t:netcf-2.0" />
			<arg value="clean" />
			<arg value="compactframework2" />
		</exec>
		
		<copy-cecil-libs todir="${dir.n.v6.libs}/compact-2.0" />
	
		<exec executable="${nant.exe}" dir="${cecil.dir}" failonerror="true">
			<arg value="-t:net-2.0" />
			<arg value="clean" />
			<arg value="cecil" />
		</exec>
	
		<exec executable="${nant.exe}" dir="${cecil.fa.dir}" failonerror="true">
			<arg value="-t:net-2.0" />
			<arg value="clean" />
			<arg value="build" />
		</exec>
		
		<copy-cecil-libs todir="${dir.n.v6.libs}/net-2.0" />
		
		<!-- Pdb libraries (COR-800) -->
		<exec executable="${svn.exe}" dir="${dir.dist.cecil}/cecil/pdb">
			<arg value="export" />
			<arg value="${mono.svn}/cecil/pdb" />
		</exec>
		
		<exec executable="${nant.exe}" dir="${dir.dist.cecil}/cecil/pdb" failonerror="true">
			<arg value="-t:net-2.0" />
		</exec>
		
		<copy todir="${dir.n.v6.libs}/net-2.0" overwrite="true">
			<fileset dir="${dir.dist.cecil}/cecil/pdb/bin">
				<include name="Mono.Cecil.Pdb.dll" />
			</fileset>
		</copy>

	</target>

    <target name="build-cf20" depends="init, configure, sharpen">
        <taskdef resource="org/apache/ant/dotnet/antlib.xml" />
        <property name="dir.n.v6.tests" location="${dir.n.v6}/Db4objects.Db4o.Tests" />
        
        <msbuild buildfile="${dir.n.v6.tests}/Db4objects.Db4o.Tests-CF-2005.sln">
            <target name="rebuild" />
            <property name="Configuration" value="Debug" />
            <property name="OutputPath" value="${dir.dist.dll}/cf2.0" />
        </msbuild>
        
        <delete dir="${emulator.sharefolder}" >
            <include name="*" />
        </delete>
        <copy todir="${emulator.sharefolder}">
            <fileset dir="${dir.dist.dll}/cf2.0" >
                <include name="*.dll" />
                <include name="*.exe" />
            </fileset>
        </copy>
        
        <echo message="Run test..." />
        <exec executable="${vdma_desktop.exe}" failonerror="true">
            <arg line="&quot;\Storage Card\Db4objects.Db4o.Tests.exe run&quot;" />
            <arg value="${emulator.sharefolder}/db4ounit.log" />
        </exec>
    	<loadfile property="cf.db4ounit.log" srcfile="${emulator.sharefolder}/db4ounit.log" />
    	<echo message="${cf.db4ounit.log}" />
    </target>
</project>
