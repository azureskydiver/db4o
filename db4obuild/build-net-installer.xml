<?xml version="1.0"?>
<project name="db4oninstaller" default="build">

	<property file="machine.properties" />
	<property file="ant.properties" />
	
	<import file="common-dotnet.xml" />

	<property name="dir.wix" location="lib/wix" />	
	<property name="candle.exe" location="${dir.wix}/candle.exe" />
	<property name="light.exe" location="${dir.wix}/light.exe" />
	
	<property name="output.dir" location="bin" />
	
	<target name="build" depends="configure-net35">
		<mkdir dir="${output.dir}" />
		
		<!--
		set correct db4o's version in the build scripts
		-->
		<copy todir="${output.dir}" overwrite="true">
			<fileset dir="src/installer">
				<include name="installer.wxs" />
				<include name="extra-parameters.xml" />
			</fileset>
			
			<filterset>
				<filter token="db4o.version.dotted" value="${db4o.version.dotted}" />
				<filter token="db4o.version.full" value="${db4o.version.full}" />
				<filter token="installer.package.guid" value="${installer.package.guid}" />
				<filter token="installer.upgrade.guid" value="${installer.upgrade.guid}" />
			</filterset>
		</copy>
		
		<exec executable="${candle.exe}" failonerror="true">		
			<env key="resources.dir" path="src/installer/resources" />
			<env key="appicon" path="${dir.dist.net.build.tutorial}/db4o-tutorial.exe" />
			
			<arg value="-nologo" />			
			<arg value="-out" />
			<arg file="${output.dir}/installer.wixobj" />
			<arg file="${output.dir}/installer.wxs" />
		</exec>		
		
		<msbuild outputPath="${output.dir}" solutionFile="src/WixBuilder/WixBuilder.sln" />
		
		<exec executable="${output.dir}/WixBuilder.exe" failonerror="true">
			<arg file="${dir.dist.net.build}" />
			<arg file="${output.dir}/extra-parameters.xml" />
			<arg file="${output.dir}/files.wxs" />
			<arg value="${db4o.version.dotted}" />
		</exec>		
		
		<exec-redirected executable="${candle.exe}">
			<args>
				<arg value="-nologo" />
				<arg value="-out" />
				<arg file="${output.dir}/files.wixobj" />
				<arg file="${output.dir}/files.wxs" />			
				<arg value="-sw1044" />
			</args>
		</exec-redirected>
	
		<exec-redirected executable="${light.exe}">
			<args>
				<arg file="${output.dir}/installer.wixobj" />
				<arg file="${output.dir}/files.wixobj" />
				<arg value="-out" />
				<arg value="${installer.msi}" />
			</args>
		</exec-redirected>
		
		<echo>msi package successfuly generated: ${installer.msi}</echo>
	</target>
	
	<taskdef name="prepareUniqueNames" classname="com.db4o.devtools.ant.PrepareUniqueNamesTask">
		<classpath>
			<pathelement location="${dir.build.bin}" />
			<path path="${path.classpath.full}" />
		</classpath>
	</taskdef>
			
	<taskdef name="commitUniqueNames" classname="com.db4o.devtools.ant.CommitUniqueNamesTask">
		<classpath>
			<pathelement location="${dir.build.bin}" />
			<path path="${path.classpath.full}" />
		</classpath>
	</taskdef>
		
	<macrodef name="exec-redirected">
		<attribute name="executable"/>
		<element name="args" optional="yes" />
		
		<sequential>
			<prepareUniqueNames prefixes="result,out,err" suffix="unique.name"/>
			
			<exec executable="@{executable}" resultproperty="${result.unique.name}" failonerror="false" outputproperty="${out.unique.name}" errorproperty="${err.unique.name}">
				<args />
			</exec>
			
			<commitUniqueNames prefixes="result,out,err" suffix="unique.name"/>
		
			<echo message="${out}" />
			<echo message="${err}" />
			
			<if>
				<not><equals arg1="${result}" arg2="0"/></not>
				<then>
					<fail message="Build failed. Check this log to find out the reason." />
				</then>
			</if>
		</sequential>
	</macrodef>	
</project>
