<?xml version="1.0"?>
<project name="db4obuild" default="buildall" basedir=".">

<!--
	Depends on a custom local file 'machine.properties' with
	the following entries:

	dir.workspace=<the workspace folder where all projects reside>
	file.compiler.jdk1.3=<path to jdk 1.3 java compiler>
	file.jvm.jdk1.5=<path to jdk 1.5 java vm executable>
	file.rt.jar=<JDK1.3 compatible runtime jar>
	font.pdf.base=<true type font>
	dir.dll.wince=<path to .NET CE dll, leave empty if not available>
	eclipse.home=<eclipse home dir>
	csc.executable.path.net2=<path to csc.exe for .NET 2.0>


	An example:
	dir.workspace=C:/_db4o/production
	file.compiler.jdk1.3=C:/jdk1.3.1_12/bin/javac.exe
	file.jvm.jdk1.5=/usr/java/jdk1.5.0_03.32bit/bin/java
	file.rt.jar=C:/j2sdk1.4.2_02/jre/lib/rt.jar
	font.pdf.base=C:/WINDOWS/Fonts/VERDANA.TTF
	dir.dll.wince=C:/Program Files/Microsoft Visual Studio .NET 2003/CompactFrameworkSDK/v1.0.5000/Windows CE/
	eclipse.home=c:/Program Files/Eclipse	
	csc.executable.path.net2=C:/WINDOWS/Microsoft.NET/Framework/v2.0.50727/
	
-->
	<property environment="env" />
	<property file="machine.properties" />
	<property file="ant.properties" />
	
	<taskdef name="doctor" classname="com.yetac.doctor.Doctor">
		<classpath>
			<pathelement location="${dir.j.jdk1.2}/bin" />
			<pathelement location="${dir.j}/bin" />
			<pathelement location="${dir.doctor.bin}" />
			<pathelement location="${dir.doctor.lib}/iText.jar" />
			<pathelement location="${dir.dist.classes.tutorial}" />
			<path path="${path.classpath.full}" />
		</classpath>
	</taskdef>

	<taskdef name="filehead" classname="com.db4o.devtools.ant.FileHeadAntTask">
		<classpath>
			<pathelement location="${dir.build.bin}" />
			<path path="${path.classpath.full}" />
		</classpath>
	</taskdef>
	
	<taskdef name="updatecsharpproject" classname="com.db4o.devtools.ant.UpdateCSharpProjectAntTask">
		<classpath>
			<pathelement location="${dir.build.bin}" />
			<path path="${path.classpath.full}" />
		</classpath>
	</taskdef>

	<taskdef name="versioninfo" classname="com.db4o.devtools.ant.VersionInfoAntTask" classpath="${dir.build.lib}/exttools.jar">
		<classpath>
			<pathelement location="${dir.build.lib}/exttools.jar" />
			<pathelement location="${dir.build.bin}" />
			<path path="${path.classpath.full}" />
		</classpath>
	</taskdef>

	<target name="init" description="Basic initialization">
		<tstamp />
		<mkdir dir="${dir.dist}" />
		<mkdir dir="${dir.dist.jars}" />
		<mkdir dir="${dir.sharpen}" />
		<mkdir dir="${dir.dist.net.build.src}" />
		<mkdir dir="${dir.dist.mono.build.src}" />
		<mkdir dir="${dir.dist.doctor}" />
		<mkdir dir="${dir.dist.doc.api}" />
		<mkdir dir="${dir.dist.java.build.tutorial}" />
		<mkdir dir="${dir.dist.java.build.tutorial.src}" />
		<mkdir dir="${dir.dist.dll.net}" />
		<mkdir dir="${dir.dist.dll.compact}" />
		<mkdir dir="${dir.dist.dll.mono}" />
		<loadfile property="content.gplheader" srcfile="${file.gplheader}" encoding="iso-8859-1" />
		<loadfile property="content.copyrightheader" srcfile="${file.copyrightheader}" encoding="iso-8859-1" />
		<versioninfo path="${dir.j.core.src}/com/db4o" java="true" version="${db4o.version.full}" major="${db4o.version.major}" />
		<versioninfo path="${dir.n.core.src}/net" net="true" keyfile="" version="${db4o.version.full}" major="${db4o.version.major}" />
		<versioninfo path="${dir.n.core.src}/compact" compact="true" keyfile="" version="${db4o.version.full}" major="${db4o.version.major}" />
	</target>

	<target name="clean" description="Delete all generated files">
		<delete failonerror="false" includeemptydirs="true" description="Removing all generated files">
			<fileset dir="${dir.sharpen}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${dir.dist}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${dir.j.tutorial.out.java}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${dir.j.tutorial.out.net}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${dir.j.tutorial.out.mono}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${dir.n.core.src}">
				<include name="**/*.cs" />
			</fileset>
		</delete>
		<ant dir="${dir.n.tutorial}" target="clean"/>
	</target>
	
	<target name="filehead" depends="init" description="Add copyright header to all input sources">
		<filehead beforePattern="package" header="${content.copyrightheader}" >
			<sources dir="${dir.j}">
				<include name="**/*.java" />
			</sources>
		</filehead>
		<filehead beforePattern="package" header="${content.copyrightheader}" >
			<sources dir="${dir.doctor.src}">
				<include name="**/*.java" />
			</sources>
		</filehead>
		<filehead beforePattern="package" header="${content.copyrightheader}" >
			<sources dir="${dir.n.in.java}">
				<include name="**/*.java" />
			</sources>
		</filehead>
		<filehead beforePattern="using|namespace"  header="${content.copyrightheader}" >
			<sources dir="${dir.n.in.sharp}">
				<include name="**/*.cs" />
			</sources>
		</filehead>
		<filehead beforePattern="using|namespace"  header="${content.copyrightheader}" >
			<sources dir="${dir.n.core}">
				<include name="**/*.cs" />
			</sources>
		</filehead>
		<filehead beforePattern="using|namespace"  header="${content.copyrightheader}" >
			<sources dir="${dir.n.test}">
				<include name="**/*.cs" />
			</sources>
		</filehead>
		<filehead beforePattern="using|namespace"  header="${content.copyrightheader}" >
			<sources dir="${dir.n.tools}">
				<include name="**/*.cs" />
			</sources>
		</filehead>
	</target>

	<target name="copyjava1.1">
		<mkdir dir="${dir.dist.java.temp.src.core}" />
		<delete>
			<fileset dir="${dir.dist.java.temp.src.core}">
				<include name="**/*"/>
			</fileset>
		</delete>
		<copy todir="${dir.dist.java.temp.src.core}" overwrite="true">
			<fileset dir="${dir.j.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>		
	</target>

	<target name="copyjava1.2" depends="copyjava1.1">
		<copy todir="${dir.dist.java.temp.src.core}" overwrite="true">
			<fileset dir="${dir.j.jdk1.2.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="copyjava5" depends="copyjava1.2">
		<copy todir="${dir.dist.java.temp.src.core}" overwrite="true">
			<fileset dir="${dir.j.jdk5.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="compilecorejava" depends="init" description="Compile Db4o core sources">
		<mkdir dir="${dir.dist.classes.java1.1}" />
		<delete>
			<fileset dir="${dir.dist.classes.java1.1}">
				<include name="**/*"/>
			</fileset>
		</delete>
		<antcall target="copyjava1.1" />
		<javac compiler="classic" fork="yes" executable="${file.compiler.jdk1.3}" srcdir="${dir.dist.java.temp.src.core}" destdir="${dir.dist.classes.java1.1}" debug="off">
			<compilerarg line="-target 1.1"/>
		</javac>

		<mkdir dir="${dir.dist.classes.java1.2}" />
		<delete>
			<fileset dir="${dir.dist.classes.java1.2}">
				<include name="**/*"/>
			</fileset>
		</delete>
		<antcall target="copyjava1.2" />
		<javac srcdir="${dir.dist.java.temp.src.core}" destdir="${dir.dist.classes.java1.2}" debug="off" target="1.2" source="1.2" />

		<mkdir dir="${dir.dist.classes.java5}" />
		<delete>
			<fileset dir="${dir.dist.classes.java5}">
				<include name="**/*"/>
			</fileset>
		</delete>
		<antcall target="copyjava5" />
		<javac srcdir="${dir.dist.java.temp.src.core}" destdir="${dir.dist.classes.java5}" debug="off" target="1.5" source="1.5" />

		<jar destfile="${file.java1.1.jar}">
			<fileset dir="${dir.dist.classes.java1.1}" />
		</jar>
		<jar destfile="${file.java1.2.jar}">
			<fileset dir="${dir.dist.classes.java1.2}" />
		</jar>
		<jar destfile="${file.java5.jar}">
			<fileset dir="${dir.dist.classes.java5}" />
		</jar>
		
		<mkdir dir="${dir.dist.classes.nqopt}" />
		<delete>
			<fileset dir="${dir.dist.classes.nqopt}">
				<include name="**/*"/>
			</fileset>
		</delete>
		<javac srcdir="${dir.j.nqopt.src}" destdir="${dir.dist.classes.nqopt}" debug="off" target="1.2" source="1.2">
			<classpath>
				<pathelement path="${file.java1.2.jar}"/>
				<pathelement path="${file.bloat.jar}"/>
				<pathelement path="${file.ant.jar}"/>
			</classpath>
		</javac>
		<jar destfile="${file.nqopt.jar}">
			<fileset dir="${dir.dist.classes.nqopt}" />
			<manifest>
				<attribute name="Class-Path" value="${filename.bloat.jar} ${filename.ant.jar} ${filename.java1.2.jar}"/>
			</manifest>
		</jar>
		<copy file="${file.bloat.jar}" todir="${dir.dist.jars}" />
		<copy file="${file.ant.jar}" todir="${dir.dist.jars}" />
		<copy file="${file.bloat.license}" todir="${dir.dist.jars}" />
		<copy file="${file.ant.license}" todir="${dir.dist.jars}" />
		<copy file="${file.3rdpartylibs.java}" todir="${dir.dist.jars}" />
	</target>

	<target name="compileobjectmanager" depends="compilecorejava" description="Compile object manager sources">
		<mkdir dir="${dir.dist.classes.objectmanager}" />
		<delete>
			<fileset dir="${dir.dist.classes.objectmanager}">
				<include name="**/*" />
			</fileset>
		</delete>
		<copy file="${file.java1.2.jar}" todir="${dir.objectmanager.lib}" />
		<depend srcdir="${dir.objectmanager.src}" destdir="${dir.dist.classes.objectmanager}" closure="yes" />
		<javac srcdir="${dir.objectmanager.src}" destdir="${dir.dist.classes.objectmanager}" debug="off" target="1.3" source="1.3">
				<include name="**/*.java" />
				<exclude name="**/*test/*" />
				<exclude name="**/*Test.java" />
				<exclude name="**/eclipse/**" />
				<exclude name="**/editors/**" />
				<exclude name="**/BrowserPlugin.java" />
				<exclude name="**/TestStarter.java" />
				<exclude name="**/rcp/*" />
			<classpath>
				<fileset dir="${dir.objectmanager.lib}">
					<include name="linux/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</javac>
		<delete file="${file.objectmanager.jar}" failonerror="false" quiet="true" />
		<jar destfile="${file.objectmanager.jar}">
			<fileset dir="${dir.dist.classes.objectmanager}" />
			<fileset dir="${dir.objectmanager.src}">
				<include name="**/*.xswt" />
				<include name="**/*.gif" />
				<include name="**/*.jpg" />
				<include name="**/*.jpeg" />
		    </fileset>
		</jar>
	</target>

	<target name="cleanomscripttempdir">
		<mkdir dir="${dir.objectmanager.scripts.temp}" />
		<delete>
			<fileset dir="${dir.objectmanager.scripts.temp}">
				<include name="*" />
			</fileset>
		</delete>
	</target>
	
	<target name="zipobjectmanager" depends="compileobjectmanager">		
		<delete file="${file.objectmanager.linux.archive}" quiet="true" failonerror="false" />
		<zip destfile="${file.objectmanager.linux.archive}" basedir="${dir.objectmanager.launcher}">
			<include name="lib/*" />
			<include name="lib/licenses/*" />
			<include name="lib/linux/*" />
		</zip>
		<antcall target="cleanomscripttempdir" />
		<copy file="${dir.objectmanager.scripts}/linux/objectmanager.sh" todir="${dir.objectmanager.scripts.temp}">
			<filterset>
				<filter token="db4oversion" value="${db4o.version.dotted}"/>
				<filter token="omversion" value="${objectmanager.version.dotted}"/>
			</filterset>
		</copy>
		<zip destfile="${file.objectmanager.linux.archive}" basedir="${dir.objectmanager.scripts.temp}" update="true">
			<include name="objectmanager.sh" />
		</zip>

		<delete file="${file.objectmanager.windows.archive}" quiet="true" failonerror="false" />
		<zip destfile="${file.objectmanager.windows.archive}" basedir="${dir.objectmanager.launcher}">
			<include name="lib/*" />
			<include name="lib/licenses/*" />
			<include name="lib/windows/*" />
		</zip>
		<antcall target="cleanomscripttempdir" />
		<copy file="${dir.objectmanager.scripts}/win_novm/objectmanager.bat" todir="${dir.objectmanager.scripts.temp}">
			<filterset>
				<filter token="db4oversion" value="${db4o.version.dotted}"/>
				<filter token="omversion" value="${objectmanager.version.dotted}"/>
			</filterset>
		</copy>
		<zip destfile="${file.objectmanager.windows.archive}" basedir="${dir.objectmanager.scripts.temp}" update="true">
			<include name="objectmanager.bat" />
		</zip>

		<delete file="${file.objectmanager.win_ikvm.archive}" quiet="true" failonerror="false" />
		<zip destfile="${file.objectmanager.win_ikvm.archive}" basedir="${dir.objectmanager.launcher}">
			<include name="lib/*" />
			<include name="ikvm/**" />
			<include name="lib/licenses/*" />
			<include name="lib/windows/*" />
		</zip>
		<antcall target="cleanomscripttempdir" />
		<copy file="${dir.objectmanager.scripts}/win_ikvm/objectmanager.bat" todir="${dir.objectmanager.scripts.temp}">
			<filterset>
				<filter token="db4oversion" value="${db4o.version.dotted}"/>
				<filter token="omversion" value="${objectmanager.version.dotted}"/>
			</filterset>
		</copy>
		<zip destfile="${file.objectmanager.win_ikvm.archive}" basedir="${dir.objectmanager.scripts.temp}" update="true">
			<include name="*.bat" />
		</zip>
	</target>
	
	<target name="compilebuild" depends="init" description="Compile Db4o build sources">
		<mkdir dir="${dir.build.bin}" />
		<depend srcdir="${dir.build.src}" destdir="${dir.build.bin}" closure="yes" />
		<javac srcdir="${dir.build.src}" destdir="${dir.build.bin}" debug="off" target="1.3" source="1.3">
			<classpath path="${path.classpath.full}" />
		</javac>
		<copy todir="${dir.build.bin}">
			<fileset dir="${dir.build.src}" includes="**/*.properties"/>
		</copy>
	</target>
	
	<target name="compilecoredll-net">
		<versioninfo path="${src.dir}/net" net="true" keyfile="${filename.keyfile}" version="${db4o.version.full}" major="${db4o.version.major}" />
		<csc
			srcdir="${src.dir}"
			targettype="library"
			destfile="${file.dll.net}"
			docfile="${file.xml.net}"
			debug="${compiledll.debug}"
			warnlevel="0"
			optimize="true"
			failonerror="true"
			definitions="${csharp.defines}"
			executable="${csc.executable}">
			
			<include name="*.cs" />
			<exclude name="compact/**" />
		</csc>
	</target>
	
	<target name="compilecoredll-compact">
		<versioninfo path="${src.dir}/net" net="true" keyfile="" version="${db4o.version.full}" major="${db4o.version.major}" />
		<delete dir="${dir.dist.net.compile}" />
		<copy todir="${dir.dist.net.compile}">
			<fileset dir="${src.dir}">
				<include name="**/*.cs" />
				<exclude name="net/**" />
				<!-- <exclude name="external/**" /> -->
			</fileset>
		</copy>			
		<versioninfo path="${dir.dist.net.compile}/compact" compact="true" keyfile="${filename.keyfile}" version="${db4o.version.full}" major="${db4o.version.major}" />
		<copy file="${file.keypair}" todir="${dir.dist.net.compile}" />		
		<mkdir dir="${dir.dist.dll.compact}" />
		<exec executable="${csc.executable}" dir="${dir.dist.net.compile}" failonerror="true">
			<arg value="/optimize" />
			<arg value="/define:CF_1_0" />
			<arg value="/out:${file.dll.compact}" />
			<arg value="/doc:${file.xml.compact}" />
			<arg value="/target:library" />
			<arg value="/warn:1" />
			<arg value="/noconfig" />
			<arg value="/nostdlib" />
			<arg value="/r:${dir.dll.wince}mscorlib.dll" />
			<arg value="/r:${dir.dll.wince}System.dll" />
			<arg value="/recurse:*.cs" />
		</exec>
	</target>
	
	<target name="compiledllnet" depends="init, sharpen">
		
		<antcall target="compilecoredll-net">
			<param name="src.dir" value="${dir.n.core.src}" />
		</antcall>
		<antcall target="compilecoredll-compact">
			<param name="src.dir" value="${dir.n.core.src}" />
		</antcall>
	</target>
	
	<target name="runtestsnet" depends="configure-net1.1, compiletestsnet">
		<exec executable="${dir.dist.dll.net}/db4o-net-test.exe" dir="${dir.dist.dll.net}">
		</exec>
	</target>
	
	<target name="compiletestsnet" depends="compiledllnet">
		<csc srcdir="${dir.n.tools}/src"
			targettype="library"
			destfile="${dir.dist.dll.net}/db4o-net-tools.dll"
			debug="true"
			definitions="NET">
			
			<reference dir="${dir.dist.dll.net}">
				<include name="db4o.dll" />
			</reference>
		</csc>
		
		<csc srcdir="${dir.n.test}/src"
			targettype="exe"
			destfile="${dir.dist.dll.net}/db4o-net-test.exe"
			debug="true"
			mainclass="com.db4o.test.AllTests"
			definitions="NET">
			
			<exclude name="compact/**" />
			
			<reference dir="${dir.dist.dll.net}">
				<include name="db4o.dll" />
				<include name="db4o-net-tools.dll" />
				<include name="System.Drawing.dll" />
			</reference>
		</csc>
	</target>
	
	<target name="compiletestsmono" depends="compiledllmono">
		<csc srcdir="${dir.n.tools}/src"
			targettype="library"
			destfile="${dir.dist.dll.mono}/db4o-net-tools.dll"
			debug="true"
			definitions="MONO">
			
			<reference dir="${dir.dist.dll.mono}">
				<include name="db4o.dll" />
			</reference>
		</csc>
		
		<csc srcdir="${dir.n.test}/src"
			targettype="exe"
			destfile="${dir.dist.dll.mono}/db4o-net-test.exe"
			debug="true"
			mainclass="com.db4o.test.AllTests"
			extraoptions="-r:System.Drawing"
			definitions="MONO">
			
			<exclude name="compact/**" />
			
			<reference dir="${dir.dist.dll.mono}">
				<include name="db4o.dll" />
				<include name="db4o-net-tools.dll" />
			</reference>
		</csc>
	</target>
	
	<target name="runtestsmono" depends="compiletestsmono">
		<exec executable="mono" dir="${dir.dist.dll.mono}">
			<arg value="--debug" />
			<arg file="${dir.dist.dll.mono}/db4o-net-test.exe" />
		</exec>
	</target>
	
	<target name="compiledllmono" depends="init, sharpen">
		<versioninfo path="${dir.n.core.src}/net" net="true" keyfile="${filename.keyfile}" version="${db4o.version.full}" major="${db4o.version.major}" />
		<csc srcdir="${dir.n.core.src}"
			targettype="library"
			destfile="${file.dll.mono}"
			docfile="${file.xml.mono}"
			debug="${compiledll.debug}"
			warnlevel="0"
			optimize="true"
			definitions="MONO">
			<include name="*.cs" />
			<exclude name="compact/**" />
		</csc>
		<versioninfo path="${dir.n.core.src}/net" net="true" keyfile="" version="${db4o.version.full}" major="${db4o.version.major}" />
	</target>

	<target name="compiletestsjava" depends="compilecorejava" description="Compile Db4o test sources">
		<mkdir dir="${dir.dist.classes.test}" />
		<delete dir="${dir.dist.classes.test}">
			<include name="**/*" />
		</delete>
		<copy todir="${dir.dist.java.temp.src.test}" overwrite="true">
			<fileset dir="${dir.j.test.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.temp.src.test}" overwrite="true">
			<fileset dir="${dir.j.jdk1.2.test.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.temp.src.test}" overwrite="true">
			<fileset dir="${dir.j.jdk5.test.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<javac destdir="${dir.dist.classes.test}" debug="on" target="1.5" source="1.5">
			<classpath>
				<dirset dir="${dir.dist.classes.java5}" />
			</classpath>
			<src path="${dir.dist.java.temp.src.test}"/>
			<src path="${dir.j.tools.src}" />
		</javac>
	</target>

	<target name="compilejtutorial" depends="compilecorejava" description="Compile Db4o Java tutorial sources">
		<mkdir dir="${dir.dist.classes.tutorial}" />
		<antcall target="copyjava1.2" />
		<javac srcdir="${dir.dist.java.temp.src.core}" destdir="${dir.dist.classes.tutorial}" target="1.3" source="1.3" />
		<javac srcdir="${dir.j.tutorial.src}" destdir="${dir.dist.classes.tutorial}" classpath="${dir.dist.classes.tutorial}" target="1.3" source="1.3" debug="on" />
	</target>
	
	<target name="compilentutorial" depends="compiledllnet">
		<ant dir="${dir.n.tutorial}">
			<property name="csc.executable" value="${csc.executable}" />
		</ant>
	</target>
	
	<target name="preparendoc">
		<property name="db4o-namespace-summaries.xml" location="config/db4o-namespace-summaries.xml" />
		<property name="dir.dist.ndoc" location="${dir.dist}/ndoc" />
		<property name="ndoc.home" location="lib/ndoc" />
				
		<delete dir="${dir.dist.ndoc}" />
		<mkdir dir="${dir.dist.ndoc}" />
	</target>
	
	<target name="ndocmono" depends="compiledllmono, preparendoc" description="Builds public .net docs for the mono platform">
		<exec executable="mono" failonerror="true">
			<arg file="${ndoc.home}/bin/mono/1.0/NDocConsole.exe" />
			<arg value="${file.dll.mono}" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-documenter=MSDN" />
			<arg value="-OutputTarget=Web" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2005  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-CleanIntermediates=True" />
		</exec>
	</target>
	
	<target name="ndoc" depends="preparendoc" description="Build public .net docs">		
		<exec executable="${ndoc.home}/bin/net/${target.framework.version}/NDocConsole.exe">
			<arg value="${file.dll.net}" />
			<arg value="-documenter=MSDN 2003" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-HtmlHelpName=db4o" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2005  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-IncludeFavorites=True" />			
		</exec>
	</target>
		
	<target name="vsdoc" depends="ndoc" description="Build VS.NET 2003 integrated docs">
		<exec executable="${ndoc.home}/bin/net/${target.framework.version}/NDocConsole.exe">
			<arg value="${file.dll.net}" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-documenter=VS.NET 2003" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-BuildSeparateIndexFile=false" />
			<arg value="-CollectionNamespace=com.db4o" />
			<arg value="-CreateFullTextIndex=true" />
			<arg value="-GenerateCollectionFiles=true" />
			<arg value="-HtmlHelpName=db4o" />
			<arg value="-IncludeDefaultStopWordList=true" />
			<arg value="-LinkToSdkDocVersion=1.1" />
			<arg value="-PlugInNamespace=ms.vscc" />
			<arg value="-RegisterTitleWithNamespace=true" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2005  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-IncludeFavorites=True" />
			<!--
            <property name="Preliminary" value="True" />
            <property name="CleanIntermediates" value="True" />
            -->
		</exec>
	</target>
	
	<target name="install-vsdoc" depends="vsdoc" description="Register the VS.NET 2003 integrated docs">
		<property name="h2reg.exe" location="lib/h2reg/h2reg.exe" />
		<property name="h2reg.cmdfile" location="${dir.dist.ndoc}/db4oCollection.h2reg.ini" />
		<exec executable="${h2reg.exe}">
			<arg value="-r" />
			<arg value="CmdFile=${h2reg.cmdfile}" />
		</exec>
	</target>
	
	<target name="uninstall-vsdoc" depends="vsdoc" description="Unregister the VS.NET 2003 integrated docs">
		<property name="h2reg.exe" location="lib/h2reg/h2reg.exe" />
		<property name="h2reg.cmdfile" location="${dir.dist.ndoc}/db4oCollection.h2reg.ini" />
		<exec executable="${h2reg.exe}">
			<arg value="-u" />
			<arg value="CmdFile=${h2reg.cmdfile}" />
		</exec>
	</target>

	<target name="javadoc" depends="init" description="Build public javadocs">
		<antcall target="copyjava5" />
		<javadoc classpath="" access="public" windowtitle="db4o - database for objects - documentation" header="db4o ${db4o.version.dotted}" destdir="${dir.dist.doc.api}">
			<fileset dir="${dir.dist.java.temp.src.core}" includes="com/db4o/**/*.java">
				<exclude name="com/db4o/inside/**/*.java" />
				<exclude name="com/db4o/foundation/**/*.java" />
				<not>
					<contains text="* @exclude" />
				</not>
			</fileset>
			<fileset dir="${dir.j.tools.src}" includes="com/db4o/**/*.java">
				<not>
					<contains text="* @exclude" />
				</not>
			</fileset>
			<group title="Core Engine" packages="com.db4o" />
			<group title="Query Functionality" packages="com.db4o.query" />
			<group title="Configuration Features" packages="com.db4o.config" />
			<group title="Extended Functionality" packages="com.db4o.ext" />
			<group title="Messaging" packages="com.db4o.messaging" />
			<group title="Reflection" packages="com.db4o.reflect" />
			<group title="Tools" packages="com.db4o.tools" />
			<group title="Types" packages="com.db4o.types" />
		</javadoc>
		<copy file="${javadoc.stylesheet}" todir="${dir.dist.doc.api}" overwrite="true" />
	</target>

	<target name="runtestsjava" depends="compiletestsjava" description="Run db4o AllTests">
		<java classname="com.db4o.test.AllTests" failonerror="true">
			<classpath>
				<dirset dir="${dir.dist.classes.java1.2}" />
				<dirset dir="${dir.dist.classes.test}" />
				<path path="${path.classpath.full}" />
			</classpath>
		</java>
	</target>

	<target name="zipjavasrc" depends="javadoc,compilecorejava,compiletestsjava">
		<copy todir="${dir.dist.java.src}/${name.project.j}">
			<fileset dir="${dir.j}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="build.xml" />
				<include name="**/src/**" />
				<!-- exclude name="tools/**" / -->
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.jdk1.2}">
			<fileset dir="${dir.j.jdk1.2}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="build.xml" />
				<include name="**/src/**" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.jdk5}">
			<fileset dir="${dir.j.jdk5}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="build.xml" />
				<include name="**/src/**" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.nqopt}">
			<fileset dir="${dir.j.nqopt}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="build.xml" />
				<include name="**/src/**" />
			</fileset>
		</copy>
		<filehead beforePattern="package" header="${content.gplheader}" >
			<sources dir="${dir.dist.java.src}">
				<include name="**/*.java" />
			</sources>
		</filehead>

		<zip destfile="${file.java.core.src.zip}">
			<fileset dir="${dir.dist.java.src}" includes="*/**" excludes="*.zip" />
		</zip>
		<delete includeemptydirs="true">
			<fileset dir="${dir.dist.java.src}">
				<include name="**/*" />
			</fileset>
		</delete>
	</target>

	<target name="zipjavatest" depends="javadoc,compilecorejava,compiletestsjava">
		<copy todir="${dir.dist.java.src}">
			<fileset dir="${dir.j.test.src}" />
		</copy>
		<filehead beforePattern="package" header="${content.gplheader}" >
			<sources dir="${dir.dist.java.src}">
				<include name="**/*.java" />
			</sources>
		</filehead>
		<zip destfile="${file.java.test.src.zip}">
			<fileset dir="${dir.dist.java.src}" includes="*/**" excludes="*.zip" />
		</zip>
		<delete includeemptydirs="true">
			<fileset dir="${dir.dist.java.src}">
				<include name="**/*" />
			</fileset>
		</delete>
	</target>

	<target name="zipjava" depends="zipjavasrc, init" description="Zip Java distribution">
		<copy todir="${dir.dist.java.src}">
			<fileset file="${file.java.core.src.zip}" />
			<fileset dir="${dir.j}">
				<include name="tools/**/*.java" />
			</fileset>
		</copy>
		<filehead beforePattern="package" header="${content.gplheader}" >
			<sources dir="${dir.dist.java.src}">
				<include name="**/*.java" />
			</sources>
		</filehead>
		<copy todir="${dir.dist.java.build.tutorial}">
			<fileset dir="${dir.j.tutorial.out.java}">
				<include name="**/**" />
			</fileset>
			<fileset dir="${dir.j.tutorial}">
				<include name="src/**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.build}">
			<fileset dir="${dir.dist}" includes="doc/**" />
			<fileset dir="${dir.dist.java}" includes="lib/**" />
			<fileset dir="${dir.dist.java}" includes="src/**" />
			<fileset dir="${dir.j}" includes="${filename.db4o.license}" />
			<fileset dir="${dir.config}" includes="README.txt" />
		</copy>
		<zip destfile="${file.dist.java}">
			<fileset dir="${dir.dist.java}" includes="${folder.build}/**" />
		</zip>
	</target>

	<target name="zipnet" depends="init, configure-net1.1, compiledllnet, compilentutorial, vsdoc" description="Zip .NET distribution">
		<antcall target="create-zipnet">
			<param name="dir.core" value="${dir.n.core}" />
			<param name="dir.tools" value="${dir.n.tools}" />
			<param name="dir.test" value="${dir.n.test}" />
			<param name="dir.tutorial" value="${dir.n.tutorial}" />
		</antcall>
	</target>
	
	<target name="zipnet-pascalcase" depends="init, configure-net1.1-pascalcase, pascalcase, vsdoc, do-zipnet-pascalcase">
	</target>
	
	<target name="zipnet-pascalcase2" depends="init, configure-net2-pascalcase, pascalcase, ndoc, do-zipnet-pascalcase">
	</target>
	
	<target name="configure-net1.1">

		<property name="target.framework.version" value="1.1" />
			
		<property name="csc.executable.path.net1" location="${env.SystemRoot}/Microsoft.NET/Framework/v1.1.4322" />
		<property name="csc.executable" location="${csc.executable.path.net1}/csc.exe" />
		
		<available property="csc.executable.available" file="${csc.executable}"></available>
		<fail unless="csc.executable.available">
		.net 1.1 c# compiler not found at '${csc.executable.path.net1}', please configure your machine.properties by setting the property 'csc.executable.path.net1' accordingly.
		</fail>
		
		<property name="csharp.defines" value="NET" />
		<property name="installer.package.guid" value="${installer.package.guid.net1}" />
		<property name="installer.upgrade.guid" value="${installer.upgrade.guid.net1}" />
		<property name="installer.package.suffix" value="net" />
	</target>
	
	<target name="configure-net1.1-pascalcase" depends="configure-net1.1">
		<!--
		<property name="pascalcase.converter.ant.target" value="compile-converter" />
		<property name="pascalcase.converter.exe" location="bin/pascalcase.exe" />
		-->
		
		<property name="pascalcase.converter.ant.target" value="compile-converter2" />
		<property name="pascalcase.converter.exe" location="bin/pascalcase2.exe" />


	</target>
	
	<target name="configure-net2-pascalcase">
		
		<property name="target.framework.version" value="2.0" />
		
		<property name="csc.executable.path.net2" location="${env.SystemRoot}/Microsoft.NET/Framework/v2.0.50727" />
		<property name="csc.executable" location="${csc.executable.path.net2}/csc.exe" />
		
		<property name="pascalcase.converter.ant.target" value="compile-converter2" />
		<property name="pascalcase.converter.exe" location="bin/pascalcase2.exe" />

		<property name="csharp.defines" value="NET_2_0" />
		<property name="installer.package.suffix" value="net2" />
		<property name="installer.package.guid" value="${installer.package.guid.net2}" />
		<property name="installer.upgrade.guid" value="${installer.upgrade.guid.net2}" />
	</target>
	
	<target name="compile-legacy">
		<property name="legacy.dir" location="${dir.dist.net.build}/legacy" />
		<property name="legacy.compact.dll.dir" location="${legacy.dir}/dll/compact" />
		<property name="legacy.net.dll.dir" location="${legacy.dir}/dll/net" />
		
		<mkdir dir="${legacy.compact.dll.dir}" />
		<mkdir dir="${legacy.net.dll.dir}" />
		
		<property name="csc.executable.path.net1" location="${env.SystemRoot}/Microsoft.NET/Framework/v1.1.4322" />
		
		<antcall target="compiledllnet">
			<param name="file.dll.compact" value="${legacy.compact.dll.dir}/db4o.dll" />
			<param name="file.xml.compact" value="${legacy.compact.dll.dir}/db4o.xml" />
			<param name="file.dll.net" value="${legacy.net.dll.dir}/db4o.dll" />
			<param name="file.xml.net" value="${legacy.net.dll.dir}/db4o.xml" />
			<param name="csharp.defines" value="NET" />
			<param name="csc.executable" location="${csc.executable.path.net1}/csc.exe" />
		</antcall>
	</target>
		
	<target name="do-zipnet-pascalcase">
		<antcall target="doctor">
			<param name="dir.n.tutorial.src" value="${dir.dist.pascalcase}/tutorial/db4o-tutorial-chapters/src" />
		</antcall>
		
		<antcall target="compile-legacy">
		</antcall>
		
		<antcall target="create-zipnet">
			<param name="dir.core" value="${dir.dist.pascalcase}/core" />
			<param name="dir.tools" value="${dir.dist.pascalcase}/tools" />
			<param name="dir.test" value="${dir.dist.pascalcase}/test" />
			<param name="dir.tutorial" value="${dir.dist.pascalcase}/tutorial" />
		</antcall>
	</target>
		
	<target name="create-zipnet">
		<mkdir dir="${dir.dist.net.src.core}" />
		<copy todir="${dir.dist.net.src.core}">
			<fileset dir="${dir.core}">
				<include name="**/*.cs" />
				<include name="*.*" />
				<exclude name=".*" />
			</fileset>
		</copy>
		<versioninfo path="${dir.dist.net.src.core}/src/net" net="true" keyfile="" version="${db4o.version.full}" major="${db4o.version.major}" />
		<versioninfo path="${dir.dist.net.src.core}/src/compact" compact="true" keyfile="" version="${db4o.version.full}" major="${db4o.version.major}" />
		<mkdir dir="${dir.dist.net.src.tools}" />
		<copy todir="${dir.dist.net.src.tools}">
			<fileset dir="${dir.tools}">
				<include name="**/*.cs" />
				<include name="*.*" />
				<exclude name=".*" />
			</fileset>
		</copy>
		<mkdir dir="${dir.dist.net.src.test}" />
		<copy todir="${dir.dist.net.src.test}">
			<fileset dir="${dir.test}">
				<include name="**/*.cs" />
				<include name="**/*.resx" />
				<include name="*.*" />
				<exclude name=".*" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.net.build.tutorial}">
			<fileset dir="${dir.j.tutorial.out.net}">
				<include name="**/**" />
			</fileset>
			<fileset dir="${dir.tutorial}">
				<include name="**/*.cs" />
				<exclude name="db4o-tutorial/**/*.*" />
			</fileset>
			<fileset dir="${dir.n.tutorial.bin}">
				<include name="**/*.dll" />
				<include name="**/*.exe" />
				<include name="**/*.config" />
			</fileset>
		</copy>
	
		<filehead beforePattern="using|namespace" header="${content.gplheader}" >
			<sources dir="${dir.dist.net.build.src}">
				<include name="**/*.cs" />
				<exclude name="**/external/**" />
			</sources>
		</filehead>

	
		<copy todir="${dir.dist.net.build}">
			<fileset dir="${dir.dist}" includes="dll/**/**" />
			<fileset dir="${dir.j}" includes="${filename.db4o.license}" />
			<fileset dir="${dir.config}" includes="README.txt" />
		</copy>
		
		<mkdir dir="${dir.dist.net.build}/doc/api" />
		
		<copy todir="${dir.dist.net.build}/doc/api">
			<fileset dir="${dir.dist}/ndoc">
				<include name="db4o.chm" />
				<include name="db4o.HxS" />
				<include name="db4oCollection.*" />
				<include name="db4oCollection.h2reg.ini" />
			</fileset>
			<fileset dir="lib/h2reg">
				<include name="*.exe" />
				<include name="*.ini" />
			</fileset>
		</copy>
		
		<zip destfile="${file.dist.net}">
			<fileset dir="${dir.dist.net}" includes="${folder.build}/**" />
		</zip>
		
		<ant antfile="build-net-installer.xml">
			<property name="installer.package.guid" value="${installer.package.guid}" />
			<property name="installer.upgrade.guid" value="${installer.upgrade.guid}" />
			<property name="target.framework.version" value="${target.framework.version}" />
		</ant>
	</target>
	
	<target name="zipmono" depends="init, compiledllmono, ndocmono" description="Zip Mono distribution">
		<mkdir dir="${dir.dist.mono.src.core}" />
		<copy todir="${dir.dist.mono.src.core}">
			<fileset dir="${dir.n.core}">
				<include name="**/*.cs" />
				<include name="**/*.csproj" />
				<exclude name="**/compact/**"/>
			</fileset>
		</copy>
		<versioninfo path="${dir.dist.mono.src.core}/src/net" net="true" keyfile="" version="${db4o.version.full}" major="${db4o.version.major}" />
		<mkdir dir="${dir.dist.mono.src.tools}" />
		<copy todir="${dir.dist.mono.src.tools}">
			<fileset dir="${dir.n.tools}">
				<include name="**/*.cs" />
				<include name="**/*.csproj" />
			</fileset>
		</copy>
		<mkdir dir="${dir.dist.mono.src.test}" />
		<copy todir="${dir.dist.mono.src.test}">
			<fileset dir="${dir.n.test}">
				<include name="**/*.cs" />
				<exclude name="**/compact/**"/>
				<exclude name="**/CsImage.cs" />
				<include name="**/*.csproj" />
			</fileset>
		</copy>
		<mkdir dir="${dir.dist.mono.build.tutorial}" />
		<copy todir="${dir.dist.mono.build.tutorial}">
			<fileset dir="${dir.n.tutorial}">
				<include name="**/*.cs" />
				<exclude name="db4o-tutorial/**/*.*" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.mono.build.tutorial}">
			<fileset dir="${dir.j.tutorial.out.mono}">
				<include name="**/**" />
			</fileset>
		</copy>
		<filehead beforePattern="using|namespace" header="${content.gplheader}" >
			<sources dir="${dir.dist.mono.build.src}">
				<include name="**/*.cs" />
				<exclude name="**/external/**" />
			</sources>
		</filehead>
		<copy todir="${dir.dist.mono.build}">
			<fileset dir="${dir.dist.mono}" includes="dll/**/**" />
			<fileset dir="${dir.j}" includes="GPL.txt" />
			<fileset dir="${dir.config}" includes="README.txt" />
		</copy>
		<mkdir dir="${dir.dist.mono}/doc/api" />
		<copy todir="${dir.dist.mono}/doc/api">
			<fileset dir="${dir.dist.ndoc}" includes="**/**" />
		</copy>
	</target>
	
	<target name="install-javatocsharp-plugin">
		
		<property name="javatocsharp.core.dir" location="../javatocsharp.core" />
		
		<mkdir dir="${javatocsharp.core.dir}/bin" />
		
		<echo>${eclipse.home}/plugins</echo>
		<javac debug="true" source="1.5" destdir="${javatocsharp.core.dir}/bin" srcdir="${javatocsharp.core.dir}/src">
			<classpath>
				<fileset dir="${eclipse.home}/plugins">
					<include name="org.eclipse.osgi_*/osgi.jar" />
					<include name="org.eclipse.core.resources_*/resources.jar" />
					<include name="org.eclipse.core.runtime_*/runtime.jar" />
					<include name="org.eclipse.jdt.core_*/jdtcore.jar" />
					<!-- redundant entries: in newer eclipse installs those reside in jars -->
					<include name="org.eclipse.osgi_*.jar" />
					<include name="org.eclipse.core.resources_*.jar" />
					<include name="org.eclipse.core.runtime_*.jar" />
					<include name="org.eclipse.jdt.core_*.jar" />
				</fileset>
			</classpath>
		</javac>
		
		<property name="plugin.dir" value="${plugins.home}/javatocsharp.core_1.0.0" />
		<delete dir="${plugin.dir}" />
		<mkdir dir="${plugin.dir}" />
		<jar destfile="${plugin.dir}/javatocsharp.jar" basedir="${javatocsharp.core.dir}/bin" />
		<copy todir="${plugin.dir}" file="${javatocsharp.core.dir}/plugin.xml" />

	</target>
	
	<target name="prepare-conversion-workspace" depends="init">
		<delete dir="${target.dir}" />
		<mkdir dir="${target.dir}" />
		
		<copy todir="${target.dir}">
			<fileset dir="..">
				<include name="db4oj/core/src/**/*.java" />
			</fileset>
		</copy>
		
		<!-- shared native query support -->
		<copy todir="${target.dir}/db4oj">
			<fileset dir="../db4onqopt">
				<include name="core/src/com/db4o/nativequery/expr/**/*.java" />
				<include name="core/src/com/db4o/nativequery/optimization/SODAQueryBuilder.java" />
			</fileset>
		</copy>
		
		<copy todir="${target.dir}/db4oj/core/src" overwrite="true">
			<fileset dir="../db4on/in/java">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>
	
	<target name="pascalcase" depends="install-javatocsharp-plugin">
		
		<property name="dir.sharpen.pc" location="${dir.sharpen}/pascalcase" />
		<property name="pascalcase.converter.ant.target" value="build2" />
		
		<antcall target="prepare-conversion-workspace">
			<param name="target.dir" value="${dir.sharpen.pc}" />
		</antcall>
			
		<java jvm="${file.jvm.jdk1.5}" classname="org.eclipse.core.launcher.Main" fork="yes" failonerror="true">
			<classpath>
				<pathelement location="${eclipse.home}/startup.jar" />
			</classpath>
			
			<arg value="-data" />
			<arg file="${dir.sharpen.pc}" />
			<arg value="-application" />
			<arg value="javatocsharp.core.application" />
			<arg value="db4oj/core/src" />
			<arg value="-pascalcase" />
		</java>
		
		<ant antfile="build-pascalcase.xml" target="${pascalcase.converter.ant.target}">
		</ant>
		
		<property name="dir.dist.pascalcase" location="${dir.dist}/pascalcase" />
		<property name="target.dir" value="${dir.dist.pascalcase}/core" />
		<delete dir="${target.dir}" />
		<mkdir dir="${target.dir}" />
		
		<antcall target="copy-sharpened-files">
			<param name="src.dir" value="${dir.sharpen.pc}/db4ojcsharp/src" />
			<param name="target.dir" value="${target.dir}/src/core" />
		</antcall>
		
		<exec executable="${pascalcase.converter.exe}" failonerror="true">
			<arg file="${dir.n.in.sharp}" />
			<arg file="${target.dir}/src" />
		</exec>		
		
		<antcall target="copy-external-files">
			<param name="target.dir" value="${target.dir}/src" />
		</antcall>
		
		<antcall target="compilecoredll-compact">
			<param name="src.dir" value="${target.dir}/src" />
		</antcall>

		<antcall target="compilecoredll-net">
			<param name="src.dir" value="${target.dir}/src" />
		</antcall>
		
		<exec executable="${pascalcase.converter.exe}" failonerror="true">
			<arg file="${dir.n.tools}/src" />
			<arg file="${dir.dist.pascalcase}/tools/src" />
			<arg value="${csharp.defines}" />
		</exec>
		
		<exec executable="${pascalcase.converter.exe}" failonerror="true">
			<arg file="${dir.n.test}/src" />
			<arg file="${dir.dist.pascalcase}/test/src" />
			<arg value="${csharp.defines}" />
			<arg value="PASCALCASE" />
		</exec>
		
		<exec executable="${pascalcase.converter.exe}" failonerror="true">
			<arg file="${dir.n.tutorial}" />
			<arg file="${dir.dist.pascalcase}/tutorial" />
			<arg value="PASCALCASE" />
		</exec>
		
		<copy todir="${dir.dist.pascalcase}">
			<fileset dir="${dir.n}">
				<include name="**/test/AssemblyInfo.cs" />
				<include name="**/tools/AssemblyInfo.cs" />
				<include name="**/*.csproj" />
				<include name="**/*.csdproj" />
				<include name="**/*.sln" />
				<include name="**/*.resx" />
				<include name="**/*.resources" />
				<include name="**/*.ico" />
				<include name="**/lib/*.dll" />
				<include name="tutorial/build.xml" />
				<include name="tutorial/**/*.config" />
			</fileset>
		</copy>
		
		<ant dir="${dir.dist.pascalcase}/tutorial">
			<property name="dir.db4obuild" location="." />
		</ant>
		
	</target>
	
	<target name="copy-sharpened-files">
		<copy todir="${target.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.cs" />
				<exclude name="com/db4o/handlers/*.*" />
				<exclude name="com/db4o/eclipse/**/*.*" />
				<exclude name="com/db4o/reflect/jdk/**/*.*" />
				<exclude name="com/db4o/foundation/Lock4.cs" />
				<exclude name="com/db4o/JDK_*.cs" />
				<exclude name="com/db4o/JavaOnly.cs" />
				<exclude name="com/db4o/config/TSerializable.cs" />
				<exclude name="com/db4o/config/TCollection.cs" />
				<exclude name="com/db4o/config/THashtable.cs" />
				<exclude name="com/db4o/config/TMap.cs" />
				<exclude name="com/db4o/config/TTreeMap.cs" />
				<exclude name="com/db4o/config/TTreeSet.cs" />
				<exclude name="com/db4o/config/TVector.cs" />
			</fileset>
		</copy>
	</target>
	
	<target name="sharpen" description="create .NET sources" depends="install-javatocsharp-plugin" unless="skip.conversion">
		
		<property name="sharpen.src.dir" location="${dir.sharpen}/legacy" />
		
		<antcall target="prepare-conversion-workspace">
			<param name="target.dir" value="${sharpen.src.dir}" />
		</antcall>
		
		<java jvm="${file.jvm.jdk1.5}" classname="org.eclipse.core.launcher.Main" fork="yes" failonerror="true">
			<classpath>
				<pathelement location="${eclipse.home}/startup.jar" />
			</classpath>
			
			<arg value="-data" />
			<arg file="${sharpen.src.dir}" />
			<arg value="-application" />
			<arg value="javatocsharp.core.application" />
			<arg value="db4oj/core/src" />
			
		</java>
		
		<antcall target="copy-sharpened-files">
			<param name="src.dir" value="${sharpen.src.dir}/db4ojcsharp/src" />
			<param name="target.dir" value="${dir.n.core.src}/core" />
		</antcall>
		
		<copy todir="${dir.n.core.src}" overwrite="true">
			<fileset dir="${dir.n.in.sharp}">
				<include name="**/*.cs" />
			</fileset>
		</copy>
		
		<antcall target="copy-external-files">
			<param name="target.dir" value="${dir.n.core.src}" />
		</antcall>		
		
		<updatecsharpproject projectFile="${dir.n.core}/db4o-net.csproj">
			<sources dir="${dir.n.core}">
				<include name="**/*.cs" />
				<exclude name="src/compact/**" />
			</sources>
		</updatecsharpproject>
		
		<updatecsharpproject projectFile="${dir.n.core}/db4o-net2.csproj">
			<sources dir="${dir.n.core}">
				<include name="**/*.cs" />
				<exclude name="src/compact/**" />
			</sources>
		</updatecsharpproject>
		
		<updatecsharpproject projectFile="${dir.n.core}/db4o-compact.csdproj">
			<sources dir="${dir.n.core}">
				<include name="**/*.cs" />
				<exclude name="src/net/**" />
				<!-- <exclude name="src/external/**" /> -->
			</sources>
		</updatecsharpproject>
		
		<updatecsharpproject projectFile="${dir.n.core}/db4o-compact-2005.csproj">
			<sources dir="${dir.n.core}">
				<include name="**/*.cs" />
				<exclude name="src/net/**" />
				<!-- <exclude name="src/external/**" /> -->
			</sources>
		</updatecsharpproject>

	</target>
	
	<target name="copy-external-files">
		<!-- external libraries: Mono.Cecil and Cecil.FlowAnalysis -->
		<copy todir="${target.dir}/external" overwrite="true">
			<fileset dir="${dir.n.in}/external/Mono.Cecil">
				<include name="Mono.*/*.cs" />
				<exclude name="**/AssemblyInfo.cs" />
			</fileset>
		</copy>		
		<copy todir="${target.dir}/external" overwrite="true">
			<fileset dir="${dir.n.in}/external/Cecil.FlowAnalysis">
				<include name="Cecil.FlowAnalysis/**/*.cs" />
				<exclude name="Cecil.FlowAnalysis/AssemblyInfo.cs" />
			</fileset>
		</copy>
	</target>
	
	<target name="doctor" depends="init, compilecorejava, compilejtutorial" description="Run all doctor tasks">
		<jar destfile="${file.doctor.applets.jar}">
			<fileset dir="${dir.doctor.bin}" includes="**/com/yetac/doctor/applet/*.class" />
		</jar>
		<signjar jar="${file.doctor.applets.jar}" alias="db4objects" keypass="kistoa" storepass="kistoa" />
		<jar destfile="${file.tutorial.jar}">
			<fileset dir="${dir.dist.classes.tutorial}" includes="com/db4o/f1/**/*.class" />
		</jar>
		<signjar jar="${file.tutorial.jar}" alias="db4objects" keypass="kistoa" storepass="kistoa" />
		<doctor name="doctor" workspace="${dir.workspace}" pdfbasefont="${font.pdf.base}" />
		<doctor name="dev" workspace="${dir.workspace}" outputfile="dev" pdfbasefont="${font.pdf.base}" />
		<doctor 
			name="f1" 
			home="${dir.j.tutorial}" 
			interactive="true" 
			workspace="${dir.workspace}" 
			inputsource="${dir.j.tutorial.src}/" 
			sourceextension="java" 
			outputfile="${db4o.file}tutorial" 
			outputpath="${dir.j.tutorial.out.java}" 
			pdfbasefont="${font.pdf.base}" 
			archive="${filename.doctor.applets.jar}, ${filename.java1.2.jar}, ${filename.tutorial.jar}" 
			outlineimage="db4objects1.jpg" 
			linkhome="http://www.db4o.com">
			<variable name="java" boolean="true" />
			<variable name="net" boolean="false" />
			<variable name="mono" boolean="false" />
			<ignoreinputfolder name="net" />
			<ignoreinputfolder name="mono" />
		</doctor>
		<copy todir="${dir.j.tutorial.out.java}/docs" overwrite="true">
			<fileset dir="${dir.dist.doctor}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${dir.dist.jars}">
				<include name="${filename.java1.2.jar}" />
			</fileset>
		</copy>
		<signjar jar="${dir.j.tutorial.out.java}/docs/${filename.java1.2.jar}" alias="db4objects" keypass="kistoa" storepass="kistoa" />
		<doctor 
			name="f1" 
			home="${dir.j.tutorial}" 
			interactive="true" 
			workspace="${dir.workspace}" 
			inputsource="${dir.n.tutorial.src}/" 
			sourceextension="cs" 
			outputfile="${db4o.file}tutorial" 
			outputpath="${dir.j.tutorial.out.net}" 
			pdfbasefont="${font.pdf.base}" 
			archive="${filename.doctor.applets.jar}, ${filename.java1.2.jar}, ${filename.tutorial.jar}" 
			outlineimage="db4objects1.jpg" 
			linkhome="http://www.db4o.com">
			<variable name="java" boolean="false" />
			<variable name="net" boolean="true" />
			<variable name="mono" boolean="false" />
			<ignoreinputfolder name="java" />
			<ignoreinputfolder name="mono" />
		</doctor>
		<doctor 
			name="f1" 
			home="${dir.j.tutorial}" 
			interactive="false" 
			showcodeexecutionresults="true"
			workspace="${dir.workspace}" 
			inputsource="${dir.n.tutorial.src}/" 
			sourceextension="cs" 
			outputfile="${db4o.file}tutorial" 
			outputpath="${dir.j.tutorial.out.mono}" 
			pdfbasefont="${font.pdf.base}" 
			archive="${filename.doctor.applets.jar}, ${filename.java1.2.jar}, ${filename.tutorial.jar}" 
			outlineimage="db4objects1.jpg" 
			linkhome="http://www.db4o.com">
			<variable name="java" boolean="false" />
			<variable name="net" boolean="false" />
			<variable name="mono" boolean="true" />
			<ignoreinputfolder name="java" />
			<ignoreinputfolder name="net" />
		</doctor>
	</target>

	<target name="buildjava" depends="doctor, zipjava" description="Full java build" />

	<target name="buildnet" depends="doctor, zipnet" description="Full NET build" />
	
	<target name="buildnet-pascalcase" depends="zipnet-pascalcase" description="Full PascalCase NET build" />
	
	<target name="buildnet-pascalcase2" depends="zipnet-pascalcase2" description="Full PascalCase NET 2.0 build" />
	
	<target name="buildmono" depends="doctor, zipmono" description="Full Mono build" />

	<target name="buildall" depends="clean, buildjava, buildnet" description="Full clean build" />
	
	<target name="buildall2" depends="clean, buildjava, buildnet-pascalcase2" description="Full clean build (.net 2 runtime)" />
	
	<target name="serversidecopy">
		<copy todir="${dir.server.downloads}" overwrite="true">
			<fileset dir="${dir.dist}">
				<include name="*.zip" />
				<include name="*.msi" />
			</fileset>
			<fileset dir="${dir.dist.java.build.tutorial}">
				<include name="*.pdf" />
			</fileset>
		</copy>
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2.5.B.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2.5.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2.6.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2.7.J.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2.7.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2.8.J.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2.8.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2.9.J.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2.9.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o2U.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o30.J.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4o30.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4oD.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4oE.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4oEU.zip" />
		<copy overwrite="true" file="${file.server.java}" tofile="${dir.server.downloads}/db4oU.zip" />
		<copy overwrite="true" file="${file.server.net}" tofile="${dir.server.downloads}/db4o2.7.N.zip" />
		<copy overwrite="true" file="${file.server.net}" tofile="${dir.server.downloads}/db4o2.8.N.zip" />
		<copy overwrite="true" file="${file.server.net}" tofile="${dir.server.downloads}/db4o2.9.N.zip" />
		<copy overwrite="true" file="${file.server.net}" tofile="${dir.server.downloads}/db4o30.N.zip" />
	</target>

	<target name="serverside" depends="buildall, serversidecopy" />
</project>
