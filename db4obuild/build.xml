<?xml version="1.0"?>
<project name="db4obuild" default="build-before-checkin" basedir=".">
<!--
	Depends on a custom local file 'machine.properties' with
	the following entries:

	dir.workspace=<the workspace folder where all projects reside>
	file.compiler.jdk1.3=<path to jdk 1.3 java compiler>
	file.jvm.jdk1.1=<path to jdk 1.1 java vm executable>
	file.jvm.jdk1.3=<path to jdk 1.3 java vm executable>
	file.jvm.jdk1.5=<path to jdk 1.5 java vm executable>
	font.pdf.base=<true type font>
	dir.compactframework=<path to the 2.0 version of the compact framework, leave empty if not available>
	eclipse.home=<eclipse home dir>
	csc.executable.path.net2=<OPTIONAL: path to csc.exe dir for .NET 2.0 if different than default>
	csc.executable.net2=<OPTIONAL: path to csc executable file for .NET 2.0 if different than default>
	msbuild.executable.net2=<OPTIONAL: path to msbuild executable file for .NET 2.0 if different than default>
	msbuild.executable.net35=<OPTIONAL: path to msbuild executable file for .NET 3.5 if different than default>
	file.compiler.jdk1.3.args.optional=<OPTIONAL: any parameters for javac, e.g. '-source 1.3' if a JDK >= 5 is used>
	file.keystore=<OPTIONAL: keystore location for signjar tasks. if not present, ${user.home}/.keystore is assumed>	
	mono.mcs.executable=<OPTIONAL: path to mcs executable, overrides ant.properties entry>
	mono.gmcs.executable=<OPTIONAL: path to gmcs executable, overrides ant.properties entry>
	path.classpath.jdk1.1=<OPTIONAL: path to classes.zip for JDK1.1>
	javac.debug.mode=<OPTIONAL: debug switch for javac, default: false>
	eclipse.startup.jar=<OPTIONAL: use a different jar for eclipse startup if you're using eclipse 3.3+>
	java.vmargs=<OPTIONAL: java VM args for test suites>
	sharpen.core.dir=<OPTIONAL: if you keep sharpen in a different location>
	

 	##################################
 	#          Maven Support         # 
    ##################################
    
	maven.repository.releases.url=<repository url>

	#the following protocols are supported:
	#http, scp, dav:http, ftp and there are several extentions for other protocols
	#e.g. dav:http://10.10.3.108:8080/archiva/repository/third-party
	maven.repository.releases.username=<username for the url>
	maven.repository.releases.password=<password for the url>
	maven.repository.snapshots.url=<repository url for snapshots>
	maven.repository.snapshots.username=<username for the url>
	maven.repository.snapshots.password=<password for the url>	
	
	If the java executable on your path is JDK>=1.6 you have to specify file.jvm.jdk1.1 to point to a JDK<=5,
	otherwise you may experience failures running the java1.1 test suite.
	
	The path to this file can be specified via property "path.machine.properties", as in
	ant -Dpath.machine.properties=machine.properties.win build-before-checkin
	
	
	An example:
	dir.workspace=C:/_db4o/production
	file.compiler.jdk1.3=C:/jdk1.3.1_12/bin/javac.exe
	file.jvm.jdk1.1=/usr/java/jdk1.1/bin/java
	file.jvm.jdk1.3=/usr/java/jdk1.3/bin/java
	file.jvm.jdk1.5=/usr/java/jdk1.5.0_03.32bit/bin/java
	font.pdf.base=C:/WINDOWS/Fonts/VERDANA.TTF
	dir.compactframework=C:/Arquivos de programas/Microsoft Visual Studio 8/SmartDevices/SDK/CompactFramework/2.0/
	eclipse.home=c:/Program Files/Eclipse	
	csc.executable.path.net2=C:/WINDOWS/Microsoft.NET/Framework/v2.0.50727/
	path.classpath.jdk1.1=d:/java/jdk/jdk1.1.8/lib/classes.zip
	eclipse.startup.jar=${eclipse.home}/plugins/org.eclipse.equinox.launcher_1.0.0.v20070606.jar
	java.vmargs=-Ddb4ounit.file.path=/mnt/rd0/db4ounit -Djava.io.tmpdir=/mnt/rd0/tmp
-->
	<import file="common.xml" />
	
	<target name="buildjava-old-school" depends="clean.java">
		<ant antfile="build-java.xml" target="package.java" />
	</target>
	
	<target name="buildall-old-school" depends="clean, init, buildjava-old-school, buildnet">
	</target>

	<target name="init" depends="properties" description="Basic initialization">
		<tstamp />
		<mkdir dir="${dir.dist}" />
		<mkdir dir="${dir.sharpen}" />
		<mkdir dir="${dir.dist.net.build.src}" />
		<mkdir dir="${dir.dist.net.instrumentation}" />
		<mkdir dir="${dir.dist.mono.build.src}" />
		<mkdir dir="${dir.dist.doctor}" />
		<mkdir dir="${dir.dist.doc.api}" />
		<mkdir dir="${dir.dist.java.build.tutorial}" />
		<mkdir dir="${dir.dist.java.build.tutorial.src}" />
		<mkdir dir="${dir.dist.dll.net}" />
		<mkdir dir="${dir.dist.dll.compact}" />
		<mkdir dir="${dir.dist.dll.mono}" />
		<loadfile property="content.gplheader" srcfile="${file.gplheader}" encoding="iso-8859-1" />
		<loadfile property="content.copyrightheader" srcfile="${file.copyrightheader}" encoding="iso-8859-1" />
		<versioninfo path="${dir.j.core.src}/com/db4o"  
			major="${db4o.version.major}" 
			minor="${db4o.version.minor}"
			iteration="${db4o.iteration}"
			revision="${svn.revision}"
		/>
	</target>

	<target name="clean" description="Delete all generated files">
        <delete dir="${dir.dist}" />
        <delete dir="${dir.j.tutorial.out}" />
		<delete>
			<fileset dir="${dir.build}">
				<include name="*.yap" />
				<include name="*.db4o" />
			</fileset>
		</delete>
	</target>

    <target name="clean.java">
        <delete dir="${dir.dist.java}" />
    	<delete dir="${dir.dist.decaf}" />
    </target>

	<target name="cleanomscripttempdir">
		<mkdir dir="${dir.objectmanager.scripts.temp}" />
		<delete>
			<fileset dir="${dir.objectmanager.scripts.temp}">
				<include name="*" />
			</fileset>
		</delete>
	</target>
	
	<target name="compilebuild" depends="init" description="Compile Db4o build sources">
		<mkdir dir="${dir.build.bin}" />
		<depend srcdir="${dir.build.src}" destdir="${dir.build.bin}" closure="yes" />
		<javac srcdir="${dir.build.src}" destdir="${dir.build.bin}" debug="${javac.debug.mode}" fork="true" target="1.3" source="1.3" encoding="UTF-8">
			<classpath path="${path.classpath.full}" />
		</javac>
		<copy todir="${dir.build.bin}">
			<fileset dir="${dir.build.src}" includes="**/*.properties"/>
		</copy>
	</target>

	<target name="runtestsnet" depends="init">
		<ant antfile="build-dotnet.xml" target="run-tests" />
	</target>

	<target name="runtestsmono">
		<ant antfile="build-dotnet.xml" target="run-tests" />
	</target>

	<target name="preparendoc">
		<property name="db4o-namespace-summaries.xml" location="config/db4o-namespace-summaries.xml" />		
		<property name="ndoc.home" location="lib/ndoc" />
				
		<delete dir="${dir.dist.ndoc}" />
		<mkdir dir="${dir.dist.ndoc}" />
	</target>
	
	<target name="ndocmono" depends="preparendoc" description="Builds public .net docs for the mono platform">
		<exec executable="mono" failonerror="true">
			<arg file="${ndoc.home}/bin/${mono.ndoc.executable}" />
			<arg value="${file.dll.mono}" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-documenter=MSDN" />
			<arg value="-OutputTarget=Web" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2005  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-CleanIntermediates=True" />
		</exec>
	</target>
	
	<!-- for debugging purposes only -->
	<target name="ndoc-net2" depends="configure-net2, realndoc" />
	
	<target name="ndoc" depends="preparendoc">
	</target>
	
	<target name="realndoc" depends="preparendoc" description="Build public .net docs">		
		<exec executable="${ndoc.home}/bin/net/${target.framework.version}/NDocConsole.exe">
			<arg value="${file.dll.net}" />
			<arg value="-documenter=MSDN 2003" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-HtmlHelpName=db4o" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2005  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-IncludeFavorites=True" />			
		</exec>
	</target>
		
	<target name="vsdoc" depends="ndoc" description="Build VS.NET 2003 integrated docs">
		<exec executable="${ndoc.home}/bin/net/${target.framework.version}/NDocConsole.exe">
			<arg value="${file.dll.net}" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-documenter=VS.NET 2003" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-BuildSeparateIndexFile=false" />
			<arg value="-CollectionNamespace=com.db4o" />
			<arg value="-CreateFullTextIndex=true" />
			<arg value="-GenerateCollectionFiles=true" />
			<arg value="-HtmlHelpName=db4o" />
			<arg value="-IncludeDefaultStopWordList=true" />
			<arg value="-LinkToSdkDocVersion=1.1" />
			<arg value="-PlugInNamespace=ms.vscc" />
			<arg value="-RegisterTitleWithNamespace=true" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2005  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-IncludeFavorites=True" />
			<!--
            <property name="Preliminary" value="True" />
            <property name="CleanIntermediates" value="True" />
            -->
		</exec>
	</target>
	
    <target name="compile.java.all" depends="clean.java">
    	<ant antfile="build-java.xml" target="build.db4ojava" />
    </target>
	
	<target name="runtestsjava1.1">
		<ant antfile="build-java.xml" target="run.tests.jdk1.1" />
	</target>
	
	<target name="runtestsjava1.2">
		<ant antfile="build-java.xml" target="run.tests.jdk1.1" />
	</target>   

	<target name="runtestsjava5">
    	<ant antfile="build-java.xml" target="run.tests.jdk5" />
    </target>
    
    <target name="runconcurrencytests">
    	<ant antfile="build-java.xml" target="run.tests.concurrency" />
    </target>

	<target name="runosgitests">
		<ant antfile="build-java.xml" target="run.tests.osgi" />
	</target>

	<target name="runtestsjava">
		<ant antfile="build-java.xml" target="run.tests.db4ojava" />
	</target>

	<target name="configure-net2">
		
		<property name="target.framework.version" value="2.0" />
		
		<property name="csc.executable.path.net2" location="${env.SystemRoot}/Microsoft.NET/Framework/v2.0.50727" />
		<property name="csc.executable.net2" location="${csc.executable.path.net2}/csc.exe" />
		<property name="csc.executable" location="${csc.executable.net2}" />
		
		<property name="csharp.defines" value="NET_2_0" />
		<property name="csharp.defines.cf" value="CF_2_0" />		
		<property name="dir.dll.wince" value="${dir.compactframework}v2.0/WindowsCE/" />
		
		<property name="installer.package.suffix" value="net2" />
		<property name="installer.package.guid" value="${installer.package.guid.net2}" />
		<property name="installer.upgrade.guid" value="${installer.upgrade.guid.net2}" />
	</target>
	
	<target name="buildjava" depends="clean.java" description="Full java build">
		<ant antfile="build-java.xml" target="package.java" />
	</target>

	<target name="deploy-maven-release" description="Deploys the current version in the release repository">
		<ant antfile="build-maven.xml" target="deploy-maven-release" />
	</target>
	
	<target name="deploy-maven-snapshot" description="Deploys the current version in the snapshot repository" depends="init">
		<ant antfile="build-maven.xml" target="deploy-maven-snapshot" />
	</target>		
	
	<target name="buildnet" depends="init">
		<ant antfile="build-java.xml" target="doctor"/>
		<ant antfile="build-dotnet.xml" target="package" >
		    <property name="force.skip.sharpen" value="${force.skip.sharpen}" />
		</ant>
	</target>
	
	<target name="buildnet35" depends="init" description=".NET 3.5 (LINQ) full build">
		<ant antfile="build-java.xml" target="doctor"/>
		<ant antfile="build-dotnet.xml" target="package-net35" >
		    <property name="force.skip.sharpen" value="${force.skip.sharpen}" />
		</ant>
	</target>
	
	<target name="test-cc" depends="init, runtestsnet, cc-net35" />
	
	<target name="cc-net35" depends="init">
		<ant antfile="build-dotnet.xml" target="run-tests-net35" >
		    <property name="force.skip.sharpen" value="${force.skip.sharpen}" />
		</ant>
		<ant target="buildnet35" />
	</target>

	<target name="buildmono2" depends="compile.java.all">
		<ant antfile="build-dotnet.xml" target="package" />
	</target>

	<target name="buildall" depends="clean, buildjava, buildnet" description="Full clean build (.net 2 runtime)" />

    <target name="build-java-before-checkin" depends="clean, runtestsjava5" />

    <target name="build-net-before-checkin">
        <ant antfile="build-dotnet.xml" target="run-tests">
        	<property name="skip.java.compilation" value="true" />
        </ant>
    </target>
	
	<target name="run-instrumented-net-tests" depends="prepare-test-environment" description="runs the .net test suite after being instrumented for TA">
		<ant antfile="build-dotnet.xml" target="run-core-tests-instrumented">
        	<property name="skip.java.compilation" value="true" />
        </ant>
	</target>
	
	<target name="prepare-test-environment" depends="clean.java">
		<ant antfile="build-java.xml" target="build.db4ojava.tests" />
	</target>
	
    <target name="build-before-checkin" depends="prepare-test-environment,build-net-before-checkin" />
	
	<target name="build-cf20" depends="init">
		<ant antfile="build-dotnet.xml" target="build-cf20" />
	</target>
    
	<target name="build-cf35" depends="init">
	    <ant antfile="build-dotnet.xml" target="build-cf35" />
	</target>
</project>
