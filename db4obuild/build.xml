<?xml version="1.0"?>
<project name="db4obuild" default="build-before-checkin" basedir=".">
<!--
	Depends on a custom local file 'machine.properties' with
	the following entries:

	dir.workspace=<the workspace folder where all projects reside>
	file.compiler.jdk1.3=<path to jdk 1.3 java compiler>
	file.jvm.jdk1.1=<path to jdk 1.1 java vm executable>
	file.jvm.jdk1.2=<path to jdk 1.2 java vm executable>
	file.jvm.jdk1.5=<path to jdk 1.5 java vm executable>
	font.pdf.base=<true type font>
	dir.compactframework=<path to the 2.0 version of the compact framework, leave empty if not available>
	eclipse.home=<eclipse home dir>
	csc.executable.path.net2=<OPTIONAL: path to csc.exe dir for .NET 2.0 if different than default>
	csc.executable.net2=<OPTIONAL: path to csc executable file file for .NET 2.0 if different than default>
	file.compiler.jdk1.3.args.optional=<OPTIONAL: any parameters for javac, e.g. '-source 1.3' if a JDK >= 5 is used>
	file.keystore=<OPTIONAL: keystore location for signjar tasks. if not present, ${user.home}/.keystore is assumed>	
	mono.mcs.executable=<OPTIONAL: path to mcs executable, overrides ant.properties entry>
	mono.gmcs.executable=<OPTIONAL: path to gmcs executable, overrides ant.properties entry>
	path.classpath.jdk1.1=<OPTIONAL: path to classes.zip for JDK1.1>
	javac.debug.mode=<OPTIONAL: debug switch for javac, default: false>
	eclipse.startup.jar=<OPTIONAL: use a different jar for eclipse startup if you're using eclipse 3.3+>
	
	The path to this file can be specified via property "path.machine.properties", as in
	ant -Dpath.machine.properties=machine.properties.win build-before-checkin
	
	An example:
	dir.workspace=C:/_db4o/production
	file.compiler.jdk1.3=C:/jdk1.3.1_12/bin/javac.exe
	file.jvm.jdk1.1=/usr/java/jdk1.1/bin/java
	file.jvm.jdk1.2=/usr/java/jdk1.2/bin/java
	file.jvm.jdk1.5=/usr/java/jdk1.5.0_03.32bit/bin/java
	font.pdf.base=C:/WINDOWS/Fonts/VERDANA.TTF
	dir.compactframework=C:/Arquivos de programas/Microsoft Visual Studio 8/SmartDevices/SDK/CompactFramework/2.0/
	eclipse.home=c:/Program Files/Eclipse	
	csc.executable.path.net2=C:/WINDOWS/Microsoft.NET/Framework/v2.0.50727/
	path.classpath.jdk1.1=d:/java/jdk/jdk1.1.8/lib/classes.zip
	eclipse.startup.jar=${eclipse.home}/plugins/org.eclipse.equinox.launcher_1.0.0.v20070606.jar
-->
	<import file="common.xml" />
	
	<target name="buildjava-old-school" depends="clean, init, compile.java.all, doctor, zipjava">
	</target>
	
	<target name="buildall-old-school" depends="clean, init, buildjava-old-school, buildnet">
	</target>
	
	<target name="buildall2-old-school" depends="clean, init, buildjava-old-school, buildnet2">
	</target>

	<target name="init" depends="properties" description="Basic initialization">
		<tstamp />
		<mkdir dir="${dir.dist}" />
		<mkdir dir="${dir.sharpen}" />
		<mkdir dir="${dir.dist.net.build.src}" />
		<mkdir dir="${dir.dist.net.instrumentation}" />
		<mkdir dir="${dir.dist.mono.build.src}" />
		<mkdir dir="${dir.dist.doctor}" />
		<mkdir dir="${dir.dist.doc.api}" />
		<mkdir dir="${dir.dist.java.build.tutorial}" />
		<mkdir dir="${dir.dist.java.build.tutorial.src}" />
		<mkdir dir="${dir.dist.dll.net}" />
		<mkdir dir="${dir.dist.dll.compact}" />
		<mkdir dir="${dir.dist.dll.mono}" />
		<loadfile property="content.gplheader" srcfile="${file.gplheader}" encoding="iso-8859-1" />
		<loadfile property="content.copyrightheader" srcfile="${file.copyrightheader}" encoding="iso-8859-1" />
		<versioninfo path="${dir.j.core.src}/com/db4o"  
			major="${db4o.version.major}" 
			minor="${db4o.version.minor}"
			revision="${svn.revision}"
		/>
		<property name="file.compiler.jdk1.3.args.optional" value="" />
	</target>

	<target name="clean" description="Delete all generated files">
        <delete dir="${dir.dist}" />
        <delete dir="${dir.j.tutorial.out}" />
		<delete>
			<fileset dir="${dir.build}">
				<include name="*.yap" />
				<include name="*.db4o" />
			</fileset>
		</delete>
	</target>
	
	<target name="filehead" depends="init" description="Add copyright header to all input sources">
		<filehead beforePattern="package" header="${content.copyrightheader}" >
			<sources dir="${dir.j}">
				<include name="**/*.java" />
			</sources>
		</filehead>
		<filehead beforePattern="package" header="${content.copyrightheader}" >
			<sources dir="${dir.doctor.src}">
				<include name="**/*.java" />
			</sources>
		</filehead>
	</target>

	<target name="copyjava1.1">
		<reset-dir dir="${dir.dist.java.temp.src.core}" />
		<copy todir="${dir.dist.java.temp.src.core}">
			<fileset dir="${dir.j.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="copyjava1.2">
		<copy todir="${dir.dist.java.temp.src.core}" overwrite="true">
			<fileset dir="${dir.j.jdk1.2.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="copyjava5">
		<copy todir="${dir.dist.java.temp.src.core}" overwrite="true">
			<fileset dir="${dir.j.jdk5.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>

    <target name="clean.java">
        <delete dir="${dir.dist.java}" />
    </target>

	<target name="compilecorejava" depends="init" description="Compile Db4o core sources">
        <mkdir dir="${dir.dist.java}" />

		<antcall target="copyjava1.1" />
        <mkdir dir="${dir.dist.classes.java1.1}" />
		<javac compiler="classic"
			fork="yes"
			executable="${file.compiler.jdk1.3}"
			srcdir="${dir.dist.java.temp.src.core}"
			destdir="${dir.dist.classes.java1.1}" debug="${javac.debug.mode}">
			<compilerarg line="${file.compiler.jdk1.3.args} ${file.compiler.jdk1.3.args.optional}"/>
		</javac>

		<antcall target="copyjava1.2" />
        <mkdir dir="${dir.dist.classes.java1.2}" />
		<javac srcdir="${dir.dist.java.temp.src.core}" 
            fork="true" 
            destdir="${dir.dist.classes.java1.2}" 
            debug="${javac.debug.mode}" 
            target="1.2" 
            source="1.2" 
            encoding="UTF-8" />

		<antcall target="copyjava5" />
        <mkdir dir="${dir.dist.classes.java5}" />
		<javac srcdir="${dir.dist.java.temp.src.core}" 
            fork="true" 
            destdir="${dir.dist.classes.java5}" 
            debug="${javac.debug.mode}" 
            target="1.5" 
            source="1.5" 
            encoding="UTF-8" />

        <mkdir dir="${dir.dist.jars}" />
		<jar destfile="${file.java1.1.jar}">
			<fileset dir="${dir.dist.classes.java1.1}" />
		</jar>
		<jar destfile="${file.java1.2.jar}">
			<fileset dir="${dir.dist.classes.java1.2}" />
		</jar>
		<jar destfile="${file.java5.jar}">
			<fileset dir="${dir.dist.classes.java5}" />
		</jar>

	    <mkdir dir="${dir.dist.classes.db4otools}" />
		<javac srcdir="${dir.j.db4otools.src}" 
	        fork="true" 
	        destdir="${dir.dist.classes.db4otools}" 
	        debug="${javac.debug.mode}" 
	        target="1.4" 
	        source="1.4" 
	        encoding="UTF-8">
			<classpath>
				<pathelement path="${file.java1.2.jar}"/>
				<pathelement path="${file.bloat.jar}"/>
			</classpath>
		</javac>
		<jar destfile="${file.db4otools.jar}">
			<fileset dir="${dir.dist.classes.db4otools}" />
			<manifest>
				<attribute name="Class-Path" value="${filename.bloat.jar} ${filename.java1.2.jar}"/>
			</manifest>
		</jar>
	
        <mkdir dir="${dir.dist.classes.nqopt}" />
		<javac srcdir="${dir.j.nqopt.src}" 
            fork="true" 
            destdir="${dir.dist.classes.nqopt}" 
            debug="${javac.debug.mode}" 
            target="1.2" 
            source="1.2" 
            encoding="UTF-8">
			<exclude name="**/j2me/**"/>
			<classpath>
				<pathelement path="${file.java1.2.jar}"/>
				<pathelement path="${file.bloat.jar}"/>
				<pathelement path="${file.db4otools.jar}"/>
				<pathelement path="${file.ant.jar}"/>
			</classpath>
		</javac>
		<jar destfile="${file.nqopt.jar}">
			<fileset dir="${dir.dist.classes.nqopt}" />
			<manifest>
				<attribute name="Class-Path" value="${filename.bloat.jar} ${filename.db4otools.jar} ${filename.ant.jar} ${filename.java1.2.jar}"/>
			</manifest>
		</jar>

        <mkdir dir="${dir.dist.classes.taj}" />
		<javac fork="true" 
            destdir="${dir.dist.classes.taj}" 
            debug="${javac.debug.mode}" 
            target="1.2" 
            source="1.2" 
            encoding="UTF-8">
            <src path="${dir.ta.src}" />
            <src path="${dir.taj.src}" />
			<classpath>
				<pathelement path="${file.java1.2.jar}"/>
                <pathelement path="${file.bloat.jar}"/>
			    <pathelement path="${file.db4otools.jar}"/>
			</classpath>
		</javac>
		
		<jar destfile="${file.ta.jar}">
			<fileset dir="${dir.dist.classes.taj}" />
			<manifest>
				<attribute name="Class-Path" value="${filename.bloat.jar} ${filename.db4otools.jar} ${filename.java1.2.jar}"/>
			</manifest>
		</jar>

		<copy file="${file.bloat.jar}" todir="${dir.dist.jars}" />
		<copy file="${file.ant.jar}" todir="${dir.dist.jars}" />
		<copy file="${file.bloat.license}" todir="${dir.dist.jars}" />
		<copy file="${file.ant.license}" todir="${dir.dist.jars}" />
		<copy file="${file.3rdpartylibs.java}" todir="${dir.dist.jars}" />
	</target>

	<target name="cleanomscripttempdir">
		<mkdir dir="${dir.objectmanager.scripts.temp}" />
		<delete>
			<fileset dir="${dir.objectmanager.scripts.temp}">
				<include name="*" />
			</fileset>
		</delete>
	</target>
	
	<target name="compilebuild" depends="init" description="Compile Db4o build sources">
		<mkdir dir="${dir.build.bin}" />
		<depend srcdir="${dir.build.src}" destdir="${dir.build.bin}" closure="yes" />
		<javac srcdir="${dir.build.src}" destdir="${dir.build.bin}" debug="${javac.debug.mode}" fork="true" target="1.3" source="1.3" encoding="UTF-8">
			<classpath path="${path.classpath.full}" />
		</javac>
		<copy todir="${dir.build.bin}">
			<fileset dir="${dir.build.src}" includes="**/*.properties"/>
		</copy>
	</target>

	<target name="runtestsnet">
		<ant antfile="build-dotnet.xml" target="run-tests-net1" />
	</target>
	
	<target name="runtestsnet2">
		<ant antfile="build-dotnet.xml" target="run-tests" />
	</target>

	<target name="runtestsmono">
		<ant antfile="build-dotnet.xml" target="run-tests" />
	</target>

	<target name="compiledb4ounitjava" description="Compile db4o test framework">
		<delete dir="${dir.dist.classes.db4ounit}" />
		<mkdir dir="${dir.dist.classes.db4ounit}" />
		<javac destdir="${dir.dist.classes.db4ounit}" fork="true" debug="on" target="1.1" source="1.2" encoding="UTF-8">
			<classpath>
				<pathelement path="${file.java1.1.jar}" />
			</classpath>
			<src path="${dir.db4ounit.src}"/>
			<src path="${dir.db4ounit.extensions.src}" />
		</javac>
		<jar destfile="${file.db4ounit.jar}">
			<fileset dir="${dir.dist.classes.db4ounit}" />
		</jar>
	</target>
	
	<target name="compileosgijava">
		<delete dir="${dir.dist.classes.osgi}"/>
		<delete dir="${dir.dist.classes.osgi.lib}"/>
		<mkdir dir="${dir.dist.classes.osgi}"/>
		<mkdir dir="${dir.dist.classes.osgi.lib}"/>
		<copy todir="${dir.dist.classes.osgi.lib}" file="${file.java1.2.jar}"/>
		<copy todir="${dir.dist.classes.osgi.lib}" file="${file.nqopt.jar}"/>
		<copy todir="${dir.dist.classes.osgi.lib}" file="${file.bloat.jar}"/>
		<copy todir="${dir.dist.classes.osgi.lib}" file="${file.db4otools.jar}"/>
		<javac destdir="${dir.dist.classes.osgi}" fork="true" debug="on" encoding="UTF-8" target="1.2" source="1.2">
			<classpath>
				<fileset dir="${dir.build.lib}">
					<include name="*.jar" />
				</fileset>
				<pathelement location="${file.java1.2.jar}"/>
			</classpath>
			<src path="${dir.osgi.src}"/>
		</javac>
		<copy tofile="${dir.dist.classes.osgi}/build.properties" file="${dir.osgi}/build.properties.TM" overwrite="true">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.dotted}"/>
			</filterset>
		</copy>
		<copy tofile="${dir.dist.classes.osgi}/META-INF/MANIFEST.MF" file="${file.osgi.manifest}.TM" overwrite="true">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.dotted}"/>
			</filterset>
		</copy>
		<jar destfile="${file.osgi.jar}" manifest="${dir.dist.classes.osgi}/META-INF/MANIFEST.MF">
			<fileset dir="${dir.dist.classes.osgi}"></fileset>
		</jar>
	</target>
	
	<target name="compiletestsosgi">
		<delete dir="${dir.dist.classes.osgi.test}"/>
		<mkdir dir="${dir.dist.classes.osgi.test}"/>
		<mkdir dir="${dir.dist.classes.osgi.test.lib}"/>
		<copy todir="${dir.dist.classes.osgi.test.lib}" file="${file.db4ounit.jar}"/>
		<jar destfile="${dir.dist.classes.osgi.test.lib}/${filename.osgi.testlib.jar}">
			<fileset dir="${dir.dist.classes.test.jdk1.2}">
				<include name="**/*" />
			</fileset>
		</jar>
		<jar destfile="${dir.dist.classes.osgi.test.lib}/${filename.osgi.testnqlib.jar}">
			<fileset dir="${dir.dist.classes.test.nq}"></fileset>
		</jar>
	
		<javac destdir="${dir.dist.classes.osgi.test}" fork="true" debug="on" encoding="UTF-8" target="1.2" source="1.2">
			<classpath>
				<pathelement path="${file.db4ounit.jar}" />
				<pathelement path="${file.java1.2.jar}" />
				<pathelement path="${file.osgi.jar}" />
				<pathelement path="${dir.dist.classes.osgi.test.lib}/${filename.osgi.testlib.jar}" />
				<pathelement path="${dir.dist.classes.osgi.test.lib}/${filename.osgi.testnqlib.jar}" />
				<fileset dir="${dir.build.lib}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<src path="${dir.osgi.test.src}"/>
		</javac>
		<copy tofile="${dir.dist.classes.osgi.test}/build.properties" file="${dir.osgi.test}/build.properties.TM" overwrite="true">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.dotted}"/>
			</filterset>
		</copy>
		<copy tofile="${dir.dist.classes.osgi.test}/META-INF/MANIFEST.MF" file="${file.osgi.test.manifest}.TM" overwrite="true">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.dotted}"/>
				<filter token="bundle.activator" value="com.db4o.osgi.test.Db4oTestActivator"/>
			</filterset>
		</copy>
		<jar destfile="${file.osgi.test.jar}" manifest="${dir.dist.classes.osgi.test}/META-INF/MANIFEST.MF">
			<fileset dir="${dir.dist.classes.osgi.test}"></fileset>
		</jar>
	</target>
	
	<target name="runosgitests" depends="prepare-test-environment">
		<delete dir="${dir.test.osgi}"/>
		<mkdir dir="${dir.test.osgi}"/>
		<mkdir dir="${dir.test.osgi.conf}"/>
		<copy tofile="${file.test.osgi.conf}" file="${file.osgi}"/>
		<copy tofile="${dir.test.osgi}/db4o-osgi-test.jar" file="${file.osgi.test.jar}"/>
		<copy tofile="${dir.test.osgi}/db4o-osgi-edition.jar" file="${file.osgi.jar}"/>
		
		<java 
				classname="com.db4o.osgi.test.launch.TestLauncher" 
				fork="true" 
				jvm="${file.jvm.cdc_fp}" 
				failonerror="true" 
				timeout="1800000">
			<!-- TODO extract reference to build classpath in common.xml -->
			<classpath>
				<dirset dir="${dir.build.bin}"/>
				<fileset dir="${dir.build.lib}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Dosgi.configuration.area=${dir.test.osgi.conf}"/>
			<jvmarg value="-Dosgi.instance.area=${dir.test.osgi}/data"/>
			<arg value="${dir.test.osgi}/db4o-osgi-edition.jar" />
			<arg value="${dir.test.osgi}/db4o-osgi-test.jar" />
		</java>
	</target>

	<target name="compiletestsjava" depends="compilecorejava, compiledb4ounitjava" description="Compile db4o test sources">
		<mkdir dir="${dir.dist.classes.test.jdk1.1}" />
		<mkdir dir="${dir.dist.classes.test.jdk1.2}" />
		<mkdir dir="${dir.dist.classes.test.jdk1.5}" />
		<mkdir dir="${dir.dist.classes.test.nq}" />
        
		<copy todir="${dir.dist.java.temp.src.test}" overwrite="true">
			<fileset dir="${dir.j.tests.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<javac executable="${file.compiler.jdk1.3}" 
            destdir="${dir.dist.classes.test.jdk1.1}" 
            fork="true" 
            debug="on" 
            encoding="UTF-8">
			<classpath>
				<pathelement location="${file.java1.1.jar}" />
				<pathelement location="${file.db4ounit.jar}" />
			</classpath>
			<src path="${dir.dist.java.temp.src.test}"/>
			<src path="${dir.j.tools.src}" />
		</javac>
		<copy todir="${dir.dist.classes.test.jdk1.1}" overwrite="true">
			<fileset dir="${dir.j.tests.src}">
				<include name="**/*.yap" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.temp.src.test}" overwrite="true">
			<fileset dir="${dir.j.jdk1.2.test.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<javac destdir="${dir.dist.classes.test.jdk1.2}" fork="true" debug="on" target="1.2" source="1.2" encoding="UTF-8">
			<classpath>
				<pathelement location="${file.java1.2.jar}" />
				<pathelement location="${file.db4ounit.jar}" />
			</classpath>
			<src path="${dir.dist.java.temp.src.test}"/>
			<src path="${dir.j.tools.src}" />
		</javac>
		<copy todir="${dir.dist.classes.test.jdk1.2}" overwrite="true">
			<fileset dir="${dir.j.tests.src}">
				<include name="**/*.yap" />
			</fileset>
		</copy>
        
		<copy todir="${dir.dist.java.temp.src.test}" overwrite="true">
			<fileset dir="${dir.j.jdk5.test.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<javac destdir="${dir.dist.classes.test.jdk1.5}" fork="true" debug="on" target="1.5" source="1.5" encoding="UTF-8">
			<classpath>
				<pathelement location="${file.java5.jar}" />
				<pathelement location="${file.db4ounit.jar}" />
			</classpath>
			<src path="${dir.dist.java.temp.src.test}"/>
			<src path="${dir.j.tools.src}" />
		</javac>
		<copy todir="${dir.dist.classes.test.jdk1.5}" overwrite="true">
			<fileset dir="${dir.j.tests.src}">
				<include name="**/*.yap" />
			</fileset>
		</copy>
		<javac
			destdir="${dir.dist.classes.test.nq}"
			fork="true" debug="on" target="1.4" source="1.4" encoding="UTF-8">
			<classpath>
				<pathelement location="${file.java1.2.jar}" />
				<pathelement location="${file.nqopt.jar}" />
				<pathelement location="${file.bloat.jar}" />
				<pathelement location="${file.db4otools.jar}" />
				<pathelement location="${file.db4ounit.jar}" />
			</classpath>
			<src path="${dir.j.tests.src}"/>
			<src path="${dir.j.tools.src}" />
			<src path="${dir.j.nqopt}/test/src" />
		</javac>
	</target>

	<target name="compilejtutorial" description="Compile Db4o Java tutorial sources">
		<mkdir dir="${dir.dist.classes.tutorial}" />
		<javac fork="true" 
            srcdir="${dir.j.tutorial.src}" 
            destdir="${dir.dist.classes.tutorial}" 
            classpath="${file.java1.2.jar}" 
            target="1.3" 
            source="1.3" 
            debug="on" 
            encoding="UTF-8" />
	</target>
	
	<target name="preparendoc">
		<property name="db4o-namespace-summaries.xml" location="config/db4o-namespace-summaries.xml" />		
		<property name="ndoc.home" location="lib/ndoc" />
				
		<delete dir="${dir.dist.ndoc}" />
		<mkdir dir="${dir.dist.ndoc}" />
	</target>
	
	<target name="ndocmono" depends="preparendoc" description="Builds public .net docs for the mono platform">
		<exec executable="mono" failonerror="true">
			<arg file="${ndoc.home}/bin/${mono.ndoc.executable}" />
			<arg value="${file.dll.mono}" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-documenter=MSDN" />
			<arg value="-OutputTarget=Web" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2005  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-CleanIntermediates=True" />
		</exec>
	</target>
	
	<!-- for debugging purposes only -->
	<target name="ndoc-net2" depends="configure-net2, realndoc" />
	
	<target name="ndoc" depends="preparendoc">
	</target>
	
	<target name="realndoc" depends="preparendoc" description="Build public .net docs">		
		<exec executable="${ndoc.home}/bin/net/${target.framework.version}/NDocConsole.exe">
			<arg value="${file.dll.net}" />
			<arg value="-documenter=MSDN 2003" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-HtmlHelpName=db4o" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2005  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-IncludeFavorites=True" />			
		</exec>
	</target>
		
	<target name="vsdoc" depends="ndoc" description="Build VS.NET 2003 integrated docs">
		<exec executable="${ndoc.home}/bin/net/${target.framework.version}/NDocConsole.exe">
			<arg value="${file.dll.net}" />
			<arg value="-namespacesummaries=${db4o-namespace-summaries.xml}" />
			<arg value="-documenter=VS.NET 2003" />
			<arg value="-OutputDirectory=${dir.dist.ndoc}" />
			<arg value="-BuildSeparateIndexFile=false" />
			<arg value="-CollectionNamespace=com.db4o" />
			<arg value="-CreateFullTextIndex=true" />
			<arg value="-GenerateCollectionFiles=true" />
			<arg value="-HtmlHelpName=db4o" />
			<arg value="-IncludeDefaultStopWordList=true" />
			<arg value="-LinkToSdkDocVersion=1.1" />
			<arg value="-PlugInNamespace=ms.vscc" />
			<arg value="-RegisterTitleWithNamespace=true" />
			<arg value="-Title=db4o" />
			<arg value="-SkipNamespacesWithoutSummaries=True" />
			<arg value="-SdkLinksOnWeb=False" />
            <arg value="-AssemblyVersionInfo=AssemblyVersion" />
			<arg value="-CopyrightText=Copyright (C) 2004 - 2005  db4objects Inc." />
            <arg value="-CopyrightHref=http://www.db4o.com/" />
			<arg value="-IncludeFavorites=True" />
			<!--
            <property name="Preliminary" value="True" />
            <property name="CleanIntermediates" value="True" />
            -->
		</exec>
	</target>
	
	<target name="install-vsdoc" depends="vsdoc" description="Register the VS.NET 2003 integrated docs">
		<property name="h2reg.exe" location="lib/h2reg/h2reg.exe" />
		<property name="h2reg.cmdfile" location="${dir.dist.ndoc}/db4oCollection.h2reg.ini" />
		<exec executable="${h2reg.exe}">
			<arg value="-r" />
			<arg value="CmdFile=${h2reg.cmdfile}" />
		</exec>
	</target>
	
	<target name="uninstall-vsdoc" depends="vsdoc" description="Unregister the VS.NET 2003 integrated docs">
		<property name="h2reg.exe" location="lib/h2reg/h2reg.exe" />
		<property name="h2reg.cmdfile" location="${dir.dist.ndoc}/db4oCollection.h2reg.ini" />
		<exec executable="${h2reg.exe}">
			<arg value="-u" />
			<arg value="CmdFile=${h2reg.cmdfile}" />
		</exec>
	</target>

	<target name="javadoc" depends="init" description="Build public javadocs">
		<javadoc classpath="" 
            access="public" 
            windowtitle="db4o - database for objects - documentation" 
            header="db4o ${db4o.version.dotted}" 
            destdir="${dir.dist.doc.api}">
			<bottom><![CDATA[<i>Copyright 2007 db4objects Inc. All rights reserved.</i>]]></bottom>
			<fileset dir="${dir.dist.java.temp.src.core}" includes="com/db4o/**/*.java">
				<exclude name="com/db4o/cs/**/*.java" />
				<exclude name="com/db4o/internal/**/*.java" />
				<exclude name="com/db4o/foundation/**/*.java" />
				<not>
					<contains text="* @exclude" />
				</not>
			</fileset>
			<fileset dir="${dir.j.tools.src}" includes="com/db4o/**/*.java">
				<not>
					<contains text="* @exclude" />
				</not>
			</fileset>
			<fileset dir="${dir.osgi.src}" includes="com/db4o/**/*.java"/>
			<group title="Core Engine" packages="com.db4o" />
			<group title="Query Functionality" packages="com.db4o.query" />
			<group title="Configuration Features" packages="com.db4o.config" />
			<group title="Extended Functionality" packages="com.db4o.ext" />
			<group title="Messaging" packages="com.db4o.messaging" />
			<group title="Reflection" packages="com.db4o.reflect" />
			<group title="Tools" packages="com.db4o.tools" />
			<group title="Types" packages="com.db4o.types" />
		</javadoc>
		<copy file="${javadoc.stylesheet}" todir="${dir.dist.doc.api}" overwrite="true" />
        
        <javadoc classpath="" 
            access="public" 
            windowtitle="db4o - database for objects - documentation" 
            header="db4o ${db4o.version.dotted}" 
            destdir="${dir.dist.doc.osgi}">
        	<bottom><![CDATA[<i>Copyright 2007 db4objects Inc. All rights reserved.</i>]]></bottom>
            <fileset dir="${dir.osgi.src}" includes="com/db4o/**/*.java"/>
            <group title="OSGi Services" packages="com.db4o.osgi" />
        </javadoc>
        
        <copy file="${javadoc.stylesheet}" todir="${dir.dist.doc.osgi}" overwrite="true" />
	</target>

    <target name="compile.java.all" depends="clean.java, compilecorejava, compiletestsjava, compileosgijava, compiletestsosgi" />
	
	<target name="prepare-test-environment" depends="compile.java.all">
		<path id="tests.java1.1.cp">
            <pathelement path="${dir.dist.classes.test.jdk1.1}" />
			<pathelement location="${file.java1.1.jar}" />
            <pathelement path="${file.db4ounit.jar}" />
			<pathelement location="${path.classpath.jdk1.1}" />
        </path>
		        
        <path id="tests.java1.2.cp">
            <pathelement path="${dir.dist.classes.test.jdk1.2}" />
            <pathelement location="${file.java1.2.jar}" />
			<pathelement location="${file.db4ounit.jar}" />
        </path>
		        
        <copy todir=".">
            <fileset dir="${dir.j.jdk1.2}">
				<include name="test/db4oVersions/**/*" />
			</fileset>
        </copy>
	</target>
	
	<target name="runtestsjava1.1" depends="prepare-test-environment">
		<echo message="Running com.db4o.db4ounit.jre11.AllTests on jvm ${file.jvm.jdk1.1}" />
		<java jvm="${file.jvm.jdk1.1}" fork="true" classname="com.db4o.db4ounit.jre11.AllTests" failonerror="true" timeout="1200000">
			<classpath refid="tests.java1.1.cp" />
		</java>

		<java jvm="${file.jvm.jdk1.1}" fork="true" classname="com.db4o.test.AllTests" failonerror="true" timeout="1200000">
			<classpath refid="tests.java1.1.cp" />
			<arg value="-withExceptions" />
		</java>
	</target>
	
	<target name="runtestsjava1.3" depends="prepare-test-environment">
		<echo message="Running com.db4o.db4ounit.jre12.AllTestsJdk1_2 on jvm ${file.jvm.jdk1.3}" />
		<java jvm="${file.jvm.jdk1.3}" fork="true" classname="com.db4o.db4ounit.jre12.AllTestsJdk1_2" failonerror="true" timeout="1200000">
			<classpath refid="tests.java1.2.cp" />
			<sysproperty key="db4oj.tests.bin" value="${dir.dist.classes.test.jdk1.2}" />
			<sysproperty key="db4o.archives.path" value="${dir.workspace}/db4o.archives/java1.2/" />
		</java>
        
		<java jvm="${file.jvm.jdk1.3}" fork="true" classname="com.db4o.test.AllTestsJdk1_2" failonerror="true" timeout="3600000">
			<classpath refid="tests.java1.2.cp" />
			<arg value="-withExceptions" />
		</java>
	</target>   
    
	<target name="runtestsjava"
		depends="runtestsjava1.1, runtestsjava1.3, runtestsjava5, runosgitests, runconcurrencytests"
		description="Run db4o AllTests">
	</target>
    
    <target name="runtestsjava5" depends="prepare-test-environment">
        <path id="tests.java5.cp">
            <pathelement path="${dir.dist.classes.test.jdk1.5}" />
            <pathelement location="${file.java5.jar}" />
			<pathelement location="${file.db4ounit.jar}" />
        </path>
        <path id="tests.java1.2.cp">
            <pathelement path="${dir.dist.classes.test.jdk1.2}" />
            <pathelement location="${file.java1.2.jar}" />
			<pathelement location="${file.db4ounit.jar}" />
        </path>
        <echo message="Running tests on jvm ${file.jvm.jdk1.5}" />
		<java jvm="${file.jvm.jdk1.5}" fork="true" classname="com.db4o.db4ounit.jre5.AllTestsDb4oUnitJdk5" failonerror="true" timeout="10000000">
			<jvmarg value="-Xmx512m"/>
			<classpath refid="tests.java5.cp" />
		</java>
    	<!-- TODO This is not jdk5. Move? -->
		<java jvm="${file.jvm.jdk1.5}" fork="true" classname="com.db4o.test.nativequery.AllTestsNQ" failonerror="true" timeout="320000">
			<classpath>
				<pathelement location="${dir.dist.classes.test.nq}" />
                <pathelement location="${file.nqopt.jar}" />
				<pathelement location="${file.bloat.jar}" />
				<pathelement location="${file.db4otools.jar}" />
                <path refid="tests.java1.2.cp" />
			</classpath>
		</java>
        <java jvm="${file.jvm.jdk1.5}" fork="true" classname="com.db4o.test.AllTestsJdk5" failonerror="true" timeout="3600000">
			<classpath refid="tests.java5.cp" />
			<arg value="-withExceptions" />
		</java>
		<java jvm="${file.jvm.jdk1.5}" fork="true" classname="com.db4o.db4ounit.jre5.defrag.RunTestsDefrag" failonerror="true" timeout="3000000">
			<classpath refid="tests.java5.cp" />
		</java>
		<java jvm="${file.jvm.jdk1.5}" fork="true" classname="com.db4o.test.AllTestsLegacy" failonerror="true" timeout="3600000">
			<classpath refid="tests.java5.cp" />
			<arg value="-withExceptions" />
		</java>
    </target>
    
    <target name="runconcurrencytests" depends="prepare-test-environment">
        <java jvm="${file.jvm.jdk1.1}" fork="true" classname="com.db4o.db4ounit.jre11.concurrency.AllTests" failonerror="true" timeout="1200000">
			<classpath>
				<pathelement path="${dir.dist.classes.test.jdk1.1}" />
				<pathelement location="${file.java1.1.jar}" />
                <pathelement path="${file.db4ounit.jar}" />
				<pathelement location="${path.classpath.jdk1.1}" />
			</classpath>
            <jvmarg line="-ms32m -mx64m " />
		</java>
        
        <java jvm="${file.jvm.jdk1.5}" fork="true" classname="com.db4o.db4ounit.jre5.AllTestsConcurrency" failonerror="true" timeout="3600000">
			<classpath>
				<pathelement path="${dir.dist.classes.test.jdk1.5}" />
                <pathelement location="${file.java5.jar}" />
                <pathelement location="${file.db4ounit.jar}" />
			</classpath>
			<arg value="-withExceptions" />
		</java>
        
    </target>

	<target name="zipjavasrc" depends="javadoc">
		<copy todir="${dir.dist.java.src}/${name.project.db4ounit}">
			<fileset dir="${dir.db4ounit}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="src/**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.j}">
			<fileset dir="${dir.j}">
				<include name=".project" />
				<include name=".classpath" />
				<!-- include name="build.xml" / -->
				<include name="**/src/**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.db4ounit.extensions}">
			<fileset dir="${dir.db4ounit.extensions}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="src/**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.j.tests}">
			<fileset dir="${dir.j.tests}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="src/**/*.java" />
				<include name="src/**/*.yap" />
				<include name="test/**/*.*" />
				<exclude name="test/db4oVersions/*.yap" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.jdk1.2}">
			<fileset dir="${dir.j.jdk1.2}">
				<include name=".project" />
				<include name=".classpath" />
				<!-- include name="build.xml" / -->
				<include name="**/src/**/*.java" />
				<include name="**/src/**/*.yap" />
				<include name="test/db4oVersions/*.*" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.jdk5}">
			<fileset dir="${dir.j.jdk5}">
				<include name=".project" />
				<include name=".classpath" />
				<!-- include name="build.xml" / -->
				<include name="**/src/**/*.java" />
				<include name="**/src/**/*.yap" />
				<include name="test/db4oVersions/*.*" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.bloat}">
			<fileset dir="${dir.bloat}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="src/**" />
				<exclude name="**/CVS/**" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.j.db4otools}">
			<fileset dir="${dir.j.db4otools}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="src/**" />
				<exclude name="**/CVS/**" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.nqopt}">
			<fileset dir="${dir.j.nqopt}">
				<include name=".project" />
				<include name=".classpath" />
				<!-- include name="build.xml" / -->
				<include name="**/src/**/*.java" />
				<include name="**/src/**/*.txt" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.ta}">
			<fileset dir="${dir.ta}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
				<include name="**/test/**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.taj}">
			<fileset dir="${dir.taj}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
				<include name="**/test/**/*.java" />
				<include name="*.html" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.osgi}">
			<fileset dir="${dir.osgi}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
			</fileset>
			<fileset dir="${dir.dist.classes.osgi}">
				<include name="**/lib/**/*.jar" /> 
		  	</fileset>
		</copy>
		<copy tofile="${dir.dist.java.src}/${name.project.osgi}/build.properties" file="${dir.osgi}/build.properties.TM">
			<filterset>
				<filter token="db4o.version.dotted" value="${db4o.version.dotted}"/>
			</filterset>
		</copy>
		<copy tofile="${dir.dist.java.src}/${name.project.osgi}/META-INF/MANIFEST.MF" file="${file.osgi.manifest}.TM">
			<filterset>
				<filter token="db4o.version.dotted" value="${db4o.version.dotted}"/>
			</filterset>
		</copy>
	
		<copy todir="${dir.dist.java.src}/${name.project.osgi.test}">
			<fileset dir="${dir.osgi.test}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
			</fileset>
			<fileset dir="${dir.dist.classes.osgi.test}">
				<include name="**/lib/**/*.jar" /> 
		  	</fileset>
		</copy>
		<copy tofile="${dir.dist.java.src}/${name.project.osgi.test}/build.properties" file="${dir.osgi.test}/build.properties.TM">
			<filterset>
				<filter token="db4o.version.dotted" value="${db4o.version.dotted}"/>
			</filterset>
		</copy>
		<copy tofile="${dir.dist.java.src}/${name.project.osgi.test}/META-INF/MANIFEST.MF" file="${file.osgi.test.manifest}.TM">
			<filterset>
				<filter token="db4o.version.dotted" value="${db4o.version.dotted}"/>
				<filter token="bundle.activator" value="com.db4o.osgi.test.Db4oWorkspaceActivator"/>
			</filterset>
		</copy>
		<filehead beforePattern="package" header="${content.gplheader}" >
			<sources dir="${dir.dist.java.src}">
				<include name="**/*.java" />
			</sources>
		</filehead>
	</target>

	<target name="zipjava" depends="zipjavasrc, init" description="Zip Java distribution">
		<copy todir="${dir.dist.java.build.tutorial}">
			<fileset dir="${dir.j.tutorial.out.java}">
				<include name="**/**" />
			</fileset>
			<fileset dir="${dir.j.tutorial}">
				<include name="src/**/*.java" />
			</fileset>
		</copy>

		<copy todir="${dir.dist.java.build}">
			<fileset dir="${dir.dist}" includes="doc/**" />
			<fileset dir="${dir.dist.java}" includes="lib/**" />
			<fileset dir="${dir.dist.java}" includes="src/**" />
			<fileset dir="${dir.j}" includes="${filename.db4o.license}" />
		</copy>
		<!-- readme's in distribution folders-->
		<copy file="${dir.config}/readme.html" tofile="${dir.dist.java.build}/readme.html" >
	        <filterchain>	
	           <striplinecomments>
	              <comment value="!"/>
	           </striplinecomments>
	           <replacetokens>
	                <token key="db4o.version.dotted" value="${db4o.version.dotted}"/>
	            </replacetokens>
	        </filterchain>
	    </copy>
		
		<copy file="${dir.config}/java_doc_readme.html" tofile="${dir.dist.java.build}/doc/readme.html" />
		<copy file="${dir.config}/java_src_readme.html" tofile="${dir.dist.java.build}/src/readme.html" />
		<copy file="${dir.config}/java_lib_readme.html" tofile="${dir.dist.java.build}/lib/readme.html" >
		        <filterchain>	
		           <striplinecomments>
		              <comment value="!"/>
		           </striplinecomments>
		           <replacetokens>
		                <token key="db4o.version.dotted" value="${db4o.version.dotted}"/>
		            </replacetokens>
		        </filterchain>
		    </copy>
		<copy file="${dir.taj}/db4ota.readme.html" todir="${dir.dist.java.build}/lib" />
		
		<mkdir dir="${dir.dist.java.build}/doc/reference" />
		<copy todir="${dir.dist.java.build}/doc/reference">
			<fileset dir="../docWiki/java">
				<include name="**/**" />
			</fileset>
		</copy>
		
		<zip destfile="${file.dist.java}">
			<fileset dir="${dir.dist.java}" includes="${folder.build}/**" />
		</zip>
	</target>

	<target name="configure-net1.1">

		<property name="target.framework.version" value="1.1" />
			
		<property name="csc.executable.path.net1" location="${env.SystemRoot}/Microsoft.NET/Framework/v1.1.4322" />
		<property name="csc.executable.net1" location="${csc.executable.path.net1}/csc.exe" />
		<property name="csc.executable" location="${csc.executable.net1}" />
		
		<available property="csc.executable.available" file="${csc.executable}"></available>
		<fail unless="csc.executable.available">
		.net 1.1 c# compiler not found at '${csc.executable.path.net1}', please configure your machine.properties by setting the property 'csc.executable.path.net1' accordingly.
		</fail>
		
		<property name="csharp.defines" value="NET" />
		
		<property name="csharp.defines.cf" value="CF_1_0" />		
		<property name="dir.dll.wince" value="${dir.compactframework}v1.0/WindowsCE/" />
			
		<property name="installer.package.guid" value="${installer.package.guid.net1}" />
		<property name="installer.upgrade.guid" value="${installer.upgrade.guid.net1}" />
		<property name="installer.package.suffix" value="net" />
	</target>	
	
	<target name="configure-net2">
		
		<property name="target.framework.version" value="2.0" />
		
		<property name="csc.executable.path.net2" location="${env.SystemRoot}/Microsoft.NET/Framework/v2.0.50727" />
		<property name="csc.executable.net2" location="${csc.executable.path.net2}/csc.exe" />
		<property name="csc.executable" location="${csc.executable.net2}" />
		
		<property name="csharp.defines" value="NET_2_0" />
		<property name="csharp.defines.cf" value="CF_2_0" />		
		<property name="dir.dll.wince" value="${dir.compactframework}v2.0/WindowsCE/" />
		
		<property name="installer.package.suffix" value="net2" />
		<property name="installer.package.guid" value="${installer.package.guid.net2}" />
		<property name="installer.upgrade.guid" value="${installer.upgrade.guid.net2}" />
	</target>
	
	<target name="prepare-conversion-workspace" depends="init">
		<delete dir="${target.dir}" />
		<mkdir dir="${target.dir}" />
		
		<copy todir="${target.dir}">
			<fileset dir="..">
				<include name="db4oj/core/src/**/*.java" />
			</fileset>
		</copy>
		
		<!-- shared native query support -->
		<copy todir="${target.dir}/db4oj">
			<fileset dir="../db4onqopt">
				<include name="core/src/com/db4o/nativequery/expr/**/*.java" />
				<!-- TODO: move to dedicated package, create shared reference for call in build-dotnet.xml -->
				<include name="core/src/com/db4o/nativequery/NativeClassFactory.java" />
				<include name="core/src/com/db4o/nativequery/DefaultNativeClassFactory.java" />
				<include name="core/src/com/db4o/nativequery/optimization/SODAQueryBuilder.java" />
				<include name="core/src/com/db4o/nativequery/optimization/ComparisonQueryGeneratingVisitor.java" />
				<include name="core/src/com/db4o/nativequery/optimization/ReflectUtil.java" />
			</fileset>
		</copy>
		
		<copy todir="${target.dir}/db4oj/core/src" overwrite="true">
			<fileset dir="../db4on/in/java">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="copy-sharpened-files">
		<copy todir="${target.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.cs" />
				<exclude name="com/db4o/handlers/*.*" />
				<exclude name="com/db4o/reflect/jdk/**/*.*" />
				<exclude name="com/db4o/JDK_*.cs" />
				<exclude name="com/db4o/JDKReflect*.cs" />
				<exclude name="com/db4o/reflect/self/*.*" />
			</fileset>
		</copy>
	</target>	
	
	<target name="sharpen-db4ounit">
		<ant antfile="build-db4ounit.xml" target="buildnet" inheritall="false">
			<property name="csc.executable" value="${csc.executable}" />
		</ant>
	</target>	

	<target name="doctor" depends="init, compilejtutorial" description="Run all doctor tasks">
		<ant antfile="run-doctor.xml" />
	</target>

	<target name="buildjava" depends="runtestsjava, doctor, zipjava" description="Full java build" />

	<target name="buildnet">
		<ant antfile="build-dotnet.xml" target="package-net1" />
	</target>

	<target name="buildnet2">
		<ant antfile="build-java.xml" target="doctor"/>
		<ant antfile="build-dotnet.xml" target="package" />
	</target>	

	<target name="buildmono2" depends="compile.java.all">
		<ant antfile="build-dotnet.xml" target="package" />
	</target>

	<target name="buildall" depends="clean, buildjava, buildnet" description="Full clean build" />
	
	<target name="buildall2" depends="clean, buildjava, buildnet2" description="Full clean build (.net 2 runtime)" />

    <target name="build-java-before-checkin" depends="clean, runtestsjava5" />

    <target name="build-net-before-checkin">
        <ant antfile="build-dotnet.xml" target="run-tests">
        	<property name="skip.java.compilation" value="true" />
        </ant>
    </target>

    <target name="build-before-checkin" depends="prepare-test-environment,build-net-before-checkin" />
</project>
