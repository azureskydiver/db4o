<?xml version="1.0"?>
<project name="build db4o java">
	
	<import file="common.xml" />
	
	<target name="db4oj.properties" depends="properties">
		<property name="java.src.core" value="${dir.dist.java}/src/core"/>
		<property name="java.src.core.jdk1.1" value="${java.src.core}/jdk1.1"/>
		<property name="java.src.core.jdk1.2" value="${java.src.core}/jdk1.2"/>
		<property name="java.src.core.jdk5" value="${java.src.core}/jdk5"/>
		
		<property name="java.src.tests" value="${dir.dist.java}/src/tests" />
		<property name="java.src.tests.jdk1.1" value="${java.src.tests}/jdk1.1" />
		<property name="java.src.tests.jdk1.2" value="${java.src.tests}/jdk1.2" />
		<property name="java.src.tests.jdk5" value="${java.src.tests}/jdk5" />
	</target>
	
	<target name="init" depends="db4oj.properties">
		<mkdir dir="${dir.dist.java}" />
		<mkdir dir="${dir.dist.jars}" />
		<loadfile property="content.gplheader" srcfile="${file.gplheader}" encoding="iso-8859-1" />
		<versioninfo path="${dir.j.core.src}/com/db4o"  
			major="${db4o.version.major}" 
			minor="${db4o.version.minor}"
			iteration="${db4o.iteration}"
			revision="${svn.revision}"
		/>
	</target>
		
	<target name="clean">
		<delete dir="${dir.dist.java}" />
		<delete >
			<fileset dir="${dir.dist}">
				<include name="db4o-*-java.zip" />
			</fileset>
		</delete>
	</target>
	
	<!--Build java core-->
	
	<target name="build.db4ojava" 
		depends="build.db4ojdk1.1, 
			build.db4ojdk1.2, 
			build.db4ojdk5, 
			build.db4otools, 
			build.nqopt,
			build.ta,
			build.osgi" 
	/>
	
	<target name="build.db4ojdk1.1" depends="init">
		<mkdir dir="${java.src.core.jdk1.1}" />
		<copy todir="${java.src.core.jdk1.1}">
			<fileset dir="${dir.j.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		
		<mkdir dir="${dir.dist.classes.java1.1}" />
		<javac compiler="classic"
			fork="yes"
			executable="${file.compiler.jdk1.3}"
			srcdir="${java.src.core.jdk1.1}"
			destdir="${dir.dist.classes.java1.1}" debug="${javac.debug.mode}">
			<compilerarg line="${file.compiler.jdk1.3.args.line}"/>
		</javac>
		
		<jar destfile="${file.java1.1.jar}">
			<fileset dir="${dir.dist.classes.java1.1}" />
		</jar>
	</target>
	
	<target name="build.db4ojdk1.2" depends="init">
		<mkdir dir="${java.src.core.jdk1.2}" />
		<copy todir="${java.src.core.jdk1.2}">
			<fileset dir="${dir.j.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		
		<copy todir="${java.src.core.jdk1.2}" overwrite="true">
			<fileset dir="${dir.j.jdk1.2.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		
        <mkdir dir="${dir.dist.classes.java1.2}" />
		<javac srcdir="${java.src.core.jdk1.2}" 
            fork="true" 
            destdir="${dir.dist.classes.java1.2}" 
            debug="${javac.debug.mode}" 
            target="1.2" 
            source="1.2" 
            encoding="UTF-8" />

		<jar destfile="${file.java1.2.jar}">
			<fileset dir="${dir.dist.classes.java1.2}" />
		</jar>

	</target>
	
	<target name="build.db4ojdk5" depends="init">
		<mkdir dir="${java.src.core.jdk5}" />
		<copy todir="${java.src.core.jdk5}">
			<fileset dir="${dir.j.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		
		<copy todir="${java.src.core.jdk5}" overwrite="true">
			<fileset dir="${dir.j.jdk1.2.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<copy todir="${java.src.core.jdk5}" overwrite="true">
			<fileset dir="${dir.j.jdk5.core.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		
        <mkdir dir="${dir.dist.classes.java5}" />
		<javac srcdir="${java.src.core.jdk5}" 
            fork="true" 
            destdir="${dir.dist.classes.java5}" 
            debug="${javac.debug.mode}" 
            target="1.5" 
            source="1.5" 
            encoding="UTF-8" />
		
		<jar destfile="${file.java5.jar}">
			<fileset dir="${dir.dist.classes.java5}" />
		</jar>
	</target>
	
	<target name="build.db4otools" depends="build.db4ojdk1.2">
	    <mkdir dir="${dir.dist.classes.db4otools}" />
		<javac srcdir="${dir.j.db4otools.src}" 
	        fork="true" 
	        destdir="${dir.dist.classes.db4otools}" 
	        debug="${javac.debug.mode}" 
	        target="1.4" 
	        source="1.4" 
	        encoding="UTF-8">
			<classpath>
				<pathelement path="${file.java1.2.jar}"/>
				<pathelement path="${file.bloat.jar}"/>
			</classpath>
		</javac>
		<jar destfile="${file.db4otools.jar}">
			<fileset dir="${dir.dist.classes.db4otools}" />
			<manifest>
				<attribute name="Class-Path" value="${filename.bloat.jar} ${filename.java1.2.jar}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="build.nqopt" depends="build.db4ojdk1.2, build.db4otools">
        <mkdir dir="${dir.dist.classes.nqopt}" />
		<javac srcdir="${dir.j.nqopt.src}" 
            fork="true" 
            destdir="${dir.dist.classes.nqopt}" 
            debug="${javac.debug.mode}" 
            target="1.2" 
            source="1.2" 
            encoding="UTF-8">
			<exclude name="**/j2me/**"/>
			<classpath>
				<pathelement path="${file.java1.2.jar}"/>
				<pathelement path="${file.bloat.jar}"/>
				<pathelement path="${file.db4otools.jar}"/>
				<pathelement path="${file.ant.jar}"/>
			</classpath>
		</javac>
		<jar destfile="${file.nqopt.jar}">
			<fileset dir="${dir.dist.classes.nqopt}" />
			<manifest>
				<attribute name="Class-Path" value="${filename.bloat.jar} ${filename.db4otools.jar} ${filename.ant.jar} ${filename.java1.2.jar}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="build.ta" depends="build.db4ojdk1.2, build.db4otools" >
        <mkdir dir="${dir.dist.classes.taj}" />
		<javac fork="true" 
            destdir="${dir.dist.classes.taj}" 
            debug="${javac.debug.mode}" 
            target="1.2" 
            source="1.2" 
            encoding="UTF-8">
            <src path="${dir.ta.src}" />
            <src path="${dir.taj.src}" />
			<classpath>
				<pathelement path="${file.java1.2.jar}"/>
                <pathelement path="${file.bloat.jar}"/>
			    <pathelement path="${file.db4otools.jar}"/>
				<pathelement location="${dir.dist.classes.test.jdk1.2}" />
			</classpath>
		</javac>
		
		<jar destfile="${file.ta.jar}">
			<fileset dir="${dir.dist.classes.taj}" />
			<manifest>
				<attribute name="Class-Path" value="${filename.bloat.jar} ${filename.db4otools.jar} ${filename.java1.2.jar}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="build.osgi" depends="build.nqopt">
		<delete dir="${dir.dist.classes.osgi}"/>
		<delete dir="${dir.dist.classes.osgi.lib}"/>
		<mkdir dir="${dir.dist.classes.osgi}"/>
		<mkdir dir="${dir.dist.classes.osgi.lib}"/>
		<copy todir="${dir.dist.classes.osgi.lib}" file="${file.java1.2.jar}"/>
		<copy todir="${dir.dist.classes.osgi.lib}" file="${file.nqopt.jar}"/>
		<copy todir="${dir.dist.classes.osgi.lib}" file="${file.bloat.jar}"/>
		<copy todir="${dir.dist.classes.osgi.lib}" file="${file.db4otools.jar}"/>
		<javac destdir="${dir.dist.classes.osgi}" fork="true" debug="on" encoding="UTF-8" target="1.2" source="1.2">
			<classpath>
				<fileset dir="${dir.build.lib}">
					<include name="*.jar" />
				</fileset>
				<pathelement location="${file.java1.2.jar}"/>
			</classpath>
			<src path="${dir.osgi.src}"/>
		</javac>
		<copy tofile="${dir.dist.classes.osgi}/build.properties" file="${dir.osgi}/build.properties.TM" overwrite="true">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.iteration.revision}"/>
			</filterset>
		</copy>
		<copy tofile="${dir.dist.classes.osgi}/META-INF/MANIFEST.MF" file="${file.osgi.manifest}.TM" overwrite="true">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.iteration.revision}"/>
			</filterset>
		</copy>
		<jar destfile="${file.osgi.jar}" manifest="${dir.dist.classes.osgi}/META-INF/MANIFEST.MF">
			<fileset dir="${dir.dist.classes.osgi}"></fileset>
		</jar>

	</target>
	
	<target name="build.db4o.collections" depends="build.db4ojdk5, build.ta">
		<mkdir dir="${dir.dist.classes.collections}" />
		<javac srcdir="${dir.collections}/core/src" 
            fork="true" 
            destdir="${dir.dist.classes.collections}" 
            debug="${javac.debug.mode}" 
            target="1.5" 
            source="1.5" 
            encoding="UTF-8">
			<classpath>
				<pathelement location="${file.java5.jar}" />
				<pathelement location="${file.ta.jar}" />
			</classpath>
		</javac>
		
		<jar destfile="${file.collections.jar}">
			<fileset dir="${dir.dist.classes.collections}" />
		</jar>
	</target>
	
	<!-- Compile test -->
	
	<target name="build.db4ojava.tests" 
		depends="build.db4ounit, 
			build.db4ojdk1.1.tests, 
			build.db4ojdk1.2.tests,
			build.db4ojdk5.tests,
			build.nqopt.tests,
			build.osgi.tests,
			build.ta.tests"
	/>
	
	<target name="build.db4ounit" depends="init, build.db4ojdk1.1">
		<mkdir dir="${dir.dist.classes.db4ounit}" />
		<javac destdir="${dir.dist.classes.db4ounit}" 
			fork="true" 
			debug="on" 
			target="1.1" 
			source="1.2" 
			encoding="UTF-8">
			<classpath>
				<pathelement path="${file.java1.1.jar}" />
			</classpath>
			<src path="${dir.db4ounit.src}"/>
			<src path="${dir.db4ounit.extensions.src}" />
		</javac>
		<jar destfile="${file.db4ounit.jar}">
			<fileset dir="${dir.dist.classes.db4ounit}" />
		</jar>
	</target>
	
	<target name="build.db4ojdk1.1.tests" depends="build.db4ojdk1.1, build.db4ounit">
		<mkdir dir="${dir.dist.classes.test.jdk1.1}" />
		<javac executable="${file.compiler.jdk1.3}" 
            destdir="${dir.dist.classes.test.jdk1.1}" 
            fork="true" 
            debug="on" 
            encoding="UTF-8">
			<classpath>
				<pathelement location="${file.java1.1.jar}" />
				<pathelement location="${file.db4ounit.jar}" />
			</classpath>
			<src path="${dir.j.tests.src}"/>
			<src path="${dir.j.tools.src}" />
		</javac>
		<copy todir="${dir.dist.classes.test.jdk1.1}" overwrite="true">
			<fileset dir="${dir.j.tests.src}">
				<include name="**/*.yap" />
			</fileset>
		</copy>
	</target>
	
	<target name="build.db4ojdk1.2.tests" depends="build.db4ojdk1.2, build.db4ounit">
		<mkdir dir="${java.src.tests.jdk1.2}" />
		<copy todir="${java.src.tests.jdk1.2}">
			<fileset dir="${dir.j.tests.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<copy todir="${java.src.tests.jdk1.2}" overwrite="true">
			<fileset dir="${dir.j.jdk1.2.test.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		
		<mkdir dir="${dir.dist.classes.test.jdk1.2}" />
		<javac destdir="${dir.dist.classes.test.jdk1.2}" 
			fork="true" 
			debug="on" 
			target="1.2" 
			source="1.2" 
			encoding="UTF-8">
			<classpath>
				<pathelement location="${file.java1.2.jar}" />
				<pathelement location="${file.db4ounit.jar}" />
			</classpath>
			<src path="${java.src.tests.jdk1.2}"/>
			<src path="${dir.j.tools.src}" />
		</javac>
		<copy todir="${dir.dist.classes.test.jdk1.2}" overwrite="true">
			<fileset dir="${dir.j.tests.src}">
				<include name="**/*.yap" />
			</fileset>
		</copy>
	</target>
	
	<target name="build.db4ojdk5.tests" depends="build.db4ojdk5, build.db4ounit">
		<mkdir dir="${java.src.tests.jdk5}" />
		<copy todir="${java.src.tests.jdk5}">
			<fileset dir="${dir.j.tests.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<copy todir="${java.src.tests.jdk5}" overwrite="true">
			<fileset dir="${dir.j.jdk1.2.test.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<copy todir="${java.src.tests.jdk5}" overwrite="true">
			<fileset dir="${dir.j.jdk5.test.src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		
		<mkdir dir="${dir.dist.classes.test.jdk1.5}" />
		<javac destdir="${dir.dist.classes.test.jdk1.5}" 
			fork="true" 
			debug="on" 
			target="1.5" 
			source="1.5" 
			encoding="UTF-8">
			<classpath>
				<pathelement location="${file.java5.jar}" />
				<pathelement location="${file.db4ounit.jar}" />
			</classpath>
			<src path="${java.src.tests.jdk5}"/>
			<src path="${dir.j.tools.src}" />
		</javac>
		<copy todir="${dir.dist.classes.test.jdk1.5}" overwrite="true">
			<fileset dir="${dir.j.tests.src}">
				<include name="**/*.yap" />
			</fileset>
		</copy>

	</target>
	
	<target name="build.nqopt.tests" depends="build.nqopt, build.db4ounit">
		<mkdir dir="${dir.dist.classes.test.nq}" />
		<javac
			destdir="${dir.dist.classes.test.nq}"
			fork="true" debug="on" target="1.4" source="1.4" encoding="UTF-8">
			<classpath>
				<pathelement location="${file.java1.2.jar}" />
				<pathelement location="${file.nqopt.jar}" />
				<pathelement location="${file.bloat.jar}" />
				<pathelement location="${file.db4otools.jar}" />
				<pathelement location="${file.db4ounit.jar}" />
				<pathelement location="${dir.dist.classes.test.jdk1.2}" />
			</classpath>
			<src path="${dir.j.tests.src}"/>
			<src path="${dir.j.tools.src}" />
			<src path="${dir.j.nqopt}/test/src" />
		</javac>
	</target>
	
	<target name="build.osgi.tests" depends="build.osgi, build.db4ojdk1.2.tests, build.nqopt.tests">
		<delete dir="${dir.dist.classes.osgi.test}"/>
		<mkdir dir="${dir.dist.classes.osgi.test}"/>
		<mkdir dir="${dir.dist.classes.osgi.test.lib}"/>
		<copy todir="${dir.dist.classes.osgi.test.lib}" file="${file.db4ounit.jar}"/>
		<jar destfile="${dir.dist.classes.osgi.test.lib}/${filename.osgi.testlib.jar}">
			<fileset dir="${dir.dist.classes.test.jdk1.2}">
				<include name="**/*" />
			</fileset>
		</jar>
		<jar destfile="${dir.dist.classes.osgi.test.lib}/${filename.osgi.testnqlib.jar}">
			<fileset dir="${dir.dist.classes.test.nq}"></fileset>
		</jar>
	
		<javac destdir="${dir.dist.classes.osgi.test}" fork="true" debug="on" encoding="UTF-8" target="1.2" source="1.2">
			<classpath>
				<pathelement path="${file.db4ounit.jar}" />
				<pathelement path="${file.java1.2.jar}" />
				<pathelement path="${file.osgi.jar}" />
				<pathelement path="${dir.dist.classes.osgi.test.lib}/${filename.osgi.testlib.jar}" />
				<pathelement path="${dir.dist.classes.osgi.test.lib}/${filename.osgi.testnqlib.jar}" />
				<fileset dir="${dir.build.lib}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<src path="${dir.osgi.test.src}"/>
		</javac>
		<copy tofile="${dir.dist.classes.osgi.test}/build.properties" file="${dir.osgi.test}/build.properties.TM" overwrite="true">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.iteration.revision}"/>
			</filterset>
		</copy>
		<copy tofile="${dir.dist.classes.osgi.test}/META-INF/MANIFEST.MF" file="${file.osgi.test.manifest}.TM" overwrite="true">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.iteration.revision}"/>
				<filter token="bundle.activator" value="com.db4o.osgi.test.Db4oTestActivator"/>
			</filterset>
		</copy>
		<jar destfile="${file.osgi.test.jar}" manifest="${dir.dist.classes.osgi.test}/META-INF/MANIFEST.MF">
			<fileset dir="${dir.dist.classes.osgi.test}"></fileset>
		</jar>
	</target>
	
	<target name="build.ta.tests" depends="build.ta, build.db4ounit, build.db4ojdk1.2.tests">
		<mkdir dir="${dir.dist.classes.test.taj}" />
		<javac fork="true" 
            destdir="${dir.dist.classes.test.taj}" 
            debug="${javac.debug.mode}" 
            target="1.2" 
            source="1.2" 
            encoding="UTF-8">
            <src path="${dir.ta.test.src}" />
            <src path="${dir.taj.test.src}" />
			<classpath>
				<pathelement location="${file.ta.jar}"/>
				<pathelement path="${file.java1.2.jar}"/>
                <pathelement path="${file.bloat.jar}"/>
			    <pathelement path="${file.db4otools.jar}"/>
				<pathelement location="${file.db4ounit.jar}" />
				<pathelement location="${dir.dist.classes.test.jdk1.2}" />
			</classpath>
		</javac>
	</target>
	
	<target name="build.db4o.collections.tests" depends="build.db4o.collections, build.db4ounit">
		<mkdir dir="${dir.dist.classes.test.collections}" />
		<javac srcdir="${dir.collections}/test/src" 
            fork="true" 
            destdir="${dir.dist.classes.test.collections}" 
            debug="${javac.debug.mode}" 
            target="1.5" 
            source="1.5" 
            encoding="UTF-8">
			<classpath>
				<pathelement location="${file.collections.jar}" />
				<pathelement location="${file.java5.jar}" />
				<pathelement location="${file.ta.jar}" />
				<pathelement location="${file.db4ounit.jar}" />
			</classpath>
		</javac>
		
		<jar destfile="${file.collections.jar}">
			<fileset dir="${dir.dist.classes.collections}" />
		</jar>
	</target>

	<!--Run test -->
	
	<target name="run.tests.db4ojava" 
		depends="run.tests.jdk1.1, 
			run.tests.jdk1.2,
			run.tests.jdk5,
			run.tests.nqopt,
			run.tests.ta,
			run.tests.concurrency,
			run.tests.osgi"
	/>
	
	<target name="run.tests.jdk1.1" depends="init, build.db4ojdk1.1.tests">
        <path id="tests.java1.1.cp">
            <pathelement path="${dir.dist.classes.test.jdk1.1}" />
			<pathelement location="${file.java1.1.jar}" />
            <pathelement path="${file.db4ounit.jar}" />
			<pathelement location="${path.classpath.jdk1.1}" />
        </path>
		
		<java jvm="${file.jvm.jdk1.1}" 
			fork="true" 
			classname="com.db4o.db4ounit.jre11.AllTests" 
			failonerror="true" 
			timeout="1200000">
			<classpath refid="tests.java1.1.cp" />
			<sysproperty key="dir.workspace" value="${dir.workspace}" />
		</java>

		<java jvm="${file.jvm.jdk1.1}" 
			fork="true" 
			classname="com.db4o.test.AllTests" 
			failonerror="true" 
			timeout="1200000">
			<classpath refid="tests.java1.1.cp" />
			<arg value="-withExceptions" />
		</java>		
	</target>
	
	<target name="run.tests.jdk1.2" depends="init, build.db4ojdk1.2.tests">
        <path id="tests.java1.2.cp">
            <pathelement path="${dir.dist.classes.test.jdk1.2}" />
            <pathelement location="${file.java1.2.jar}" />
			<pathelement location="${file.db4ounit.jar}" />
        </path>

		<java jvm="${file.jvm.jdk1.3}" 
			fork="true" 
			classname="com.db4o.db4ounit.jre12.AllTestsJdk1_2" 
			failonerror="true" 
			timeout="1200000">
			<classpath refid="tests.java1.2.cp" />
			<sysproperty key="dir.workspace" value="${dir.workspace}" />
			<sysproperty key="db4oj.tests.bin" value="${dir.dist.classes.test.jdk1.2}" />
			<sysproperty key="db4o.archives.path" value="${dir.workspace}/db4o.archives/java1.2/" />
		</java>
        
		<java jvm="${file.jvm.jdk1.3}" 
			fork="true" 
			classname="com.db4o.test.AllTestsJdk1_2" 
			failonerror="true" 
			timeout="3600000">
			<classpath refid="tests.java1.2.cp" />
			<arg value="-withExceptions" />
		</java>
		
		<java jvm="${file.jvm.jdk1.3}" 
			fork="true" 
			classname="com.db4o.db4ounit.common.migration.AllCommonTests" 
			failonerror="true" 
			timeout="3600000">
			<classpath refid="tests.java1.2.cp" />
			<sysproperty key="db4oj.tests.bin" value="${dir.dist.classes.test.jdk1.2}"/>
			<arg value="-withExceptions" />
		</java>

	</target>
	
	<target name="run.tests.jdk5" depends="init, build.db4ojdk5.tests">
        <path id="tests.java5.cp">
            <pathelement path="${dir.dist.classes.test.jdk1.5}" />
            <pathelement location="${file.java5.jar}" />
			<pathelement location="${file.db4ounit.jar}" />
        </path>
        
		<java jvm="${file.jvm.jdk1.5}" 
			fork="true" 
			classname="com.db4o.db4ounit.jre5.AllTestsDb4oUnitJdk5" 
			failonerror="true" 
			timeout="10000000">
			<jvmarg value="-Xmx512m"/>
			<sysproperty key="dir.workspace" value="${dir.workspace}" />
			<classpath refid="tests.java5.cp" />
		</java>

        <java jvm="${file.jvm.jdk1.5}" 
        	fork="true" 
        	classname="com.db4o.test.AllTestsJdk5" 
        	failonerror="true" 
        	timeout="3600000">
			<classpath refid="tests.java5.cp" />
			<arg value="-withExceptions" />
		</java>
		<java jvm="${file.jvm.jdk1.5}" 
			fork="true" 
			classname="com.db4o.db4ounit.jre5.defrag.RunTestsDefrag" 
			failonerror="true" 
			timeout="3000000">
			<sysproperty key="dir.workspace" value="${dir.workspace}" />
			<classpath refid="tests.java5.cp" />
		</java>
		<java jvm="${file.jvm.jdk1.5}" 
			fork="true" 
			classname="com.db4o.test.AllTestsLegacy" 
			failonerror="true" 
			timeout="3600000">
			<classpath refid="tests.java5.cp" />
			<arg value="-withExceptions" />
		</java>
	</target>
	
	<target name="run.tests.nqopt" depends="build.nqopt.tests">
        <path id="tests.java1.2.cp">
            <pathelement path="${dir.dist.classes.test.jdk1.2}" />
            <pathelement location="${file.java1.2.jar}" />
			<pathelement location="${file.db4ounit.jar}" />
			<pathelement location="${file.ant.jar}" />
        </path>

		<java jvm="${file.jvm.jdk1.5}" fork="true" classname="com.db4o.test.nativequery.AllTestsNQ" failonerror="true" timeout="320000">
			<classpath>
				<pathelement location="${dir.dist.classes.test.nq}" />
                <pathelement location="${file.nqopt.jar}" />
				<pathelement location="${file.bloat.jar}" />
				<pathelement location="${file.db4otools.jar}" />
                <path refid="tests.java1.2.cp" />
			</classpath>
		</java>
	</target>
	
    <target name="run.tests.concurrency" depends="build.db4ojdk1.1.tests, build.db4ojdk5.tests">
        <java jvm="${file.jvm.jdk1.1}" 
        	fork="true" 
        	classname="com.db4o.db4ounit.jre11.concurrency.AllTests" 
        	failonerror="true" 
        	timeout="1200000">
			<classpath>
				<pathelement path="${dir.dist.classes.test.jdk1.1}" />
				<pathelement location="${file.java1.1.jar}" />
                <pathelement path="${file.db4ounit.jar}" />
				<pathelement location="${path.classpath.jdk1.1}" />
			</classpath>
            <jvmarg line="-ms32m -mx64m " />
		</java>
        
        <java jvm="${file.jvm.jdk1.5}" 
        	fork="true" 
        	classname="com.db4o.db4ounit.jre5.AllTestsConcurrency" 
        	failonerror="true" 
        	timeout="3600000">
			<classpath>
				<pathelement path="${dir.dist.classes.test.jdk1.5}" />
                <pathelement location="${file.java5.jar}" />
                <pathelement location="${file.db4ounit.jar}" />
			</classpath>
			<arg value="-withExceptions" />
		</java>
    </target>

	<target name="run.tests.osgi" depends="build.osgi.tests">
		<delete dir="${dir.test.osgi}"/>
		<mkdir dir="${dir.test.osgi}"/>
		<mkdir dir="${dir.test.osgi.conf}"/>
		<copy tofile="${file.test.osgi.conf}" file="${file.osgi}"/>
		<copy tofile="${dir.test.osgi}/db4o-osgi-test.jar" file="${file.osgi.test.jar}"/>
		<copy tofile="${dir.test.osgi}/db4o-osgi-edition.jar" file="${file.osgi.jar}"/>
		
		<java 
			classname="com.db4o.osgi.test.launch.TestLauncher" 
			fork="true" 
			jvm="${file.jvm.cdc_fp}" 
			failonerror="true" 
			timeout="1800000">
			<!-- TODO extract reference to build classpath in common.xml -->
			<classpath>
				<dirset dir="${dir.build.bin}"/>
				<fileset dir="${dir.build.lib}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Dosgi.configuration.area=${dir.test.osgi.conf}"/>
			<jvmarg value="-Dosgi.instance.area=${dir.test.osgi}/data"/>
			<sysproperty key="dir.workspace" value="${dir.workspace}" />
			<arg value="${dir.test.osgi}/db4o-osgi-edition.jar" />
			<arg value="${dir.test.osgi}/db4o-osgi-test.jar" />
		</java>
	</target>
	
	<target name="run.tests.ta" depends="build.ta.tests">
		<java classname="com.db4o.ta.tests.AllTests"
			fork="true"
			jvm="${file.jvm.jdk1.2}"
			failonerror="true"
			timeout="1800000">
			<classpath>
				<pathelement location="${dir.dist.classes.test.taj}"/>
				<pathelement location="${file.ta.jar}"/>
				<pathelement path="${file.java1.2.jar}"/>
	            <pathelement path="${file.bloat.jar}"/>
			    <pathelement path="${file.db4otools.jar}"/>
				<pathelement location="${file.db4ounit.jar}" />
			</classpath>
		</java>
		<java classname="com.db4o.ta.instrumentation.test.AllTests"
			fork="true"
			jvm="${file.jvm.jdk1.5}"
			failonerror="true"
			timeout="1800000">
			<classpath>
				<pathelement location="${dir.dist.classes.test.taj}"/>
				<pathelement location="${file.ta.jar}"/>
				<pathelement path="${file.java1.2.jar}"/>
	            <pathelement path="${file.bloat.jar}"/>
			    <pathelement path="${file.db4otools.jar}"/>
				<pathelement location="${file.db4ounit.jar}" />
				<pathelement location="${dir.dist.classes.test.jdk1.2}" />
			</classpath>
		</java>
	</target>
	
	<target name="run.tests.collections" depends="build.db4o.collections.tests">
		<java classname="com.db4o.db4ounit.jre5.collections.AllTests"
			fork="true"
			jvm="${file.jvm.jdk1.5}"
			failonerror="true"
			timeout="1800000">
			<classpath>
				<pathelement path="${dir.dist.classes.test.collections}" />
				<pathelement location="${file.collections.jar}" />
				<pathelement location="${file.java5.jar}" />
				<pathelement location="${file.ta.jar}" />
				<pathelement location="${file.db4ounit.jar}" />
			</classpath>
		</java>
	</target>
	
	<!-- Doctor -->
	<target name="doctor" depends="build.jtutorial">
		<ant antfile="run-doctor.xml" />
	</target>
	
	<target name="build.jtutorial" depends="build.db4ojdk1.2">
		<mkdir dir="${dir.dist.classes.tutorial}" />
		<javac fork="true" 
            srcdir="${dir.j.tutorial.src}" 
            destdir="${dir.dist.classes.tutorial}" 
            classpath="${file.java1.2.jar}" 
            target="1.3" 
            source="1.3" 
            debug="on" 
            encoding="UTF-8" />
	</target>

	<target name="build.javadoc" depends="build.javadoc.db4oj, build.javadoc.osgi" />
	
	<target name="build.javadoc.db4oj" depends="init, build.db4ojdk5">
		<javadoc classpath="${file.java5.jar}" 
            access="public" 
            windowtitle="db4o - database for objects - documentation" 
            header="db4o ${db4o.version.iteration.revision}" 
            destdir="${dir.dist.doc.api}">
			<bottom><![CDATA[<i>Copyright 2007 db4objects Inc. All rights reserved.</i>]]></bottom>
			<fileset dir="${java.src.core.jdk5}" includes="com/db4o/**/*.java">
				<exclude name="com/db4o/cs/**/*.java" />
				<exclude name="com/db4o/internal/**/*.java" />
				<exclude name="com/db4o/foundation/**/*.java" />
				<not>
					<contains text="* @exclude" />
				</not>
			</fileset>
			<fileset dir="${dir.j.tools.src}" includes="com/db4o/**/*.java">
				<not>
					<contains text="* @exclude" />
				</not>
			</fileset>

			<group title="Core Engine" packages="com.db4o" />
			<group title="Query Functionality" packages="com.db4o.query" />
			<group title="Configuration Features" packages="com.db4o.config" />
			<group title="Extended Functionality" packages="com.db4o.ext" />
			<group title="Messaging" packages="com.db4o.messaging" />
			<group title="Reflection" packages="com.db4o.reflect" />
			<group title="Tools" packages="com.db4o.tools" />
			<group title="Types" packages="com.db4o.types" />
		</javadoc>
		<copy file="${javadoc.stylesheet}" todir="${dir.dist.doc.api}" overwrite="true" />
	</target>
	
	<target name="build.javadoc.osgi" depends="init, build.db4ojdk5">
        <javadoc classpath="${file.java5.jar}" 
            access="public" 
            windowtitle="db4o - database for objects - documentation" 
            header="db4o ${db4o.version.iteration.revision}" 
            destdir="${dir.dist.doc.osgi}">
        	<bottom><![CDATA[<i>Copyright 2007 db4objects Inc. All rights reserved.</i>]]></bottom>
            <fileset dir="${dir.osgi.src}" includes="com/db4o/**/*.java"/>
            <group title="OSGi Services" packages="com.db4o.osgi" />
        </javadoc>
        
        <copy file="${javadoc.stylesheet}" todir="${dir.dist.doc.osgi}" overwrite="true" />
	</target>
	
	<target name="prepare.java.src" depends="build.osgi, build.osgi.tests">
		<copy todir="${dir.dist.java.src}/${name.project.db4ounit}">
			<fileset dir="${dir.db4ounit}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="src/**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.j}">
			<fileset dir="${dir.j}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.db4ounit.extensions}">
			<fileset dir="${dir.db4ounit.extensions}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="src/**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.j.tests}">
			<fileset dir="${dir.j.tests}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="src/**/*.java" />
				<include name="src/**/*.yap" />
				<include name="test/**/*.*" />
				<exclude name="test/db4oVersions/*.yap" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.jdk1.2}">
			<fileset dir="${dir.j.jdk1.2}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
				<include name="**/src/**/*.yap" />
				<include name="test/db4oVersions/*.*" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.jdk5}">
			<fileset dir="${dir.j.jdk5}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
				<include name="**/src/**/*.yap" />
				<include name="test/db4oVersions/*.*" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.bloat}">
			<fileset dir="${dir.bloat}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="src/**" />
				<exclude name="**/CVS/**" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.j.db4otools}">
			<fileset dir="${dir.j.db4otools}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="src/**" />
				<exclude name="**/CVS/**" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.nqopt}">
			<fileset dir="${dir.j.nqopt}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
				<include name="**/src/**/*.txt" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.ta}">
			<fileset dir="${dir.ta}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
				<include name="**/test/**/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.taj}">
			<fileset dir="${dir.taj}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
				<include name="**/test/**/*.java" />
				<include name="*.html" />
			</fileset>
		</copy>
		<copy todir="${dir.dist.java.src}/${name.project.osgi}">
			<fileset dir="${dir.osgi}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
			</fileset>
			<fileset dir="${dir.dist.classes.osgi}">
				<include name="**/lib/**/*.jar" /> 
		  	</fileset>
		</copy>
		<copy tofile="${dir.dist.java.src}/${name.project.osgi}/build.properties" file="${dir.osgi}/build.properties.TM">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.iteration.revision}"/>
			</filterset>
		</copy>
		<copy tofile="${dir.dist.java.src}/${name.project.osgi}/META-INF/MANIFEST.MF" file="${file.osgi.manifest}.TM">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.iteration.revision}"/>
			</filterset>
		</copy>
	
		<copy todir="${dir.dist.java.src}/${name.project.osgi.test}">
			<fileset dir="${dir.osgi.test}">
				<include name=".project" />
				<include name=".classpath" />
				<include name="**/src/**/*.java" />
			</fileset>
			<fileset dir="${dir.dist.classes.osgi.test}">
				<include name="**/lib/**/*.jar" /> 
		  	</fileset>
		</copy>
		<copy tofile="${dir.dist.java.src}/${name.project.osgi.test}/build.properties" file="${dir.osgi.test}/build.properties.TM">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.iteration.revision}"/>
			</filterset>
		</copy>
		<copy tofile="${dir.dist.java.src}/${name.project.osgi.test}/META-INF/MANIFEST.MF" file="${file.osgi.test.manifest}.TM">
			<filterset>
				<filter token="db4o.version.iteration.revision" value="${db4o.version.iteration.revision}"/>
				<filter token="bundle.activator" value="com.db4o.osgi.test.Db4oWorkspaceActivator"/>
			</filterset>
		</copy>
		<filehead beforePattern="package" header="${content.gplheader}" >
			<sources dir="${dir.dist.java.src}">
				<include name="**/*.java" />
			</sources>
		</filehead>
	</target>
	
	<target name="prepare.docs" depends="init, doctor, build.javadoc">
		<copy todir="${dir.dist.java.build.tutorial}">
			<fileset dir="${dir.j.tutorial.out.java}">
				<include name="**/**" />
			</fileset>
			<fileset dir="${dir.j.tutorial}">
				<include name="src/**/*.java" />
			</fileset>
		</copy>
		
		<copy file="${dir.config}/readme.html" tofile="${dir.dist.java.build}/readme.html" >
	    	<filterchain>	
	        	<striplinecomments>
	            	<comment value="!"/>
	        	</striplinecomments>
	       		<replacetokens>
	        		<token key="db4o.version.dotted" value="${db4o.version.iteration.revision}"/>
	        	</replacetokens>
	      	</filterchain>
	    </copy>
		
		<copy file="${dir.config}/java_doc_readme.html" tofile="${dir.dist.java.build}/doc/readme.html" />
		<copy file="${dir.config}/java_src_readme.html" tofile="${dir.dist.java.build}/src/readme.html" />
		<copy file="${dir.config}/java_lib_readme.html" tofile="${dir.dist.java.build}/lib/readme.html" >
			<filterchain>	
		    	<striplinecomments>
		    		<comment value="!"/>
		        </striplinecomments>
		    	<replacetokens>
		        	<token key="db4o.version.dotted" value="${db4o.version.iteration.revision}"/>
		        </replacetokens>
			</filterchain>
		</copy>
		<copy file="${dir.taj}/db4ota.readme.html" todir="${dir.dist.java.build}/lib" />
		
		<mkdir dir="${dir.dist.java.build}/doc/reference" />
		<copy todir="${dir.dist.java.build}/doc/reference">
			<fileset dir="../docWiki/java">
				<include name="**/**" />
			</fileset>
		</copy>
	</target>
	
	<target name="package.java" depends="init, build.db4ojava, build.db4ojava.tests, prepare.docs, prepare.java.src">
		<copy todir="${dir.dist.java.build}">
			<fileset dir="${dir.dist.java}" includes="lib/**" />
			<fileset dir="${dir.j}" includes="${filename.db4o.license}" />
		</copy>
		
		<copy file="${file.bloat.jar}" todir="${dir.dist.java.build}/lib" />
		<copy file="${file.ant.jar}" todir="${dir.dist.java.build}/lib" />
		<copy file="${file.bloat.license}" todir="${dir.dist.java.build}/lib" />
		<copy file="${file.ant.license}" todir="${dir.dist.java.build}/lib" />
		<copy file="${file.3rdpartylibs.java}" todir="${dir.dist.java.build}/lib" />

		<zip destfile="${file.dist.java}">
			<fileset dir="${dir.dist.java}" includes="${folder.build}/**" />
		</zip>
	</target>
	
	<target name="cc.step.1" depends="build.db4ojava, build.db4ojava.tests, run.tests.jdk5" />
	<target name="cc.step.3" 
		depends="run.tests.jdk1.1, 
				run.tests.jdk1.2, 
				run.tests.nqopt,
				run.tests.ta,
				run.tests.concurrency, 
				run.tests.osgi,
				run.tests.collections,
				package.java" />
</project>