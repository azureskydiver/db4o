---++ Bugs:

---+++ .NET:

   * For system types like Guid, DateTime, Uri, The ToString value really has to be shown.

   * Why does IList and ISerializable show up in the initial list of types? They show up as having no instances.

   * When showing the values of all of the fields of an instance, if the value is an object in it's own right, show the object ID of the value, and double-clicking it should focus on that object, or make it expandable.

   * Some way to show the type heirachy for a class. Example is ClassB : ClassA, the field inspector should show all fields defined by ClassB and ClassA with an additional line to note that ClassB is ClassA. When expanding the branch for ClassA (since it shows up in the inital list), also list instances of ClassB as ClassB (I think this should work).

   * Branches for class types which are marked abstract cannot be expanded.

   * P2LinkedLists do not show all list objects. User (may) have to navigate i_next members to get to all of the list elements.

   * Some exceptions: 

<verbatim>
Exception handling tree selection change 
java.lang.NullPointerException 
        at com.db4o.YapHandlers.handlerForClass(Unknown Source) 
        at com.db4o.YapClass.addMembers(Unknown Source) at 
        com.db4o.YapClass.checkChanges(Unknown Source) at 
        com.db4o.YapClassCollection.readYapClass(Unknown Source) 
        at com.db4o.YapClassCollection.getYapClass(Unknown Source) 
        at com.db4o.YapStream.getYapClass(Unknown Source) at 
        com.db4o.YapField.loadHandler(Unknown Source) at 
        com.db4o.YapClass.forceRead(Unknown Source) at 
        com.db4o.YapClass.readThis(Unknown Source) at 
        com.db4o.YapClassCollection.readYapClass(Unknown Source) 
        at com.db4o.YapClassCollection.getYapClass(Unknown Source) 
        at com.db4o.YapStream.getYapClass(Unknown Source) at 
        com.db4o.QConClass.<init>(Unknown Source) at 
        com.db4o.QQuery.constrain(Unknown Source) at 
        com.db4o.browser.model.Db4oDatabase.instances(Db4oDatabase.java:114) at 
        com.db4o.browser.model.Db4oDatabase.instanceIds(Db4oDatabase.java:123) at 
        com.db4o.browser.model.nodes.ClassNode.children(ClassNode.java:61) at 
        com.db4o.browser.model.AbstractGraphIterator.selectNextChild(AbstractGraphIterator.java:93) at 
        com.db4o.browser.gui.controllers.DetailController.setInput(DetailController.java:53) at 
        com.db4o.browser.gui.controllers.SelectionChangedController.selectionChanged(SelectionChangedController.java:39) at 
        com.db4o.browser.model.AbstractGraphIterator.fireSelectionChanged
        Event(AbstractGraphIterator.java:53) at 
        com.db4o.browser.model.AbstractGraphIterator.setSelectedPath(AbstractGraphIterator.java:45) at 
        com.db4o.browser.gui.controllers.tree.TreeSelectionChangedController.selectionChanged(TreeSelectionChangedController.java:40) at 
        org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:163) at 
        org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015) at 
        org.eclipse.core.runtime.Platform.run(Platform.java:757) at 
        org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:161) at 
        org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1676) at 
        org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:935) at 
        org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:961) at 
        org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:209) at 
        org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:204) at 
        org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:364) at 
        org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82) at 
        org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842) at 
        org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2908) at 
        org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2541) at 
        com.db4o.browser.gui.standalone.SWTProgram.runWithLog(SWTProgram.java:101) at 
        com.db4o.browser.gui.standalone.StandaloneBrowser.main(StandaloneBrowser.java:232)
Exception handling tree selection change 
java.lang.NullPointerException 
        at com.db4o.YapHandlers.handlerForClass(Unknown Source) 
        at com.db4o.YapClass.addMembers(Unknown Source) at 
        com.db4o.YapClass.checkChanges(Unknown Source) at 
        com.db4o.YapClassCollection.readYapClass(Unknown Source) 
        at com.db4o.YapClassCollection.getYapClass(Unknown Source) 
        at com.db4o.YapStream.getYapClass(Unknown Source) at 
        com.db4o.QConClass.<init>(Unknown Source) at 
        com.db4o.QQuery.constrain(Unknown Source) at 
        com.db4o.browser.model.Db4oDatabase.instances(Db4oDatabase.java:114) at 
        com.db4o.browser.model.Db4oDatabase.instanceIds(Db4oDatabase.java:123) at 
        com.db4o.browser.model.nodes.ClassNode.children(ClassNode.java:61) at 
        com.db4o.browser.model.AbstractGraphIterator.selectNextChild(Abstract GraphIterator.java:93) at 
        com.db4o.browser.gui.controllers.DetailController.setInput(DetailController.java:53) at 
        com.db4o.browser.gui.controllers.SelectionChangedController.selectionChanged(SelectionChangedController.java:39) at 
        com.db4o.browser.model.AbstractGraphIterator.fireSelectionChangedEvent(AbstractGraphIterator.java:53) at 
        com.db4o.browser.model.AbstractGraphIterator.setSelectedPath(AbstractGraphIterator.java:45) at 
        com.db4o.browser.gui.controllers.tree.TreeSelectionChangedController.selectionChanged(TreeSelectionChangedController.java:40) at 
        org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:163) at 
        org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015) at 
        org.eclipse.core.runtime.Platform.run(Platform.java:757) at 
        org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:161) at 
        org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1676) at 
        org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:935) at 
        org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:961) at 
        org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:209) at 
        org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:204) at 
        org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:364) at 
        org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82) at
        org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842) at 
        org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2908) at 
        org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2541) at 
        com.db4o.browser.gui.standalone.SWTProgram.runWithLog(SWTProgram.java:101) at 
        com.db4o.browser.gui.standalone.StandaloneBrowser.main(StandaloneBrowser.java:232) 
</verbatim>

----+++ Cross-platform

   * needs to be able to cope with refactored classes:
      * instances may have multiple fields of the same name
  
   * Query untyped variables by specifying the type

   * The toolbar leaks SWT Image resources **POSTPONED**
   
   * XSWT.parse disposes all resources in an application in its dispose listener! **POSTPONED**
   
   * When a database is reopened after updating classpath, the generic reflector is no longer used, causing instability


---++ Remaining Features:

   * Beautify UI; add icons in appropriate places
      * In tree: Icon for each node type
   * Implement tree layout algorithm for expanded classes **POSTPONED**
   * Implement grabbing hand scrolling mode for large queries
   * Click right side to navigate
      * (Hyperlink objects if object.hasChildren()?)
   * If right side is displaying a collection, display in a table
   
---++ Release engineering

   * Nullsoft installer for Windows platforms  (Rodrigo)


---++ Postponed Features

   * Figure out what class is selected in tree when File|Query... or query button pressed.  Highlight that class by default in query dialog.
   
   * Catch up MockDatabase to the generic reflector impl

   * Customize display of nodes (See Carl's notes below)
   
   * After initial release: fix tree/detail to implement IMaster/IDetail; submit changes to JFace

   * Unit testing verify that the iterator is always restored after it is used
      * template generator


---++ User feedback

   * Please show for every class:

      * All members of the class (preferably with an expanding branch for members defined in any base class(es).
      
      * The names of the members as well as the defined type of the field
      
      * The Value of each field and the type of the stored value (this is importaint)
      
      * For fields containing objects, an easy way to double-click or navigate to the object. It would be cool to show the db4o object ID for reference.
      
      * For objects containing an array/collection, a way to see all objects/values stored in the array, by index.
      
      * Please pay special attention to things like the Db4o LinkedList and HashMap classes!

   * would be nice to be able to modify data too  :-) 



----------------

---+++ Display Customization Features (Postponed to Version 1.5)

   * Be able to see how many subobjects per node
   
   * Click on a Java class in package explorer, see instances


   * Display properties:
      * Be able to configure the following on a global or a package basis: (select packages by substring or regex)

      * Display nodes: in addition to toString():
         * getDeclaredType(), getConcreteType(), getImplementedType(), 
         * call a specific method, use a special field;
         * *.*      [declared] [concrete] [method:(name)] [field:(name)]
         * *.db4o   [concrete] [method:(name)] [field:(name)]
         *          [declared] [concrete] [method:(name)] [field:(name)]
         *          [declared] [concrete] [method:(name)] [field:(name)]
         *          [declared] [concrete] [method:(name)] [field:(name)]

   * Filter from search box; limit search depth (add UI for this)
      * Incremental search **DONE**
      * Regular expression

   * Hide package names option
   * Hide these classes option (for hiding system classes)

---+++ Schedule

April: version 1.0

October timeframe: mature browser



---+++ Carl's notes:

  Popup Nodes, if there are too many. Display first 50 and use node to expand
  
  Would like to see the number items per class
  
  Double-clicking on a node: Browse from here.
  
  History for objects
  
  Update the browse view from selecting class in Java perspective
  
  Declared type and implemented type
  
  Hide package names

  [declared type] [concrete type] [method:toString] [method:(name)] [field:(name)]


---+++ Use-cases:

1) Run on mobile devices

2) Debug use-cases:

2.1) Navigate

2.2) Query

2.3) Visualize object graphs  (Java Spider)


----

Back to HomePage




