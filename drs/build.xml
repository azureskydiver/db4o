<!-- Copyright (C) 2007 db4objects Inc.  http://www.db4o.com -->

<project name="dRS" default="dist" basedir=".">
	<description>dRS build file</description>
	<!--
		To execute the "dist" target, which is to build the dRS release, 
		you need to create a "machine.properties" with this line:
		
	    font.pdf.base=C:/WINDOWS/Fonts/VERDANA.TTF
	    
	    OR wherever the location of the font is if you are on Linux
	-->	
	<property file="machine.properties" />
    	
	<property file="ant.properties" />

	<path id="class.path" description="universal classpath for all targets">
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
		
		<fileset dir="${drs.dir.dist.lib}">
			<include name="*.jar" />
		</fileset>
		
		<pathelement location="${drs.dir.dist.classes}" />
	</path>

    <available property="db4obuild.available" 
        file="../db4obuild/dist/java/lib" />
    
	<property name="dir.workspace" value=".." />
	<property file="${dir.workspace}/db4obuild/ant.properties" />
	<import file="${dir.workspace}/db4obuild/common.xml" optional="true"/>

	<condition property="svn.revision" value="0000">
		<not>
			<isset property="db4obuild.available" />
		</not>
	</condition>
	
	<target name="drs.properties" if="db4obuild.available" depends="get-svn-revision">
		<echo>Revision: ${svn.revision}</echo>
		<tstamp>
			<format property="db4o.iteration" pattern="w" offset="-29" unit="week"/>
		</tstamp>

		<property name="drs.version.dotted" 
			value="${drs.version.major}.${drs.version.minor}.${db4o.iteration}.${svn.revision}" />
	</target>

	<target name="get-svn-revision" unless="svn.revision">
		<svnRevision property="svn.revision" />
		<echo>Revision: ${svn.revision}</echo>
	</target>

	<target name="init" depends="drs.properties">
		<property name="drs.version.dotted" value="${drs.version.major}.${drs.version.minor}" />
		<property name="db4o.version.dotted" value="${drs.version.dotted}" />
		<property name="drs.file" value="dRS-${drs.version.dotted}-" />
		<property name="filename.drs.core.jar" value="${drs.file}core.jar" />
		<property name="filename.drs.test.jar" value="${drs.file}test.jar" />
		<property name="filename.drs.tutorial.jar" value="${drs.file}tutorial.jar" />
		<property name="filename.drs.zip" value="dRS-${drs.version.dotted}-java.zip" />
		
		<property name="file.drs.core.jar" value="${drs.dir.dist.lib}/${filename.drs.core.jar}" />
		<property name="file.drs.test.jar" value="${drs.dir.dist.lib}/${filename.drs.test.jar}" />
		<property name="file.drs.tutorial.jar" value="${drs.dir.dist.lib}/${filename.drs.tutorial.jar}" />
		<property name="file.drs.zip" value="${drs.dir.dist}/${filename.drs.zip}" />
		
		<mkdir dir="${drs.dir.dist.lib}" />
		<mkdir dir="${drs.dir.dist.api}" />
        
        <antcall target="copy.db4o.jar" />
	</target>
    
    <target name="copy.db4o.jar" if="db4obuild.available">
        <copy todir="lib">
            <fileset dir="../db4obuild/dist/java/lib" >
                <include name="db4o-*-java5.jar" />
                <include name="db4o-*-db4ounit.jar" />
            </fileset>
        </copy>
    </target>

	<target name="clean">
		<delete dir="${drs.dir.dist}" />
		<delete dir="${drs.dir.test}/temp" />
        <antcall target="clean.db4o.jar" />
	</target>
    
    <target name="clean.db4o.jar" if="db4obuild.available">
        <delete>
            <fileset dir="lib" >
                <include name="db4o-*-java5.jar" />
                <include name="db4o-*-db4ounit.jar" />
            </fileset>
        </delete>
    </target>

	<macrodef name="buildjar" description="compile, jar classes for various src folders">
		<attribute name="srcdir" />
		<attribute name="classpathrefid" />
		<attribute name="include" />
		<attribute name="exclude" />
		<attribute name="jar" />

		<sequential>
			<property name="temp.dir" value="${drs.dir.dist.classes}" />
			<delete dir="${temp.dir}" />
			<mkdir dir="${temp.dir}" />

			<javac srcdir="@{srcdir}" destdir="${temp.dir}">
				<classpath refid="@{classpathrefid}" />
			</javac>
			<copy todir="${temp.dir}">
				<fileset dir="@{srcdir}">
					<exclude name="@{exclude}" />
					<include name="@{include}" />
				</fileset>
			</copy>
			<jar jarfile="@{jar}" basedir="${temp.dir}" />
			<delete dir="${temp.dir}" />
		</sequential>
	</macrodef>

	<target name="build-core" description="jar the core src of drs">
		<buildjar srcdir="${drs.dir.src.core}" classpathrefid="class.path" jar="${file.drs.core.jar}" exclude="log4j.xml" include="**/*.xml" />
	</target>

	<target name="build-example" description="jar the example src of drs">
		<buildjar srcdir="${drs.dir.src.tutorial}" classpathrefid="class.path" jar="${file.drs.tutorial.jar}" exclude="log4j.xml" include="**/*.xml" />
	</target>

	<target name="build-regression" description="jar the test src of drs">
		<buildjar srcdir="${drs.dir.src.test}" classpathrefid="class.path" jar="${file.drs.test.jar}" exclude="log4j.xml" include="**/*.xml" />
	</target>

	<target name="build-all" depends="clean, init">
		<antcall target="build-core" />
		<antcall target="build-example" />
		<antcall target="build-regression" />
	</target>

	<target name="javadoc" if="db4obuild.available">
		<javadoc destdir="${drs.dir.dist.api}" author="true" version="true" use="true" windowtitle="dRS" classpathref="class.path">
            <header><![CDATA[<b>db4o Replication System (dRS)</b>]]></header>
            <doctitle><![CDATA[<h1>db4o Replication System (dRS)</h1><p align="left">This document is the API specification for db4o Replication System (dRS)]]></doctitle>
			<fileset dir="${drs.dir.src.core}" defaultexcludes="yes">
				<include name="com/db4o/drs/*.java" />
			</fileset>
		</javadoc>
		<copy file="${javadoc.stylesheet}" todir="${drs.dir.dist.api}" overwrite="true" />
	</target>

	<target name="dist" depends="build-all, javadoc" if="db4obuild.available">
		<property name="zipbasedir" value="drs-${drs.version.dotted}" />
		
		<copy file="compatibility.java.html" tofile="compatibility.html" overwrite="true">
					        <filterchain>
					           <striplinecomments>
					              <comment value="!"/>
					           </striplinecomments>
					           <replacetokens>
					                <token key="db4o.version.dotted" value="${db4o.version.dotted}"/>
					            </replacetokens>
					        </filterchain>
					    </copy>
		
        <antcall target="add-gplheader" />
        
		<zip destfile="${file.drs.zip}">
			<zipfileset dir="." prefix="${zipbasedir}" includes="machine.properties, ant.properties, build.xml, compatibility.html, readme.html, drs.license.html" />

			<zipfileset dir="lib" prefix="${zipbasedir}/lib" includes="*.jar, *.html" />
			<zipfileset dir="src" prefix="${zipbasedir}/src" excludes="misc/, jira/" />

			<zipfileset dir="docWiki/java" prefix="${zipbasedir}/doc/reference" />
			<zipfileset dir="${drs.dir.dist.api}" prefix="${zipbasedir}/doc/api" />

			<zipfileset file="${file.drs.core.jar}" fullpath="${zipbasedir}/lib/${filename.drs.core.jar}" />
			<zipfileset file="${file.drs.tutorial.jar}" fullpath="${zipbasedir}/lib/${filename.drs.tutorial.jar}" />
			<zipfileset file="${file.drs.test.jar}" fullpath="${zipbasedir}/lib/${filename.drs.test.jar}" />
		</zip>
	</target>
    
    <target name="add-gplheader" if="db4obuild.available">
        <taskdef name="filehead" classname="com.db4o.devtools.ant.FileHeadAntTask">
            <classpath>
                <pathelement location="../db4obuild/bin" />
            </classpath>
        </taskdef>
        
        <loadfile property="content.gplheader" srcfile="../db4obuild/config/gpl_comment.txt" encoding="iso-8859-1" />
        <filehead beforePattern="package" header="${content.gplheader}" >
			<sources dir="src">
				<include name="**/*.java" />
			</sources>
		</filehead>
    </target>

	<target name="run-example" depends="init">
		<java fork="true" classname="f1.stepbystep.StepByStepExample">
			<classpath refid="class.path" />
		</java>
	</target>
	
	<target name="run-regression" depends="init">
		<java fork="true" classname="com.db4o.drs.test.all.AllDrsTests">
			<classpath refid="class.path" />
		</java>
	</target>
</project>

