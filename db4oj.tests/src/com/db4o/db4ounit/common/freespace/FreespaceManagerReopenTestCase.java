/* Copyright (C) 2007  db4objects Inc.  http://www.db4o.com */

package com.db4o.db4ounit.common.freespace;

import com.db4o.config.*;
import com.db4o.internal.*;
import com.db4o.internal.slots.*;

import db4ounit.*;
import db4ounit.extensions.*;
import db4ounit.extensions.fixtures.*;


public class FreespaceManagerReopenTestCase extends AbstractDb4oTestCase implements OptOutCS, OptOutDefragSolo {
	
	private static int SIZE = 199331;

	public static void main(String[] args) {
		new FreespaceManagerReopenTestCase().runSolo();
	}
	
	protected void configure(Configuration config) {
		super.configure(config);
		config.bTreeNodeSize(4);
	    config.flushFileBuffers(false); // this just make the test faster
	}
	
	public void test() throws Exception{
		Slot testSlot = container().getSlot(SIZE);
		Slot reserveSlot = container().getSlot(SIZE / 2);
		
		reopen();
		container().free(testSlot);
		container().free(reserveSlot);
		
		reopen();
		Slot slot1 = container().getSlot(SIZE);
		Assert.isTrue(overlap(testSlot, slot1));
		reopen();
		Slot slot2 = container().getSlot(SIZE);
		Assert.isFalse(overlap(testSlot, slot2));
	}
	
	private boolean overlap(Slot slot, Slot other){
		Slot first = slot.address() < other.address() ? slot : other;
		Slot second =  slot.address() > other.address() ? slot : other;
		return first.address() + first.length() >= second.address();
	}
	
	private LocalObjectContainer container(){
		return ((LocalObjectContainer)db());
	}

}
