
# Settings for all circuits in the database benchmark.

# melbourne
#
# [objects]: number of objects to be written, read and deleted
# [commitintervall]: when to perform an intermediate commit during write and delete

melbourne.objects=6000 # , 6000
melbourne.commitinterval=1000 # , 1000



# sepang
#
# [depth]: depth of the tree

sepang.depth=14 # , 14


# sepangmulti
#
# [depth]: depth of the tree

sepangmulti.depth=14 # , 14
sepangmulti.objects=30


#  bahrain
#
# [objects]: number of objects to select from
# [selects]: number of queries to be run against all objects
# [updates]: number of updates to be run
# [commitinterval]: when to perform an intermediate commit during write and delete

bahrain.objects=100000 # , 100000
bahrain.selects=100000 # , 100000
bahrain.updates=2000 # ,2000
bahrain.commitinterval=1000 # ,1000


# imola
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects
# [commitinterval]: when to perform an intermediate commit during write and delete

imola.objects=500000 # , 500000
imola.selects=500000 # , 500000
imola.commitinterval=1000 # ,1000


# barcelona
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects

barcelona.objects=100000 # , 100000
barcelona.selects=100000 # , 100000


# monaco
#
# [objects]: number of objects in the database
# [commits]: number of added objects and commits

monaco.objects=1000000 # , 1000000
monaco.commits=70 # ,70


# nurburgring
#
# [objects]: number of objects to be written, read and deleted
# [commitintervall]: when to perform an intermediate commit during write and delete

nurburgring.objects=400000 # , 400000
nurburgring.commitinterval=1000 # ,1000


# montreal
#
# [size]: number of elements per list

montreal.size=5000 # , 5000


# indianapolis
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

indianapolis.objects=1000000 # , 1000000
indianapolis.selects=1000 # ,1000


# indianapolisunoptimized
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

indianapolisunoptimized.objects=100000 # , 100000
indianapolisunoptimized.selects=30 # ,30


# magnycours
#
# [objects]: number of elements per list

magnycours.objects=100000 # , 100000


# silverstone
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

silverstone.objects=100000 # , 100000
silverstone.updates=5 # ,5


#hockenheim
#
# [objects]: number of stored objects

hockenheim.objects=100000 # , 100000


#hungaroring
#
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

hungaroring.objects=100000 # , 100000
hungaroring.selects=30 # ,30


# istanbul
#
# [objects]: number of objects to store
# [selects]: number of query runs, executing the same query

istanbul.objects=100000 # , 100000
istanbul.selects=1000000 # ,1000000


