
# Settings for all circuits in the database benchmark.

# melbourne
#
# [objects]: number of objects to be written, read and deleted
# [commitintervall]: when to perform an intermediate commit during write and delete

melbourne.objects=3000,10000,30000,100000
melbourne.commitinterval=1000,1000,1000,1000


# sepang
#
# [depth]: depth of the tree

sepang.depth=12,14,16,18


#  bahrain
#
# [objects]: number of objects to select from
# [selects]: number of queries to be run against all objects
# [updates]: number of updates to be run
# [commitinterval]: when to perform an intermediate commit during write and delete

bahrain.objects=10000,30000,100000
bahrain.selects=9900,9900,9900
bahrain.updates=9900,9900,9900
bahrain.commitinterval=1000,1000,1000


# imola
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects
# [commitinterval]: when to perform an intermediate commit during write and delete

imola.objects=100000,200000,300000,400000
imola.selects=90000,90000,90000,90000
imola.commitinterval=1000,1000,1000,1000


# barcelona
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects

barcelona.objects=10000,30000,100000
barcelona.selects=9000,9000,9000


# monaco
#
# [objects]: number of objects in the database
# [commits]: number of added objects and commits

monaco.objects=100000,300000,1000000
monaco.commits=1000,1000,1000


# nurburgring
#
# [objects]: number of objects to be written, read and deleted
# [commitintervall]: when to perform an intermediate commit during write and delete

nurburgring.objects=3000,10000,30000,100000
nurburgring.commitinterval=1000,1000,1000,1000


# montreal
#
# [size]: number of elements per list

montreal.size=30,100,300,1000


# indianapolis
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

indianapolis.objects=3000,10000,30000,100000
indianapolis.selects=30,30,30,30


# kyalami
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

kyalami.objects=1,2,3,4
kyalami.selects=30,30,30,30

# magnycours
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

magnycours.objects=3000,10000,30000


# silverstone
#
# [objects]: number of objects
# [updates]: number of updates

silverstone.objects=10000,30000,100000,300000
silverstone.updates=10,10,10,10


#hockenheim
#
# [objects]: number of stored objects

hockenheim.objects=1000, 3000, 10000


#hungaroring
#
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

hungaroring.objects=3000,10000,30000,100000
hungaroring.selects=30,30,30,30


# istanbul
#
# [objects]: number of objects to store
# [selects]: number of query runs, executing the same query

istanbul.objects=10000,30000,100000,300000
istanbul.selects=20000,20000,20000,20000


