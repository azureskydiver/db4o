
# Settings for the database benchmark 
# with short test runs for debugging only
# Results are not signifant

# melbourne
#
# [objects]: number of objects to be written, read and deleted
# [commitintervall]: when to perform an intermediate commit during write and delete

melbourne.objects=1000,3000,10000
melbourne.commitinterval=1000,1000,1000


# sepang
#
# [treedepth]: depth of the tree
#

sepang.depth=2,3,4


#  bahrain
#
# [objects]: number of objects to select from
# [selects]: number of queries to be run against all objects
# [updates]: number of updates to be run
# [commitinterval]: when to perform an intermediate commit during write and delete
#

bahrain.objects=10,30,100,300
bahrain.selects=10,10
bahrain.updates=10,10
bahrain.commitinterval=1000,1000


# imola
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects
# [commitinterval]: when to perform an intermediate commit during write and delete

imola.objects=1000,3000,10000
imola.selects=500,500,500
imola.commitinterval=1000,1000,1000



# barcelona
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects

barcelona.objects=100,300,1000
barcelona.selects=10,10,10



# monaco
#
# [objects]: number of objects in the database
# [commits]: number of added objects and commits

monaco.objects=100,300,1000
monaco.commits=30,30,30


# nurburgring
#
# [objects]: number of objects to be written, read and deleted
# [commitintervall]: when to perform an intermediate commit during write and delete

nurburgring.objects=30,100,300
nurburgring.commitinterval=10,10,10


# montreal
#
# [size]: number of elements per list

montreal.size=5,10,20


# indianapolis
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

indianapolis.objects=5,10,20
indianapolis.selects=1,1,1


# magnycours
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

magnycours.objects=4,10,42


# silverstone
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

silverstone.objects=10,30,100
silverstone.updates=2,2,2


#hockenheim
#
# [objects]: number of stored objects
hockenheim.objects=10, 30, 100


#hungaroring
#
#
# [objects]: number of elements per list
# [selects]: number of queries to be run

hungaroring.objects=30,100,300
hungaroring.selects=2,2,2


# istanbul
#
# [objects]: number of objects to store
# [selects]: number of query runs, executing the same query

istanbul.objects=1000,3000,10000
istanbul.selects=10,10,10,10


