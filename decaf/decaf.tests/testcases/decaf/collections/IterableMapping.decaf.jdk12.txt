package decaf.collections;

import java.lang.*;
import java.util.*;

class MyIterable implements com.db4o.foundation.Iterable4 {
	public Iterator iterator() {
		return Iterators.coerce(new com.db4o.foundation.Collection4());
	}
}

class SimpleIterable {
	public void test() {
		justIterate(new com.db4o.foundation.Collection4());		
		justIterateGeneric(new com.db4o.foundation.Collection4());
		justIterate(new MyIterable());
	}
		
	private void justIterate(com.db4o.foundation.Iterable4 iterable) {
		for (Iterator vIter = Iterators.coerce(iterable); vIter.hasNext();) {
			final int v = ((Integer) vIter.next()).intValue();
			System.out.println(v);
		}
	}
	
	private void justIterateGeneric(com.db4o.foundation.Iterable4 iterable) {
		for (Iterator vIter = Iterators.coerce(iterable); vIter.hasNext();) {
			final Object v = ((Object) vIter.next());
			System.out.println("First Pass: " + v);
		}
	
		for (Iterator v2Iter = Iterators.coerce(iterable); v2Iter.next();) {
			final Object v2 = ((Object) v2Iter.current());
			System.out.println("Second Pass: " + v2);
		}
	}		
}